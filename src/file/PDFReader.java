/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package file;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import org.icepdf.ri.common.ComponentKeyBinding;
import org.icepdf.ri.common.SwingController;
import org.icepdf.ri.common.SwingViewBuilder;

/**
 *
 * @author LENOVO
 */
public class PDFReader extends javax.swing.JFrame {

    private SwingController swingController;
    
    /**
     * Creates new form PDFReader
     */
    public PDFReader(String route) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setState(MAXIMIZED_BOTH);
        
        jScrollPaneContent.getVerticalScrollBar().setUnitIncrement(15);
        jScrollPaneContent.getHorizontalScrollBar().setUnitIncrement(15);
        
        
        try {
            
            URL url = new URL(route);
            swingController = new SwingController();
            SwingViewBuilder swingViewBuilder = new SwingViewBuilder(swingController);
            JPanel jPanelContent = swingViewBuilder.buildViewerPanel();
            ComponentKeyBinding.install(swingController,jPanelContent);
            swingController.getDocumentViewController().setAnnotationCallback(new org.icepdf.ri.common.MyAnnotationCallback(swingController.getDocumentViewController()));
            swingController.openDocument(url); 
            jScrollPaneContent.setViewportView(jPanelContent);
            swingViewBuilder = null;
            jPanelContent = null;
            url = null;
            swingController = null;
        } catch (MalformedURLException ex) {
            Logger.getLogger(PDFReader.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPaneContent = new javax.swing.JScrollPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));
        setType(java.awt.Window.Type.POPUP);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.CardLayout());
        getContentPane().add(jScrollPaneContent, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        swingController.getDocument().dispose();
        swingController.closeDocument();
        swingController = null;
        this.dispose();
    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPaneContent;
    // End of variables declaration//GEN-END:variables
}
