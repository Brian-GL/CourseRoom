/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels.GeneralPanels;

import panels.GeneralPanels.GeneralMusicPanel;
import com.github.javafaker.Faker;
import java.awt.Color;
import java.awt.Image;
import java.io.IOException;
import java.net.URL;
import java.util.Locale;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import data.collections.PairDoublyLinkedList;
import data.interfaces.ColorInterface;
import data.structures.Pair;
import java.awt.image.PixelGrabber;
import javax.swing.Icon;

/**
 *
 * @author LENOVO
 */
public class GeneralMemberPanel extends javax.swing.JPanel implements ColorInterface{
    
    private String full_name;
    private Color firstColor, fontColor, secondColor, secondFontColor;

    /**
     * Creates new form MemberPanel
     */
    public GeneralMemberPanel() {
        initComponents();
        try {
            System.out.println("Member -> Getting Image From https://loremflickr.com/142/142/sunset,beach/all");
            URL imageURL = new URL("https://loremflickr.com/142/142/sunset,beach/all");
            Image image = ImageIO.read(imageURL);
            setColors(image);
            ImageIcon imageIcon = new ImageIcon(image);
            jLabelMemberPhoto.setIcon(imageIcon);
            image.flush();
            image = null;
            Faker faker = new Faker(new Locale("es","MX"));
            String nombre = faker.name().firstName() + " " +faker.name().firstName();
            String apellido = faker.name().lastName() + " " + faker.name().lastName();
            String username = faker.name().username();
            
            full_name = nombre + " "+ apellido;
            jLabelMemberLastName.setText(apellido);
            jLabelMemberName.setText(nombre);
            jLabelMemberUserName.setText(username);
            
            apellido = nombre = username = null;
            
            faker = null;
            
            
        } catch (IOException ex) {
            Logger.getLogger(GeneralMemberPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelMemberPhoto = new javax.swing.JLabel();
        jLabelMemberName = new javax.swing.JLabel();
        jLabelMemberLastName = new javax.swing.JLabel();
        jLabelMemberUserName = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(32767, 230));
        setMinimumSize(new java.awt.Dimension(365, 230));
        setPreferredSize(new java.awt.Dimension(365, 230));

        jLabelMemberPhoto.setMaximumSize(new java.awt.Dimension(130, 130));
        jLabelMemberPhoto.setMinimumSize(new java.awt.Dimension(130, 130));
        jLabelMemberPhoto.setPreferredSize(new java.awt.Dimension(130, 130));

        jLabelMemberName.setFont(new java.awt.Font("Gadugi", 1, 15)); // NOI18N
        jLabelMemberName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMemberName.setText("Nombre Del Miembro");
        jLabelMemberName.setToolTipText("Nombre(s)");

        jLabelMemberLastName.setFont(new java.awt.Font("Gadugi", 2, 15)); // NOI18N
        jLabelMemberLastName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMemberLastName.setText("Apellido Del Miembro");
        jLabelMemberLastName.setToolTipText("Apellido(s)");

        jLabelMemberUserName.setFont(new java.awt.Font("Gadugi", 3, 15)); // NOI18N
        jLabelMemberUserName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelMemberUserName.setText("UserName Del Miembro");
        jLabelMemberUserName.setToolTipText("UserName");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelMemberName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelMemberLastName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelMemberUserName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelMemberPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelMemberPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelMemberName)
                .addGap(6, 6, 6)
                .addComponent(jLabelMemberLastName)
                .addGap(6, 6, 6)
                .addComponent(jLabelMemberUserName))
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void setColors(Image image){
        
        try {
            Random colorRandom = new Random(System.currentTimeMillis());
            int maximum = 0;
            firstColor = Color.BLACK;
            PairDoublyLinkedList<Integer, Color> colorList = new PairDoublyLinkedList<>();
            PixelGrabber pg = new PixelGrabber(image, 0, 0, -1, -1, false);
            int large = image.getWidth(null)/2;
            if (pg.grabPixels()) {
                int[] pixels = (int[]) pg.getPixels();
                for(int i = 0; i < pixels.length; i++){
                    int pixel = pixels[i];
                    int  red = (pixel  & 0x00ff0000) >> 16;
                    int  green = (pixel & 0x0000ff00) >> 8;
                    int  blue = pixel & 0x000000ff;
                    Color color = new Color(red,green,blue);
                    Pair<Integer, Color> pair = colorList.get_from_second(color);
            
                    if (pair != null) {//exist
                        int number = pair.first()+ 1;
                        pair.first(number);
                        if (number > maximum) {
                            firstColor = color;
                            maximum = number;
                        }
                    } else {
                        colorList.push_back(1, color);
                    }

                    color = null;
                    i += colorRandom.nextInt(large+1) + large;
                }
                
                secondColor = firstColor;
            
                int iterations = 0;
                if(colorList.size() > 1){
                    
                    while(Math.abs(secondColor.getRGB() - firstColor.getRGB()) < 3000000){
                        int position = colorRandom.nextInt((int)colorList.size()-1);
                        secondColor = colorList.get(position).second();
                        iterations++;
                        if(iterations > 25){
                             while(firstColor.getRGB() == secondColor.getRGB()){
                                position = colorRandom.nextInt((int)colorList.size()-1);
                                secondColor = colorList.get(position).second();
                            }
                             break;
                        }
                    }
                }
               
                int red = firstColor.getRed();
                fontColor = (red >= 155) ? Color.BLACK : Color.WHITE;
                red = secondColor.getRed();
                secondFontColor = (red >= 155) ? Color.BLACK : Color.WHITE;
                
                colorList.clear();
                jLabelMemberLastName.setForeground(getFontColor());
                jLabelMemberUserName.setForeground(getFontColor());
                jLabelMemberName.setForeground(getFontColor());
                this.setBackground(getFirstColor());
                this.setBorder(javax.swing.BorderFactory.createLineBorder(secondColor));

                colorRandom = null;
                colorList = null;
                pg = null;
                pixels = null;
            }
            
        } catch (InterruptedException ex) {
            Logger.getLogger(GeneralMusicPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public String getFullName(){
        return this.full_name;
    }
    
    public Icon getImageIcon(){
        return jLabelMemberPhoto.getIcon();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelMemberLastName;
    private javax.swing.JLabel jLabelMemberName;
    private javax.swing.JLabel jLabelMemberPhoto;
    private javax.swing.JLabel jLabelMemberUserName;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the firstColor
     */
    public Color getFirstColor() {
        return firstColor;
    }

    /**
     * @return the fontColor
     */
    public Color getFontColor() {
        return fontColor;
    }

    /**
     * @return the secondColor
     */
    public Color getSecondColor() {
        return secondColor;
    }

    /**
     * @return the secondFontColor
     */
    public Color getSecondFontColor() {
        return secondFontColor;
    }
}
