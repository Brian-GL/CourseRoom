/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels.generals;

import data.interfaces.Limpieza_Interface;
import data.interfaces.Reproductor_Interface;
import main.MainFrame;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import uk.co.caprica.vlcj.media.MediaRef;
import uk.co.caprica.vlcj.media.TrackType;
import uk.co.caprica.vlcj.player.base.MediaPlayer;
import uk.co.caprica.vlcj.player.base.MediaPlayerEventListener;
import uk.co.caprica.vlcj.player.component.EmbeddedMediaPlayerComponent;

/**
 *
 * @author LENOVO
 */
public class General_Video_Panel extends javax.swing.JPanel implements Reproductor_Interface, Limpieza_Interface{

    private boolean bandera_Barra_Progreso;
    private EmbeddedMediaPlayerComponent componente_Embebido_Video;
   
    
    public General_Video_Panel(String ruta){
        initComponents();
        bandera_Barra_Progreso = true;
       
        componente_Embebido_Video = new EmbeddedMediaPlayerComponent();
        
        video_JPanel.add("Vista_Video",componente_Embebido_Video.videoSurfaceComponent());
        
        duracion_Total_JLabel.setForeground(MainFrame.getFirstColor());
        progreso_JLabel.setForeground(MainFrame.getFirstColor());
        titulo_JLabel.setForeground(MainFrame.getFirstColor());
        progreso_JSlider.setBackground(MainFrame.getFirstColor());
        progreso_JSlider.setForeground(MainFrame.getFontColor());
        
        
        Establecer_Eventos_Reproductor();
        
        componente_Embebido_Video.mediaPlayer().media().play(ruta);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        controles_JPanel = new javax.swing.JPanel();
        titulo_JLabel = new javax.swing.JLabel();
        progreso_JSlider = new javax.swing.JSlider();
        duracion_Total_JLabel = new javax.swing.JLabel();
        progreso_JLabel = new javax.swing.JLabel();
        video_JPanel = new javax.swing.JPanel();

        setBackground(java.awt.Color.black);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));

        controles_JPanel.setBackground(new Color (49,88,186,185));
        controles_JPanel.setFocusable(false);
        controles_JPanel.setMinimumSize(new java.awt.Dimension(800, 90));
        controles_JPanel.setOpaque(false);

        titulo_JLabel.setBackground(new Color (49,88,186,185));
        titulo_JLabel.setFont(new java.awt.Font("Gadugi", 1, 17)); // NOI18N
        titulo_JLabel.setForeground(new java.awt.Color(104, 194, 232));
        titulo_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo_JLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/boton-de-play-video.png"))); // NOI18N
        titulo_JLabel.setText("TÃ­tulo Del Video");
        titulo_JLabel.setFocusable(false);
        titulo_JLabel.setPreferredSize(new java.awt.Dimension(650, 20));

        progreso_JSlider.setBackground(new Color (49,88,186,185));
        progreso_JSlider.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        progreso_JSlider.setForeground(new java.awt.Color(104, 194, 232));
        progreso_JSlider.setMaximum(2147483647);
        progreso_JSlider.setValue(0);
        progreso_JSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        progreso_JSlider.setEnabled(false);
        progreso_JSlider.setFocusable(false);
        progreso_JSlider.setPreferredSize(new java.awt.Dimension(650, 20));
        progreso_JSlider.setValueIsAdjusting(true);

        duracion_Total_JLabel.setBackground(new Color (49,88,186,185));
        duracion_Total_JLabel.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        duracion_Total_JLabel.setForeground(new java.awt.Color(104, 194, 232));
        duracion_Total_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        duracion_Total_JLabel.setText("00:00:00");
        duracion_Total_JLabel.setFocusable(false);

        progreso_JLabel.setBackground(new Color (49,88,186,185));
        progreso_JLabel.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        progreso_JLabel.setForeground(new java.awt.Color(104, 194, 232));
        progreso_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        progreso_JLabel.setText("00:00:00");
        progreso_JLabel.setFocusable(false);

        javax.swing.GroupLayout controles_JPanelLayout = new javax.swing.GroupLayout(controles_JPanel);
        controles_JPanel.setLayout(controles_JPanelLayout);
        controles_JPanelLayout.setHorizontalGroup(
            controles_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controles_JPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(progreso_JLabel)
                .addGap(8, 8, 8)
                .addGroup(controles_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titulo_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(progreso_JSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(duracion_Total_JLabel)
                .addGap(6, 6, 6))
        );
        controles_JPanelLayout.setVerticalGroup(
            controles_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controles_JPanelLayout.createSequentialGroup()
                .addComponent(titulo_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(controles_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progreso_JLabel)
                    .addComponent(progreso_JSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(duracion_Total_JLabel))
                .addContainerGap())
        );

        video_JPanel.setBackground(java.awt.Color.black);
        video_JPanel.setMinimumSize(new java.awt.Dimension(800, 513));
        video_JPanel.setPreferredSize(new java.awt.Dimension(800, 513));
        video_JPanel.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(video_JPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(controles_JPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(video_JPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(controles_JPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel controles_JPanel;
    private javax.swing.JLabel duracion_Total_JLabel;
    private javax.swing.JLabel progreso_JLabel;
    private javax.swing.JSlider progreso_JSlider;
    private javax.swing.JLabel titulo_JLabel;
    private javax.swing.JPanel video_JPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void Limpiar() {
        componente_Embebido_Video.release();
        componente_Embebido_Video = null;
    }
    
     @Override
    public void Establecer_Eventos_Reproductor(){

      
        //Listener para el slider progress
        progreso_JSlider.addMouseListener(new MouseListener() {

            @Override
            public void mouseClicked(MouseEvent e) {

            }

            @Override
            public void mousePressed(MouseEvent e) {
                bandera_Barra_Progreso = false;
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                bandera_Barra_Progreso = true;
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }

        });

        //Control para cambiar a posicion de reproduccion
        progreso_JSlider.addChangeListener((ChangeEvent e) -> {
            Object fuente;
            if (!bandera_Barra_Progreso) {
                fuente = e.getSource();
                componente_Embebido_Video.mediaPlayer().controls().setTime(((JSlider) fuente).getValue());
            }
        });
        
        componente_Embebido_Video.videoSurfaceComponent().addMouseMotionListener(new MouseMotionListener() {
            
            boolean es_Visible;
            
            @Override
            public void mouseDragged(MouseEvent e) {
                
            }

            @Override
            public void mouseMoved(MouseEvent e) {
                es_Visible = e.getLocationOnScreen().y >= video_JPanel.getPreferredSize().getHeight();
                
                if(es_Visible && !controles_JPanel.isVisible())
                    controles_JPanel.setVisible(true);
                else if((!es_Visible && controles_JPanel.isVisible()))
                    controles_JPanel.setVisible(false);
            }
        });
        
        
        componente_Embebido_Video.mediaPlayer().events().addMediaPlayerEventListener(new MediaPlayerEventListener() {
            String segundos;
            int tiempo;
            int conversion_Tiempo;
            
            @Override
            public void mediaChanged(MediaPlayer mp, MediaRef mr) {
                
            }

            @Override
            public void opening(MediaPlayer mp) {
                
            }

            @Override
            public void buffering(MediaPlayer mp, float f) {
                
            }

            @Override
            public void playing(MediaPlayer mp) {
                
            }

            @Override
            public void paused(MediaPlayer mp) {
                
            }

            @Override
            public void stopped(MediaPlayer mp) {
                
            }

            @Override
            public void forward(MediaPlayer mp) {
                
            }

            @Override
            public void backward(MediaPlayer mp) {
                
            }

            @Override
            public void finished(MediaPlayer mp) {
                
            }

            @Override
            public void timeChanged(MediaPlayer mp, long l) {
                
            }

            @Override
            public void positionChanged(MediaPlayer mp, float f) {
                 if (bandera_Barra_Progreso) {
                    tiempo = (int) componente_Embebido_Video.mediaPlayer().status().time();
                    conversion_Tiempo = tiempo / 1000;
                    progreso_JSlider.setValue(tiempo);
                    segundos = MainFrame.Convertir_Segundos(conversion_Tiempo);
                    progreso_JLabel.setText(segundos);
                }
            }

            @Override
            public void seekableChanged(MediaPlayer mp, int i) {
                
            }

            @Override
            public void pausableChanged(MediaPlayer mp, int i) {
                
            }

            @Override
            public void titleChanged(MediaPlayer mp, int i) {
                
            }

            @Override
            public void snapshotTaken(MediaPlayer mp, String string) {
                
            }

            @Override
            public void lengthChanged(MediaPlayer mp, long l) {
                
            }

            @Override
            public void videoOutput(MediaPlayer mp, int i) {
                
            }

            @Override
            public void scrambledChanged(MediaPlayer mp, int i) {
                
            }

            @Override
            public void elementaryStreamAdded(MediaPlayer mp, TrackType tt, int i) {
                
            }

            @Override
            public void elementaryStreamDeleted(MediaPlayer mp, TrackType tt, int i) {
                
            }

            @Override
            public void elementaryStreamSelected(MediaPlayer mp, TrackType tt, int i) {
                
            }

            @Override
            public void corked(MediaPlayer mp, boolean bln) {
                
            }

            @Override
            public void muted(MediaPlayer mp, boolean bln) {
                
            }

            @Override
            public void volumeChanged(MediaPlayer mp, float f) {
                
            }

            @Override
            public void audioDeviceChanged(MediaPlayer mp, String string) {
                
            }

            @Override
            public void chapterChanged(MediaPlayer mp, int i) {
                
            }

            @Override
            public void error(MediaPlayer mp) {
                
            }

            @Override
            public void mediaPlayerReady(MediaPlayer mp) {
                
            }
        });
    }

    
}
