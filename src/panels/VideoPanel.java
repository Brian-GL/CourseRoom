/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panels;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
import javax.swing.SwingUtilities;
import javax.swing.event.ChangeEvent;
import javax.swing.filechooser.FileNameExtensionFilter;
import uk.co.caprica.vlcj.media.MediaRef;
import uk.co.caprica.vlcj.media.Meta;
import uk.co.caprica.vlcj.media.TrackType;
import uk.co.caprica.vlcj.player.base.MediaPlayer;
import uk.co.caprica.vlcj.player.base.MediaPlayerEventListener;
import uk.co.caprica.vlcj.player.base.State;
import uk.co.caprica.vlcj.player.component.EmbeddedMediaPlayerComponent;

/**
 *
 * @author LENOVO
 */
public class VideoPanel extends javax.swing.JPanel {

    private boolean flag;
    private ImageIcon playImage;
    private ImageIcon pauseImage;
    private EmbeddedMediaPlayerComponent embeddedMediaPlayerComponent;
    /**
     * Creates new form VideoPanel
     */
    public VideoPanel(){
        initComponents();
        flag = true;
       
        embeddedMediaPlayerComponent = new EmbeddedMediaPlayerComponent();
       
         
        playImage = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("../resources/icons/boton-de-play.png")));
        pauseImage = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("../resources/icons/boton-de-pausa.png")));
        jButtonPlayPause.setIcon(playImage);
        jPanelVideoView.add("videoView",embeddedMediaPlayerComponent.videoSurfaceComponent());
        
        setPlayerEvents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelButtons = new javax.swing.JPanel();
        jButtonAbrirVideo = new javax.swing.JButton();
        jLabelTitulo = new javax.swing.JLabel();
        jButtonPlayPause = new javax.swing.JButton();
        jSliderProgreso = new javax.swing.JSlider();
        jButtonStop = new javax.swing.JButton();
        jLabelDuracionTotal = new javax.swing.JLabel();
        jLabelProgreso = new javax.swing.JLabel();
        jSliderRate = new javax.swing.JSlider();
        jLabelRate = new javax.swing.JLabel();
        jPanelVideoView = new javax.swing.JPanel();

        setBackground(java.awt.Color.black);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));

        jPanelButtons.setBackground(new Color (49,88,186,185));
        jPanelButtons.setFocusable(false);
        jPanelButtons.setMinimumSize(new java.awt.Dimension(800, 90));
        jPanelButtons.setOpaque(false);

        jButtonAbrirVideo.setBackground(new Color (49,88,186,0));
        jButtonAbrirVideo.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        jButtonAbrirVideo.setForeground(new java.awt.Color(104, 194, 232));
        jButtonAbrirVideo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/subir.png"))); // NOI18N
        jButtonAbrirVideo.setToolTipText("Abrir Archivo");
        jButtonAbrirVideo.setBorder(null);
        jButtonAbrirVideo.setFocusable(false);
        jButtonAbrirVideo.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jButtonAbrirVideo.setIconTextGap(0);
        jButtonAbrirVideo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAbrirVideoMouseClicked(evt);
            }
        });

        jLabelTitulo.setBackground(new Color (49,88,186,185));
        jLabelTitulo.setFont(new java.awt.Font("Gadugi", 1, 17)); // NOI18N
        jLabelTitulo.setForeground(new java.awt.Color(104, 194, 232));
        jLabelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/boton-de-play-video.png"))); // NOI18N
        jLabelTitulo.setText("Título Del Video");
        jLabelTitulo.setFocusable(false);
        jLabelTitulo.setPreferredSize(new java.awt.Dimension(650, 20));

        jButtonPlayPause.setBackground(new Color (49,88,186,0));
        jButtonPlayPause.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        jButtonPlayPause.setForeground(new java.awt.Color(104, 194, 232));
        jButtonPlayPause.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/boton-de-play.png"))); // NOI18N
        jButtonPlayPause.setToolTipText("Reproducir/Pausar");
        jButtonPlayPause.setActionCommand("PlayPause");
        jButtonPlayPause.setBorder(null);
        jButtonPlayPause.setFocusable(false);
        jButtonPlayPause.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jButtonPlayPause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonPlayPauseMouseClicked(evt);
            }
        });

        jSliderProgreso.setBackground(new Color (49,88,186,185));
        jSliderProgreso.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jSliderProgreso.setForeground(new java.awt.Color(104, 194, 232));
        jSliderProgreso.setMaximum(2147483647);
        jSliderProgreso.setValue(0);
        jSliderProgreso.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSliderProgreso.setEnabled(false);
        jSliderProgreso.setFocusable(false);
        jSliderProgreso.setPreferredSize(new java.awt.Dimension(650, 20));
        jSliderProgreso.setValueIsAdjusting(true);

        jButtonStop.setBackground(new Color (49,88,186,0));
        jButtonStop.setFont(new java.awt.Font("Segoe UI Symbol", 1, 18)); // NOI18N
        jButtonStop.setForeground(new java.awt.Color(104, 194, 232));
        jButtonStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/icons/boton-detener.png"))); // NOI18N
        jButtonStop.setToolTipText("Parar");
        jButtonStop.setActionCommand("PlayPause");
        jButtonStop.setBorder(null);
        jButtonStop.setFocusable(false);
        jButtonStop.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jButtonStop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonStopMouseClicked(evt);
            }
        });

        jLabelDuracionTotal.setBackground(new Color (49,88,186,185));
        jLabelDuracionTotal.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabelDuracionTotal.setForeground(new java.awt.Color(104, 194, 232));
        jLabelDuracionTotal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelDuracionTotal.setText("00:00:00");
        jLabelDuracionTotal.setFocusable(false);

        jLabelProgreso.setBackground(new Color (49,88,186,185));
        jLabelProgreso.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabelProgreso.setForeground(new java.awt.Color(104, 194, 232));
        jLabelProgreso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelProgreso.setText("00:00:00");
        jLabelProgreso.setFocusable(false);

        jSliderRate.setMajorTickSpacing(10);
        jSliderRate.setMaximum(150);
        jSliderRate.setMinimum(50);
        jSliderRate.setToolTipText("Velocidad De Reproducción");
        jSliderRate.setValue(100);
        jSliderRate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSliderRate.setEnabled(false);
        jSliderRate.setFocusable(false);
        jSliderRate.setMinimumSize(new java.awt.Dimension(36, 32));
        jSliderRate.setPreferredSize(new java.awt.Dimension(200, 32));

        jLabelRate.setBackground(new Color (49,88,186,185));
        jLabelRate.setFont(new java.awt.Font("Gadugi", 1, 14)); // NOI18N
        jLabelRate.setForeground(new java.awt.Color(104, 194, 232));
        jLabelRate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelRate.setText("100%");
        jLabelRate.setToolTipText("Velocidad De Reproducción");
        jLabelRate.setFocusable(false);
        jLabelRate.setMinimumSize(new java.awt.Dimension(36, 32));
        jLabelRate.setPreferredSize(new java.awt.Dimension(52, 32));

        javax.swing.GroupLayout jPanelButtonsLayout = new javax.swing.GroupLayout(jPanelButtons);
        jPanelButtons.setLayout(jPanelButtonsLayout);
        jPanelButtonsLayout.setHorizontalGroup(
            jPanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelButtonsLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelButtonsLayout.createSequentialGroup()
                        .addComponent(jButtonAbrirVideo)
                        .addGap(5, 5, 5)
                        .addComponent(jButtonPlayPause)
                        .addGap(6, 6, 6)
                        .addComponent(jButtonStop)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSliderRate, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelButtonsLayout.createSequentialGroup()
                        .addComponent(jLabelProgreso)
                        .addGap(8, 8, 8)
                        .addGroup(jPanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSliderProgreso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelButtonsLayout.createSequentialGroup()
                        .addComponent(jLabelDuracionTotal)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelButtonsLayout.createSequentialGroup()
                        .addComponent(jLabelRate, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanelButtonsLayout.setVerticalGroup(
            jPanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelButtonsLayout.createSequentialGroup()
                .addGroup(jPanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelButtonsLayout.createSequentialGroup()
                        .addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addGroup(jPanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelProgreso)
                            .addComponent(jSliderProgreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelDuracionTotal))
                        .addGroup(jPanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelButtonsLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonAbrirVideo)
                                    .addComponent(jButtonPlayPause)
                                    .addComponent(jButtonStop)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelButtonsLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSliderRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabelRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        jPanelVideoView.setBackground(java.awt.Color.black);
        jPanelVideoView.setMinimumSize(new java.awt.Dimension(800, 513));
        jPanelVideoView.setPreferredSize(new java.awt.Dimension(800, 513));
        jPanelVideoView.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelVideoView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelButtons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelVideoView, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanelButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAbrirVideoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAbrirVideoMouseClicked
        // TODO add your handling code here:
     

        if(SwingUtilities.isLeftMouseButton(evt)){
            JFileChooser fileChooser = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("Videos", "mp4", "flv", "webm", "3gp", "dat", "mkv");
            fileChooser.addChoosableFileFilter(filter);
            fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            fileChooser.setAcceptAllFileFilterUsed(true);
            int result = fileChooser.showOpenDialog(this);

            if (result == JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();

                jSliderProgreso.setEnabled(true);
                jSliderRate.setEnabled(true);

                embeddedMediaPlayerComponent.mediaPlayer().media().startPaused(file.getAbsolutePath());

                long longLenght = embeddedMediaPlayerComponent.mediaPlayer().status().length();

                if(longLenght < Integer.MAX_VALUE){
                    int lenght = (int)longLenght;
                    jSliderProgreso.setMaximum(lenght);
                    jLabelDuracionTotal.setText(secondsToString(lenght/1000));

                    String title = embeddedMediaPlayerComponent.mediaPlayer().media().meta().get(Meta.TITLE);
                    String titulo = (title != null) ? title : file.getName();
                    if(titulo.length() > 100)
                        titulo = titulo.substring(0,100);

                    jLabelTitulo.setText(titulo);
                    title = null;
                    titulo = null;
                    embeddedMediaPlayerComponent.mediaPlayer().controls().play();
                    jButtonPlayPause.setIcon(pauseImage);
                }else
                    JOptionPane.showMessageDialog(null, "ERROR: TIEMPO DE VIDEO NO SOPORTADO", "ERROR", JOptionPane.ERROR_MESSAGE);

                file = null;
            }
            fileChooser = null;
            filter = null;
            
        }
    }//GEN-LAST:event_jButtonAbrirVideoMouseClicked

    private void jButtonPlayPauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonPlayPauseMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt))
            setPlayPause();
    }//GEN-LAST:event_jButtonPlayPauseMouseClicked

    private void jButtonStopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonStopMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt))
            setStop();
    }//GEN-LAST:event_jButtonStopMouseClicked

    private void setPlayPause() {

        if (embeddedMediaPlayerComponent.mediaPlayer().status().state() != State.STOPPED) {

            if (embeddedMediaPlayerComponent.mediaPlayer().status().state() == State.PLAYING) {
                embeddedMediaPlayerComponent.mediaPlayer().controls().setPause(true);
                jButtonPlayPause.setIcon(playImage);
            } else if (embeddedMediaPlayerComponent.mediaPlayer().status().state() == State.PAUSED) {
                embeddedMediaPlayerComponent.mediaPlayer().controls().setPause(false);
                jButtonPlayPause.setIcon(pauseImage);
            }
        }
    }

    private void setStop() {
        if (embeddedMediaPlayerComponent.mediaPlayer().status().state() != State.STOPPED) {
            embeddedMediaPlayerComponent.mediaPlayer().controls().stop();
        }
    }
    
    private void cleanInfoMedia(){
        if(embeddedMediaPlayerComponent.mediaPlayer().fullScreen().isFullScreen()){
            embeddedMediaPlayerComponent.mediaPlayer().fullScreen().set(false);
        }
        jPanelButtons.setVisible(true);
        jSliderProgreso.setValue(0);
        jLabelProgreso.setText("00:00:00");
        jLabelDuracionTotal.setText("00:00:00");
        jSliderProgreso.setEnabled(false);
        jSliderRate.setEnabled(false);
        jSliderRate.setValue(100);
        jButtonPlayPause.setIcon(playImage);
    }

    private void setPlayerEvents() {

        //Control jslider cambiar rate
        jSliderRate.addChangeListener((ChangeEvent e) -> {
            Object source = e.getSource();
            float rate = (float) (((JSlider) source).getValue() / 100f);
            embeddedMediaPlayerComponent.mediaPlayer().controls().setRate(rate);
            jLabelRate.setText(((JSlider) source).getValue() + "%");
        });


        //Listener para el slider progress
        jSliderProgreso.addMouseListener(new MouseListener() {

            @Override
            public void mouseClicked(MouseEvent e) {

            }

            @Override
            public void mousePressed(MouseEvent e) {
                flag = false;
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                flag = true;
            }

            @Override
            public void mouseEntered(MouseEvent e) {
            }

            @Override
            public void mouseExited(MouseEvent e) {
            }

        });

        //Control para cambiar a posicion de reproduccion
        jSliderProgreso.addChangeListener((ChangeEvent e) -> {
            if (!flag) {
                Object source = e.getSource();
                embeddedMediaPlayerComponent.mediaPlayer().controls().setTime(((JSlider) source).getValue());
            }
        });
        
        embeddedMediaPlayerComponent.videoSurfaceComponent().addMouseMotionListener(new MouseMotionListener() {
            @Override
            public void mouseDragged(MouseEvent e) {
                
            }

            @Override
            public void mouseMoved(MouseEvent e) {
                boolean hasToBeVisible = e.getLocationOnScreen().y >= jPanelVideoView.getPreferredSize().getHeight();
                
                if(hasToBeVisible && !jPanelButtons.isVisible())
                    jPanelButtons.setVisible(true);
                else if((!hasToBeVisible && jPanelButtons.isVisible()))
                    jPanelButtons.setVisible(false);
            }
        });
        
        embeddedMediaPlayerComponent.mediaPlayer().events().addMediaPlayerEventListener(new MediaPlayerEventListener() {
            @Override
            public void mediaChanged(MediaPlayer mp, MediaRef mr) {
                
            }

            @Override
            public void opening(MediaPlayer mp) {
                
            }

            @Override
            public void buffering(MediaPlayer mp, float f) {
                
            }

            @Override
            public void playing(MediaPlayer mp) {
                
            }

            @Override
            public void paused(MediaPlayer mp) {
                
            }

            @Override
            public void stopped(MediaPlayer mp) {
                cleanInfoMedia();
            }

            @Override
            public void forward(MediaPlayer mp) {
                
            }

            @Override
            public void backward(MediaPlayer mp) {
                
            }

            @Override
            public void finished(MediaPlayer mp) {
                cleanInfoMedia();
            }

            @Override
            public void timeChanged(MediaPlayer mp, long l) {
                
            }

            @Override
            public void positionChanged(MediaPlayer mp, float f) {
                 if (flag) {
                    int tiempo = (int) embeddedMediaPlayerComponent.mediaPlayer().status().time();
                    int value = tiempo / 1000;
                    jSliderProgreso.setValue(tiempo);
                    String segundos = secondsToString(value);
                    jLabelProgreso.setText(segundos);
                    segundos = null;
                }
            }

            @Override
            public void seekableChanged(MediaPlayer mp, int i) {
                
            }

            @Override
            public void pausableChanged(MediaPlayer mp, int i) {
                
            }

            @Override
            public void titleChanged(MediaPlayer mp, int i) {
                
            }

            @Override
            public void snapshotTaken(MediaPlayer mp, String string) {
                
            }

            @Override
            public void lengthChanged(MediaPlayer mp, long l) {
                
            }

            @Override
            public void videoOutput(MediaPlayer mp, int i) {
                
            }

            @Override
            public void scrambledChanged(MediaPlayer mp, int i) {
                
            }

            @Override
            public void elementaryStreamAdded(MediaPlayer mp, TrackType tt, int i) {
                
            }

            @Override
            public void elementaryStreamDeleted(MediaPlayer mp, TrackType tt, int i) {
                
            }

            @Override
            public void elementaryStreamSelected(MediaPlayer mp, TrackType tt, int i) {
                
            }

            @Override
            public void corked(MediaPlayer mp, boolean bln) {
                
            }

            @Override
            public void muted(MediaPlayer mp, boolean bln) {
                
            }

            @Override
            public void volumeChanged(MediaPlayer mp, float f) {
                
            }

            @Override
            public void audioDeviceChanged(MediaPlayer mp, String string) {
                
            }

            @Override
            public void chapterChanged(MediaPlayer mp, int i) {
                
            }

            @Override
            public void error(MediaPlayer mp) {
                
            }

            @Override
            public void mediaPlayerReady(MediaPlayer mp) {
                
            }
        });
    }

    private String secondsToString(long seconds) {
        long absSeconds = Math.abs(seconds);
        String positive = String.format(
                "%02d:%02d:%02d",
                absSeconds / 3600,
                (absSeconds % 3600) / 60,
                absSeconds % 60);
        return seconds < 0 ? "-" + positive : positive;
    }
    
    public void dispose(){
        playImage = null;
        pauseImage = null;
        embeddedMediaPlayerComponent.release();
        embeddedMediaPlayerComponent = null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAbrirVideo;
    private javax.swing.JButton jButtonPlayPause;
    private javax.swing.JButton jButtonStop;
    private javax.swing.JLabel jLabelDuracionTotal;
    private javax.swing.JLabel jLabelProgreso;
    private javax.swing.JLabel jLabelRate;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JPanel jPanelButtons;
    private javax.swing.JPanel jPanelVideoView;
    private javax.swing.JSlider jSliderProgreso;
    private javax.swing.JSlider jSliderRate;
    // End of variables declaration//GEN-END:variables
}
