/*
 * Copyright (C) 2022 LENOVO
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package paneles.estudiantes.tareas;

import clases.Celda_Renderer;
import courseroom.CourseRoom;
import frames.generales.Lector_Audio_General_Frame;
import frames.generales.Lector_PDF_General_Frame;
import frames.generales.Lector_Video_General_Panel;
import interfaces.Carta_Visibilidad_Interface;
import interfaces.Componentes_Interface;
import interfaces.Envio_Interface;
import interfaces.Limpieza_Interface;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.time.LocalDateTime;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.coobird.gui.simpleimageviewer4j.Viewer;
import org.apache.commons.io.FilenameUtils;
import paneles.estudiantes.Tablero_Estudiante_Panel;
import paneles.generales.mensajes.Mensaje_Texto_Derecho_General_Panel;
import paneles.generales.mensajes.Mensaje_Texto_Izquierdo_General_Panel;

/**
 *
 * @author LENOVO
 */
public class Tarea_Estudiante_Panel extends javax.swing.JPanel implements  Componentes_Interface, Envio_Interface, Limpieza_Interface, Carta_Visibilidad_Interface{

    private String ID;
    private byte carta_Visible;
    
    public Tarea_Estudiante_Panel(
            String nombre_Tarea, 
            String nombre_Curso,
            String nombre_Profesor,
            String fecha_Entrega,
            String estatus,
            String _id){
        initComponents();
        
        
        nombre_JLabel.setText(nombre_Tarea);
        curso_JLabel.setText(nombre_Curso);
        nombre_Profesor_JLabel.setText(nombre_Profesor);
        fecha_Entrega_JLabel.setText(CourseRoom.Utilerias.Concatenar("Se entrega el ", fecha_Entrega));
        
        estatus_Tarea_JLabel.setText(estatus);
        
        this.ID = _id;
       
        
        Iniciar_Componentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo_JPanel = new javax.swing.JPanel();
        nombre_JLabel = new javax.swing.JLabel();
        informacion_JButton = new javax.swing.JButton();
        comentarios_JButton = new javax.swing.JButton();
        archivos_Adjuntos_JButton = new javax.swing.JButton();
        entregar_Tarea_JButton = new javax.swing.JButton();
        regresar_JButton = new javax.swing.JButton();
        actualizar_JButton = new javax.swing.JButton();
        retroalimentacion_JButton = new javax.swing.JButton();
        tarea_JLayeredPane = new javax.swing.JLayeredPane();
        informacion_Tarea_JPanel = new javax.swing.JPanel();
        curso_JLabel = new javax.swing.JLabel();
        nombre_Profesor_JLabel = new javax.swing.JLabel();
        descripcion_JScrollPane = new javax.swing.JScrollPane();
        descripcion_JTextPane = new javax.swing.JTextPane();
        fecha_Entrega_JLabel = new javax.swing.JLabel();
        estatus_Tarea_JLabel = new javax.swing.JLabel();
        archivos_Adjuntos_JScrollPane = new javax.swing.JScrollPane();
        archivos_Adjuntos_JTable = new javax.swing.JTable();
        comentarios_Tarea_JPanel = new javax.swing.JPanel();
        mensajes_Comentarios_JScrollPane = new javax.swing.JScrollPane();
        mensajes_Comentarios_JPanel = new javax.swing.JPanel();
        enviar_Comentarios_JPanel = new javax.swing.JPanel();
        mensaje_Comentarios_JTextField = new javax.swing.JTextField();
        entregar_Tarea_JPanel = new javax.swing.JPanel();
        subir_Archivos_JButton = new javax.swing.JButton();
        archivos_Subidos_JScrollPane = new javax.swing.JScrollPane();
        archivos_Subidos_JTable = new javax.swing.JTable();
        subir_Cambios_JButton = new javax.swing.JButton();
        fecha_Actualizacion_JLabel = new javax.swing.JLabel();
        retroalimentacion_JScrollPane = new javax.swing.JScrollPane();
        retroalimentacion_JTable = new javax.swing.JTable();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1110, 630));

        titulo_JPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        titulo_JPanel.setMaximumSize(new java.awt.Dimension(32767, 72));
        titulo_JPanel.setPreferredSize(new java.awt.Dimension(982, 72));

        nombre_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nombre_JLabel.setFont(new java.awt.Font("Gadugi", 1, 26)); // NOI18N
        nombre_JLabel.setMaximumSize(new java.awt.Dimension(818, 68));
        nombre_JLabel.setMinimumSize(new java.awt.Dimension(818, 68));
        nombre_JLabel.setPreferredSize(new java.awt.Dimension(818, 68));

        informacion_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/info_1.png"))); // NOI18N
        informacion_JButton.setBorder(null);
        informacion_JButton.setPreferredSize(new java.awt.Dimension(36, 36));
        ((ImageIcon)informacion_JButton.getIcon()).getImage().flush();
        informacion_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                informacion_JButtonMouseClicked(evt);
            }
        });

        comentarios_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/online-chat_1.png"))); // NOI18N
        comentarios_JButton.setBorder(null);
        comentarios_JButton.setPreferredSize(new java.awt.Dimension(36, 36));
        ((ImageIcon)comentarios_JButton.getIcon()).getImage().flush();
        comentarios_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comentarios_JButtonMouseClicked(evt);
            }
        });

        archivos_Adjuntos_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/context.png"))); // NOI18N
        archivos_Adjuntos_JButton.setBorder(null);
        archivos_Adjuntos_JButton.setPreferredSize(new java.awt.Dimension(36, 36));
        ((ImageIcon)archivos_Adjuntos_JButton.getIcon()).getImage().flush();
        archivos_Adjuntos_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                archivos_Adjuntos_JButtonMouseClicked(evt);
            }
        });

        entregar_Tarea_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/woman.png"))); // NOI18N
        entregar_Tarea_JButton.setBorder(null);
        entregar_Tarea_JButton.setPreferredSize(new java.awt.Dimension(36, 36));
        ((ImageIcon)entregar_Tarea_JButton.getIcon()).getImage().flush();
        entregar_Tarea_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                entregar_Tarea_JButtonMouseClicked(evt);
            }
        });

        regresar_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/reply.png"))); // NOI18N
        regresar_JButton.setToolTipText("Regresar A Mis Chats");
        regresar_JButton.setBorder(null);
        regresar_JButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ((ImageIcon)regresar_JButton.getIcon()).getImage().flush();
        regresar_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                regresar_JButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                regresar_JButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                regresar_JButtonMouseExited(evt);
            }
        });

        actualizar_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/updated.png"))); // NOI18N
        actualizar_JButton.setBorder(null);
        actualizar_JButton.setPreferredSize(new java.awt.Dimension(36, 36));
        ((ImageIcon)actualizar_JButton.getIcon()).getImage().flush();
        actualizar_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actualizar_JButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                actualizar_JButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                actualizar_JButtonMouseExited(evt);
            }
        });

        retroalimentacion_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/feedback.png"))); // NOI18N
        retroalimentacion_JButton.setBorder(null);
        retroalimentacion_JButton.setPreferredSize(new java.awt.Dimension(36, 36));
        ((ImageIcon)retroalimentacion_JButton.getIcon()).getImage().flush();
        retroalimentacion_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                retroalimentacion_JButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout titulo_JPanelLayout = new javax.swing.GroupLayout(titulo_JPanel);
        titulo_JPanel.setLayout(titulo_JPanelLayout);
        titulo_JPanelLayout.setHorizontalGroup(
            titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titulo_JPanelLayout.createSequentialGroup()
                .addComponent(regresar_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nombre_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(informacion_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(archivos_Adjuntos_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(comentarios_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(entregar_Tarea_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(retroalimentacion_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(actualizar_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        titulo_JPanelLayout.setVerticalGroup(
            titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titulo_JPanelLayout.createSequentialGroup()
                .addGroup(titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(regresar_JButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(titulo_JPanelLayout.createSequentialGroup()
                        .addGroup(titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comentarios_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(archivos_Adjuntos_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(informacion_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(entregar_Tarea_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombre_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(actualizar_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(retroalimentacion_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        tarea_JLayeredPane.setPreferredSize(new java.awt.Dimension(982, 534));
        tarea_JLayeredPane.setLayout(new java.awt.CardLayout());

        informacion_Tarea_JPanel.setToolTipText("");
        informacion_Tarea_JPanel.setOpaque(false);
        informacion_Tarea_JPanel.setPreferredSize(new java.awt.Dimension(1110, 630));

        curso_JLabel.setFont(new java.awt.Font("Gadugi", 1, 15)); // NOI18N
        curso_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        curso_JLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/training.png"))); // NOI18N
        curso_JLabel.setToolTipText("<html>\n<h3>Curso de provenencia</h3>\n</html>");
        curso_JLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        curso_JLabel.setOpaque(true);
        curso_JLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                curso_JLabelMouseClicked(evt);
            }
        });

        nombre_Profesor_JLabel.setFont(new java.awt.Font("Gadugi", 3, 14)); // NOI18N
        nombre_Profesor_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nombre_Profesor_JLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/avatar.png"))); // NOI18N
        nombre_Profesor_JLabel.setToolTipText("<html>\n<h3>Nombre del profesor</h3>\n</html>");
        nombre_Profesor_JLabel.setMaximumSize(new java.awt.Dimension(383, 32));
        nombre_Profesor_JLabel.setMinimumSize(new java.awt.Dimension(383, 32));
        nombre_Profesor_JLabel.setOpaque(true);
        nombre_Profesor_JLabel.setPreferredSize(new java.awt.Dimension(383, 32));

        descripcion_JScrollPane.setBorder(null);
        descripcion_JScrollPane.setFocusable(false);
        descripcion_JScrollPane.setOpaque(false);
        descripcion_JScrollPane.setRequestFocusEnabled(false);
        descripcion_JScrollPane.setVerifyInputWhenFocusTarget(false);
        descripcion_JScrollPane.setWheelScrollingEnabled(false);

        descripcion_JTextPane.setEditable(false);
        descripcion_JTextPane.setBorder(null);
        descripcion_JTextPane.setContentType("text/html"); // NOI18N
        descripcion_JTextPane.setFont(new java.awt.Font("Gadugi", 0, 16)); // NOI18N
        descripcion_JTextPane.setText("");
        descripcion_JTextPane.setToolTipText("<html>\n<h3>Descripción</h3>\n</html>");
        descripcion_JTextPane.setFocusCycleRoot(false);
        descripcion_JTextPane.setOpaque(false);
        descripcion_JTextPane.setRequestFocusEnabled(false);
        descripcion_JScrollPane.setViewportView(descripcion_JTextPane);

        fecha_Entrega_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fecha_Entrega_JLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/clock.png"))); // NOI18N
        fecha_Entrega_JLabel.setFont(new java.awt.Font("Gadugi", 2, 15)); // NOI18N
        fecha_Entrega_JLabel.setOpaque(true);

        estatus_Tarea_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        estatus_Tarea_JLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/homework_1.png"))); // NOI18N
        estatus_Tarea_JLabel.setFont(new java.awt.Font("Gadugi", 1, 15)); // NOI18N
        estatus_Tarea_JLabel.setOpaque(true);

        javax.swing.GroupLayout informacion_Tarea_JPanelLayout = new javax.swing.GroupLayout(informacion_Tarea_JPanel);
        informacion_Tarea_JPanel.setLayout(informacion_Tarea_JPanelLayout);
        informacion_Tarea_JPanelLayout.setHorizontalGroup(
            informacion_Tarea_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informacion_Tarea_JPanelLayout.createSequentialGroup()
                .addGroup(informacion_Tarea_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informacion_Tarea_JPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(informacion_Tarea_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descripcion_JScrollPane)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informacion_Tarea_JPanelLayout.createSequentialGroup()
                                .addComponent(curso_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nombre_Profesor_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(informacion_Tarea_JPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(fecha_Entrega_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 792, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(estatus_Tarea_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)))
                .addContainerGap())
        );
        informacion_Tarea_JPanelLayout.setVerticalGroup(
            informacion_Tarea_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informacion_Tarea_JPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(informacion_Tarea_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(curso_JLabel)
                    .addComponent(nombre_Profesor_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(descripcion_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(informacion_Tarea_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fecha_Entrega_JLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(estatus_Tarea_JLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        tarea_JLayeredPane.add(informacion_Tarea_JPanel, "Informacion");

        archivos_Adjuntos_JScrollPane.setBorder(null);
        archivos_Adjuntos_JScrollPane.setOpaque(false);

        archivos_Adjuntos_JTable.setAutoCreateRowSorter(true);
        archivos_Adjuntos_JTable.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        archivos_Adjuntos_JTable.setModel(

            new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "Archivo", "Fecha", "Descargar"
                }
            ) {
                boolean[] canEdit = new boolean [] {
                    false, false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }

                @Override
                public Class getColumnClass(int column)
                {
                    for(int i = 0; i < archivos_Adjuntos_JTable.getRowCount(); i++)
                    {
                        //The first valid value of a cell of given column is retrieved.
                        if(getValueAt(i,column) != null)
                        {
                            return getValueAt(i, column).getClass();
                        }
                    }
                    //if no valid value is found, default renderer is returned.
                    return super.getColumnClass(column);
                }
            });
            archivos_Adjuntos_JTable.setOpaque(false);
            archivos_Adjuntos_JTable.setRowHeight(50);
            archivos_Adjuntos_JTable.setRowMargin(15);
            archivos_Adjuntos_JTable.setShowGrid(true);
            archivos_Adjuntos_JTable.setRowSorter(new TableRowSorter(archivos_Adjuntos_JTable.getModel()));
            archivos_Adjuntos_JScrollPane.setViewportView(archivos_Adjuntos_JTable);

            tarea_JLayeredPane.add(archivos_Adjuntos_JScrollPane, "Archivos_Adjuntos");

            comentarios_Tarea_JPanel.setOpaque(false);

            mensajes_Comentarios_JScrollPane.setOpaque(false);

            mensajes_Comentarios_JPanel.setOpaque(false);
            mensajes_Comentarios_JPanel.setLayout(new javax.swing.BoxLayout(mensajes_Comentarios_JPanel, javax.swing.BoxLayout.PAGE_AXIS));
            mensajes_Comentarios_JScrollPane.setViewportView(mensajes_Comentarios_JPanel);

            enviar_Comentarios_JPanel.setMaximumSize(new java.awt.Dimension(32767, 46));
            enviar_Comentarios_JPanel.setPreferredSize(new java.awt.Dimension(1085, 46));

            mensaje_Comentarios_JTextField.setFont(new java.awt.Font("Gadugi", 1, 16)); // NOI18N
            mensaje_Comentarios_JTextField.setPreferredSize(new java.awt.Dimension(64, 34));
            mensaje_Comentarios_JTextField.setToolTipText("Redactar Menssaje");
            mensaje_Comentarios_JTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    mensaje_Comentarios_JTextFieldKeyPressed(evt);
                }
            });

            javax.swing.GroupLayout enviar_Comentarios_JPanelLayout = new javax.swing.GroupLayout(enviar_Comentarios_JPanel);
            enviar_Comentarios_JPanel.setLayout(enviar_Comentarios_JPanelLayout);
            enviar_Comentarios_JPanelLayout.setHorizontalGroup(
                enviar_Comentarios_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enviar_Comentarios_JPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(mensaje_Comentarios_JTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 972, Short.MAX_VALUE)
                    .addContainerGap())
            );
            enviar_Comentarios_JPanelLayout.setVerticalGroup(
                enviar_Comentarios_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enviar_Comentarios_JPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mensaje_Comentarios_JTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
            );

            javax.swing.GroupLayout comentarios_Tarea_JPanelLayout = new javax.swing.GroupLayout(comentarios_Tarea_JPanel);
            comentarios_Tarea_JPanel.setLayout(comentarios_Tarea_JPanelLayout);
            comentarios_Tarea_JPanelLayout.setHorizontalGroup(
                comentarios_Tarea_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(mensajes_Comentarios_JScrollPane)
                .addComponent(enviar_Comentarios_JPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 982, Short.MAX_VALUE)
            );
            comentarios_Tarea_JPanelLayout.setVerticalGroup(
                comentarios_Tarea_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(comentarios_Tarea_JPanelLayout.createSequentialGroup()
                    .addComponent(mensajes_Comentarios_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addGap(0, 0, 0)
                    .addComponent(enviar_Comentarios_JPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0))
            );

            tarea_JLayeredPane.add(comentarios_Tarea_JPanel, "Comentarios");

            entregar_Tarea_JPanel.setToolTipText("");
            entregar_Tarea_JPanel.setOpaque(false);
            entregar_Tarea_JPanel.setPreferredSize(new java.awt.Dimension(1110, 630));

            subir_Archivos_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/submit.png"))); // NOI18N
            subir_Archivos_JButton.setText("Subir Archivo(s)");
            subir_Archivos_JButton.setFont(new java.awt.Font("Gadugi", 1, 16)); // NOI18N
            subir_Archivos_JButton.setToolTipText("Compartir Y Subir Archivo(s)");
            ((ImageIcon)subir_Archivos_JButton.getIcon()).getImage().flush();
            subir_Archivos_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    subir_Archivos_JButtonMouseClicked(evt);
                }
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    subir_Archivos_JButtonMouseEntered(evt);
                }
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    subir_Archivos_JButtonMouseExited(evt);
                }
            });

            archivos_Subidos_JScrollPane.setBorder(null);
            archivos_Subidos_JScrollPane.setOpaque(false);

            archivos_Subidos_JTable.setAutoCreateRowSorter(true);
            archivos_Subidos_JTable.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
            archivos_Subidos_JTable.setModel(

                new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                        "Archivo", "Subido", "Descargar", "Remover"
                    }
                ) {
                    boolean[] canEdit = new boolean [] {
                        false, false, false,false
                    };

                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit [columnIndex];
                    }

                    @Override
                    public Class getColumnClass(int column)
                    {
                        for(int i = 0; i < archivos_Subidos_JTable.getRowCount(); i++)
                        {
                            //The first valid value of a cell of given column is retrieved.
                            if(getValueAt(i,column) != null)
                            {
                                return getValueAt(i, column).getClass();
                            }
                        }
                        //if no valid value is found, default renderer is returned.
                        return super.getColumnClass(column);
                    }
                });
                archivos_Subidos_JTable.setOpaque(false);
                archivos_Subidos_JTable.setRowHeight(75);
                archivos_Subidos_JTable.setRowMargin(15);
                archivos_Subidos_JTable.setShowGrid(true);
                archivos_Subidos_JTable.setShowVerticalLines(false);
                archivos_Adjuntos_JTable.setRowSorter(new TableRowSorter(archivos_Adjuntos_JTable.getModel()));
                archivos_Subidos_JScrollPane.setViewportView(archivos_Subidos_JTable);

                subir_Cambios_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/document.png"))); // NOI18N
                subir_Cambios_JButton.setText("Subir Cambio(s)");
                subir_Cambios_JButton.setFont(new java.awt.Font("Gadugi", 1, 16)); // NOI18N
                subir_Cambios_JButton.setToolTipText("");
                ((ImageIcon)subir_Cambios_JButton.getIcon()).getImage().flush();
                subir_Cambios_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        subir_Cambios_JButtonMouseClicked(evt);
                    }
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        subir_Cambios_JButtonMouseEntered(evt);
                    }
                    public void mouseExited(java.awt.event.MouseEvent evt) {
                        subir_Cambios_JButtonMouseExited(evt);
                    }
                });

                fecha_Actualizacion_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
                fecha_Actualizacion_JLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/circular-clock.png"))); // NOI18N
                fecha_Actualizacion_JLabel.setFont(new java.awt.Font("Gadugi", 2, 15)); // NOI18N

                javax.swing.GroupLayout entregar_Tarea_JPanelLayout = new javax.swing.GroupLayout(entregar_Tarea_JPanel);
                entregar_Tarea_JPanel.setLayout(entregar_Tarea_JPanelLayout);
                entregar_Tarea_JPanelLayout.setHorizontalGroup(
                    entregar_Tarea_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(entregar_Tarea_JPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(entregar_Tarea_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(archivos_Subidos_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 972, Short.MAX_VALUE)
                            .addGroup(entregar_Tarea_JPanelLayout.createSequentialGroup()
                                .addComponent(subir_Archivos_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(255, 255, 255)
                                .addComponent(fecha_Actualizacion_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, entregar_Tarea_JPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(subir_Cambios_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                );
                entregar_Tarea_JPanelLayout.setVerticalGroup(
                    entregar_Tarea_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(entregar_Tarea_JPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(entregar_Tarea_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(subir_Archivos_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fecha_Actualizacion_JLabel))
                        .addGap(18, 18, 18)
                        .addComponent(archivos_Subidos_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(subir_Cambios_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                );

                tarea_JLayeredPane.add(entregar_Tarea_JPanel, "Entregar");

                retroalimentacion_JScrollPane.setBorder(null);
                retroalimentacion_JScrollPane.setOpaque(false);

                retroalimentacion_JTable.setAutoCreateRowSorter(true);
                retroalimentacion_JTable.setModel(

                    new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                            "Retroalimentacion", "Fecha"
                        }
                    ) {
                        boolean[] canEdit = new boolean [] {
                            false, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                            return canEdit [columnIndex];
                        }

                        @Override
                        public Class getColumnClass(int column)
                        {
                            for(int i = 0; i < retroalimentacion_JTable.getRowCount(); i++)
                            {
                                //The first valid value of a cell of given column is retrieved.
                                if(getValueAt(i,column) != null)
                                {
                                    return getValueAt(i, column).getClass();
                                }
                            }
                            //if no valid value is found, default renderer is returned.
                            return super.getColumnClass(column);
                        }
                    });
                    retroalimentacion_JTable.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
                    retroalimentacion_JTable.setOpaque(false);
                    retroalimentacion_JTable.setRowHeight(90);
                    retroalimentacion_JTable.setRowMargin(15);
                    retroalimentacion_JTable.setShowGrid(true);
                    retroalimentacion_JTable.setRowSorter(new TableRowSorter(retroalimentacion_JTable.getModel()));
                    retroalimentacion_JScrollPane.setViewportView(retroalimentacion_JTable);

                    tarea_JLayeredPane.add(retroalimentacion_JScrollPane, "Retroalimentacion");

                    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                    this.setLayout(layout);
                    layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(64, 64, 64)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tarea_JLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(titulo_JPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(64, 64, 64))
                    );
                    layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(titulo_JPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tarea_JLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addContainerGap())
                    );
                }// </editor-fold>//GEN-END:initComponents

    private void comentarios_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comentarios_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout)tarea_JLayeredPane.getLayout()).show(tarea_JLayeredPane, "Comentarios");
            carta_Visible = 2;
            Carta_Visible();
            
        }
    }//GEN-LAST:event_comentarios_JButtonMouseClicked

    private void archivos_Adjuntos_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_archivos_Adjuntos_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout)tarea_JLayeredPane.getLayout()).show(tarea_JLayeredPane, "Archivos_Adjuntos");
            carta_Visible = 1;
            Carta_Visible();
        }
    }//GEN-LAST:event_archivos_Adjuntos_JButtonMouseClicked

    private void informacion_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_informacion_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout) tarea_JLayeredPane.getLayout()).show(tarea_JLayeredPane, "Informacion");
            carta_Visible = 0;
            Carta_Visible();
        }
    }//GEN-LAST:event_informacion_JButtonMouseClicked

    private void entregar_Tarea_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_entregar_Tarea_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout) tarea_JLayeredPane.getLayout()).show(tarea_JLayeredPane, "Entregar");
            carta_Visible = 3;
            Carta_Visible();
        }
    }//GEN-LAST:event_entregar_Tarea_JButtonMouseClicked

    private void regresar_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresar_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            Tablero_Estudiante_Panel.Mostrar_Vista("Tareas");
        }
    }//GEN-LAST:event_regresar_JButtonMouseClicked

    private void regresar_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresar_JButtonMouseEntered
        // TODO add your handling code here:
        regresar_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
    }//GEN-LAST:event_regresar_JButtonMouseEntered

    private void regresar_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresar_JButtonMouseExited
        // TODO add your handling code here:
        regresar_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
    }//GEN-LAST:event_regresar_JButtonMouseExited

    private void curso_JLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_curso_JLabelMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){

        }
    }//GEN-LAST:event_curso_JLabelMouseClicked

    private void mensaje_Comentarios_JTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mensaje_Comentarios_JTextFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            Enviar_Mensaje();
        }
    }//GEN-LAST:event_mensaje_Comentarios_JTextFieldKeyPressed

    private void subir_Archivos_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subir_Archivos_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            Enviar_Archivos();
        }
    }//GEN-LAST:event_subir_Archivos_JButtonMouseClicked

    private void subir_Archivos_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subir_Archivos_JButtonMouseEntered
        // TODO add your handling code here:
        subir_Archivos_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
        subir_Archivos_JButton.setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente());
    }//GEN-LAST:event_subir_Archivos_JButtonMouseEntered

    private void subir_Archivos_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subir_Archivos_JButtonMouseExited
        // TODO add your handling code here:
        subir_Archivos_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
        subir_Archivos_JButton.setForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());
    }//GEN-LAST:event_subir_Archivos_JButtonMouseExited

    private void subir_Cambios_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subir_Cambios_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            
            fecha_Actualizacion_JLabel.setText(CourseRoom.Utilerias.Concatenar("Actualizado: ",LocalDateTime.now().toString()));
        }
    }//GEN-LAST:event_subir_Cambios_JButtonMouseClicked

    private void subir_Cambios_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subir_Cambios_JButtonMouseEntered
        // TODO add your handling code here:
        subir_Cambios_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
        subir_Cambios_JButton.setForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());
    }//GEN-LAST:event_subir_Cambios_JButtonMouseEntered

    private void subir_Cambios_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subir_Cambios_JButtonMouseExited
        // TODO add your handling code here:
        subir_Cambios_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
        subir_Cambios_JButton.setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente());
    }//GEN-LAST:event_subir_Cambios_JButtonMouseExited

    private void actualizar_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizar_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){

        }
    }//GEN-LAST:event_actualizar_JButtonMouseClicked

    private void actualizar_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizar_JButtonMouseEntered
        // TODO add your handling code here:
        actualizar_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
    }//GEN-LAST:event_actualizar_JButtonMouseEntered

    private void actualizar_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizar_JButtonMouseExited
        // TODO add your handling code here:
        actualizar_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
    }//GEN-LAST:event_actualizar_JButtonMouseExited

    private void retroalimentacion_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_retroalimentacion_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout) tarea_JLayeredPane.getLayout()).show(tarea_JLayeredPane, "Retroalimentacion");
            carta_Visible = 4;
            Carta_Visible();
        }
    }//GEN-LAST:event_retroalimentacion_JButtonMouseClicked

    
    public String ID(){
        return this.ID;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar_JButton;
    private javax.swing.JButton archivos_Adjuntos_JButton;
    private javax.swing.JScrollPane archivos_Adjuntos_JScrollPane;
    private javax.swing.JTable archivos_Adjuntos_JTable;
    private javax.swing.JScrollPane archivos_Subidos_JScrollPane;
    private javax.swing.JTable archivos_Subidos_JTable;
    private javax.swing.JButton comentarios_JButton;
    private javax.swing.JPanel comentarios_Tarea_JPanel;
    private javax.swing.JLabel curso_JLabel;
    private javax.swing.JScrollPane descripcion_JScrollPane;
    private javax.swing.JTextPane descripcion_JTextPane;
    private javax.swing.JButton entregar_Tarea_JButton;
    private javax.swing.JPanel entregar_Tarea_JPanel;
    private javax.swing.JPanel enviar_Comentarios_JPanel;
    private javax.swing.JLabel estatus_Tarea_JLabel;
    private javax.swing.JLabel fecha_Actualizacion_JLabel;
    private javax.swing.JLabel fecha_Entrega_JLabel;
    private javax.swing.JButton informacion_JButton;
    private javax.swing.JPanel informacion_Tarea_JPanel;
    private javax.swing.JTextField mensaje_Comentarios_JTextField;
    private javax.swing.JPanel mensajes_Comentarios_JPanel;
    private javax.swing.JScrollPane mensajes_Comentarios_JScrollPane;
    private javax.swing.JLabel nombre_JLabel;
    private javax.swing.JLabel nombre_Profesor_JLabel;
    private javax.swing.JButton regresar_JButton;
    private javax.swing.JButton retroalimentacion_JButton;
    private javax.swing.JScrollPane retroalimentacion_JScrollPane;
    private javax.swing.JTable retroalimentacion_JTable;
    private javax.swing.JButton subir_Archivos_JButton;
    private javax.swing.JButton subir_Cambios_JButton;
    private javax.swing.JLayeredPane tarea_JLayeredPane;
    private javax.swing.JPanel titulo_JPanel;
    // End of variables declaration//GEN-END:variables

    
    @Override
    public void Iniciar_Componentes() {
        
        carta_Visible = 0;
        Font gadugi = new Font("Gadugi", Font.BOLD, 16);
        
        archivos_Subidos_JScrollPane.getViewport().setOpaque(false);
        archivos_Subidos_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        archivos_Subidos_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);

        archivos_Subidos_JTable.getTableHeader().setFont(gadugi);
        archivos_Subidos_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        
        archivos_Adjuntos_JScrollPane.getViewport().setOpaque(false);
        archivos_Adjuntos_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        archivos_Adjuntos_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        archivos_Adjuntos_JTable.getTableHeader().setFont(gadugi);
        archivos_Adjuntos_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        
        Celda_Renderer[] celdas = new Celda_Renderer[3];
        DefaultTableModel modelo = (DefaultTableModel) archivos_Adjuntos_JTable.getModel();
        ImageIcon icono_Descargar = new ImageIcon(getClass().getResource("/recursos/iconos/download.png"));
        for (int i = 0; i < CourseRoom.Utilerias.number().numberBetween(1, 10); i++) {
           
            celdas[0] = new Celda_Renderer(CourseRoom.Utilerias.file().fileName(),"");
            celdas[1] = new Celda_Renderer(CourseRoom.Utilerias.date().birthday(21, 23).toString(), "");
            celdas[2] = new Celda_Renderer(icono_Descargar, "");
            modelo.addRow(celdas);
        }
        
        archivos_Adjuntos_JTable.addMouseListener(new MouseAdapter() {

            @Override
            public void mousePressed(MouseEvent e) {
                if (e.getClickCount() == 2) {

                    JTable tabla = (JTable) e.getComponent();
                    int columna = tabla.getSelectedColumn();

                     //Descargar
                    if (columna == 2) {
                    }

                }
            }
        });
        
        archivos_Subidos_JTable.addMouseListener(new MouseAdapter() {

            @Override
            public void mousePressed(MouseEvent e) {
                if (e.getClickCount() == 2) {

                    JTable tabla = (JTable) e.getComponent();
                    int columna = tabla.getSelectedColumn();
                    
                    // Abrir
                    switch (columna) {
                        case 0: {
                            int fila = tabla.getRowSorter().convertRowIndexToModel(tabla.getSelectedRow());
                            DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
                            Celda_Renderer celda = (Celda_Renderer) modelo.getValueAt(fila, 0);
                            String extension = FilenameUtils.getExtension(celda.Texto());
                            String ruta = celda.ID();
                            System.out.println("Texto: " + celda.Texto());
                            System.out.println("Ruta: " + ruta);
                            System.out.println("Extension: " + extension);
                            if (extension.equals("pdf")) {
                                try {
                                    Lector_PDF_General_Frame lector_PDF_General_Frame
                                            = new Lector_PDF_General_Frame(ruta);
                                } catch (MalformedURLException ex) {
                                    JOptionPane.showMessageDialog(null, ex.getMessage(), "Error Encontrado", JOptionPane.ERROR_MESSAGE);
                                }
                            } else if(extension.equals("mp4")  || extension.equals("webm") || extension.equals("mkv")){
                                Lector_Video_General_Panel lector_Video_General_Panel
                                        = new Lector_Video_General_Panel(ruta, celda.Texto());
                            } else if (extension.equals("mp3")) {
                                Lector_Audio_General_Frame lector_Audio_General_Frame
                                        = new Lector_Audio_General_Frame(ruta, celda.Texto());
                            } else if (extension.equals("png") || extension.equals("jpeg") || extension.equals("jpg")) {
                                try {
                                    //Cargar imagen
                                    File archivo_Imagen = new File(ruta);
                                    BufferedImage imagen = ImageIO.read(archivo_Imagen);
                                    Viewer viewer = new Viewer(imagen);
                                    viewer.show();
                                    imagen.flush();
                                    imagen.getGraphics().dispose();
                                } catch (IOException ex) {
                                    JOptionPane.showMessageDialog(null, ex.getMessage(), "Error Encontrado", JOptionPane.ERROR_MESSAGE);
                                }
                            }
                            break;
                        }
                        case 3:
                            break;
                        case 4: {
                            int fila = tabla.getRowSorter().convertRowIndexToModel(tabla.getSelectedRow());
                            DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
                            modelo.removeRow(fila);
                            break;
                        }
                        default:
                            break;
                    }
                    
                }
            }
        });
        
        retroalimentacion_JScrollPane.getViewport().setOpaque(false);
        retroalimentacion_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        retroalimentacion_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);

        retroalimentacion_JTable.getTableHeader().setFont(gadugi);
        retroalimentacion_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());

        celdas = new Celda_Renderer[2];
        modelo = (DefaultTableModel) retroalimentacion_JTable.getModel();
        for (int i = 0; i < CourseRoom.Utilerias.number().numberBetween(1, 10); i++) {

            celdas[0] = new Celda_Renderer(CourseRoom.Utilerias.lorem().paragraph(5), "");
            celdas[1] = new Celda_Renderer(CourseRoom.Utilerias.date().birthday(21, 23).toString(), "");
            modelo.addRow(celdas);
        }

        
        descripcion_JTextPane.setText(CourseRoom.Utilerias.Formato_HTML_Izquierda(CourseRoom.Utilerias.lorem().paragraph(20)));
        
        descripcion_JScrollPane.getViewport().setOpaque(false);
        descripcion_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        
        mensajes_Comentarios_JScrollPane.getViewport().setOpaque(false);
        mensajes_Comentarios_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        mensajes_Comentarios_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        mensajes_Comentarios_JScrollPane.getViewport().setOpaque(false);
        mensajes_Comentarios_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        
        Colorear_Componentes();
    }

    @Override
    public void Colorear_Componentes() {
        titulo_JPanel.setBackground(CourseRoom.Utilerias.Segundo_Color());
        
        Carta_Visible();
        
        nombre_JLabel.setForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());
        nombre_JLabel.setBackground(CourseRoom.Utilerias.Segundo_Color());
        
        regresar_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
        
        subir_Archivos_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
        subir_Archivos_JButton.setForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());
        
        archivos_Adjuntos_JTable.getTableHeader().setBackground(CourseRoom.Utilerias.Segundo_Color());
        archivos_Adjuntos_JTable.getTableHeader().setForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());
        
        DefaultTableModel modelo = (DefaultTableModel) archivos_Adjuntos_JTable.getModel();
        Celda_Renderer celda;
        for (int i = 0; i < archivos_Adjuntos_JTable.getRowCount(); i++) {
            for (int j = 0; j < 2; j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias.Primer_Color_Fuente());
            }
        }
        
        archivos_Subidos_JTable.getTableHeader().setBackground(CourseRoom.Utilerias.Segundo_Color());
        archivos_Subidos_JTable.getTableHeader().setForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());

        modelo = (DefaultTableModel) archivos_Subidos_JTable.getModel();
        for (int i = 0; i < archivos_Subidos_JTable.getRowCount(); i++) {
            for (int j = 0; j < 2; j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias.Primer_Color_Fuente());
            }
        }
        
        retroalimentacion_JTable.getTableHeader().setBackground(CourseRoom.Utilerias.Segundo_Color());
        retroalimentacion_JTable.getTableHeader().setForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());

        modelo = (DefaultTableModel) retroalimentacion_JTable.getModel();
        for (int i = 0; i < retroalimentacion_JTable.getRowCount(); i++) {
            for (int j = 0; j < modelo.getColumnCount(); j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias.Primer_Color_Fuente());
            }
        }
        
        curso_JLabel.setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente());
        curso_JLabel.setBackground(CourseRoom.Utilerias.Tercer_Color());
        
        estatus_Tarea_JLabel.setForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());
        estatus_Tarea_JLabel.setBackground(CourseRoom.Utilerias.Segundo_Color());
        
        nombre_Profesor_JLabel.setForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());
        nombre_Profesor_JLabel.setBackground(CourseRoom.Utilerias.Segundo_Color());
        
        fecha_Entrega_JLabel.setForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());
        fecha_Entrega_JLabel.setBackground(CourseRoom.Utilerias.Segundo_Color());
        
        fecha_Actualizacion_JLabel.setForeground(CourseRoom.Utilerias.Primer_Color_Fuente());
        
        descripcion_JTextPane.setForeground(CourseRoom.Utilerias.Primer_Color_Fuente());
        
        mensaje_Comentarios_JTextField.setBackground(CourseRoom.Utilerias.Primer_Color());
        mensaje_Comentarios_JTextField.setForeground(CourseRoom.Utilerias.Primer_Color_Fuente());
        enviar_Comentarios_JPanel.setBackground(CourseRoom.Utilerias.Segundo_Color());
        
        subir_Cambios_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
        subir_Cambios_JButton.setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente());
        
        actualizar_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());

        Component[] componentes = mensajes_Comentarios_JPanel.getComponents();
        for (Component componente : componentes) {
            ((Componentes_Interface) componente).Colorear_Componentes();
        }
        
        Font gadugi = new Font("Gadugi", 0, 18);
        
        descripcion_JScrollPane.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(CourseRoom.Utilerias.Primer_Color_Fuente()), "Descripcion De La Tarea", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
                javax.swing.border.TitledBorder.DEFAULT_POSITION, gadugi, CourseRoom.Utilerias.Primer_Color_Fuente()));

    }

    
    @Override
    public void Enviar_Mensaje() {

        String mensaje = mensaje_Comentarios_JTextField.getText();
        if (!mensaje.isEmpty() && !mensaje.isBlank()) {
            String emisor = CourseRoom.Utilerias.dune().character();
            String fecha = CourseRoom.Utilerias.date().birthday(0, 1).toString();
            if (CourseRoom.Utilerias.number().numberBetween(1, 10) < 5) {
                Mensaje_Texto_Izquierdo_General_Panel mensaje_Texto_General_Panel
                        = new Mensaje_Texto_Izquierdo_General_Panel(emisor, fecha, mensaje);
                mensajes_Comentarios_JPanel.add(mensaje_Texto_General_Panel);
            } else {
                Mensaje_Texto_Derecho_General_Panel mensaje_Texto_General_Panel
                        = new Mensaje_Texto_Derecho_General_Panel(emisor, fecha, mensaje);
                mensajes_Comentarios_JPanel.add(mensaje_Texto_General_Panel);
            }
            mensaje_Comentarios_JTextField.setText("");
        }
        
    }

    @Override
    public void Enviar_Videos() {
        // No soportado

    }

    @Override
    public void Enviar_Imagenes() {
        // No soportado
    }

    @Override
    public void Enviar_Audios() {
        // No soportado
    }

    @Override
    public void Enviar_Archivos() {
       JFileChooser escogedor_Archivo = new JFileChooser();
        escogedor_Archivo.setFileSelectionMode(JFileChooser.FILES_ONLY);
        escogedor_Archivo.setApproveButtonText("Subir Archivo(s)");
        escogedor_Archivo.setMultiSelectionEnabled(true);
        int resultado = escogedor_Archivo.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File[] archivos_Abiertos = escogedor_Archivo.getSelectedFiles();
            
            if(archivos_Abiertos != null){
                Celda_Renderer[] celdas = new Celda_Renderer[4];
                DefaultTableModel modelo = (DefaultTableModel) archivos_Subidos_JTable.getModel();
                ImageIcon icono_Abrir = new ImageIcon(getClass().getResource("/recursos/iconos/box.png"));
                ImageIcon icono_Remover = new ImageIcon(getClass().getResource("/recursos/iconos/close.png"));
                ImageIcon icono_Descargar = new ImageIcon(getClass().getResource("/recursos/iconos/download.png"));
                for (File archivo_Abierto : archivos_Abiertos) {
                    celdas[0] = new Celda_Renderer(icono_Abrir,archivo_Abierto.getName(),archivo_Abierto.getAbsolutePath());
                    celdas[1] = new Celda_Renderer(LocalDateTime.now().toString(),"");
                    celdas[2] = new Celda_Renderer(icono_Descargar,"");
                    celdas[3] = new Celda_Renderer(icono_Remover,"");
                    modelo.addRow(celdas);
                }
            }
        }
    }
   

    @Override
    public void Limpiar() {
       
        
        
    }

    @Override
    public void Carta_Visible() {
        switch (carta_Visible) {
            case 0:
                informacion_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
                archivos_Adjuntos_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                comentarios_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                entregar_Tarea_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                retroalimentacion_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                break;
            case 1:
                informacion_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                archivos_Adjuntos_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
                comentarios_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                entregar_Tarea_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                retroalimentacion_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                break;
            case 2:
                informacion_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                archivos_Adjuntos_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                comentarios_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
                entregar_Tarea_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                retroalimentacion_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                break;
            case 3:
                informacion_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                archivos_Adjuntos_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                comentarios_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                entregar_Tarea_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
                retroalimentacion_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                break;
            case 4:
                informacion_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                archivos_Adjuntos_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                comentarios_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                entregar_Tarea_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                retroalimentacion_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
                break;
            
        }
    }
}
