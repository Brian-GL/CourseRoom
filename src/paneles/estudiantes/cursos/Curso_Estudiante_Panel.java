/*
 * Copyright (C) 2022 LENOVO
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package paneles.estudiantes.cursos;

import clases.Celda_Renderer;
import clases.Escogedor_Archivos;
import courseroom.CourseRoom;
import datos.interfaces.Carta_Visibilidad_Interface;
import datos.interfaces.Componentes_Interface;
import datos.interfaces.Envio_Interface;
import datos.interfaces.Limpieza_Interface;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.commons.io.FilenameUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import paneles.estudiantes.Tablero_Estudiante_Panel;
import paneles.estudiantes.perfil.Perfil_Estudiante_Panel;
import paneles.estudiantes.tareas.Tareas_Estudiante_Panel;
import javax.swing.border.BevelBorder;
import javax.swing.border.TitledBorder;

/**
 *
 * @author LENOVO
 */
public class Curso_Estudiante_Panel extends javax.swing.JPanel implements Limpieza_Interface, Componentes_Interface, Carta_Visibilidad_Interface, Envio_Interface{

    private byte carta_Visible;
    private String ID;
    private String ID_Cuestionario;
    private Cuestionario_Curso_Estudiante_Panel cuestionario_Curso_Estudiante_Panel;
    
   
    public Curso_Estudiante_Panel(String _nombre_Curso,
        Image _imagen_Curso,
        String _nombre_Profesor,
        Image _imagen_Profesor,
        String _fecha_Creacion,
        String _id) {
        initComponents();
        
        titulo_JLabel.setText(_nombre_Curso);
        ImageIcon icono = new ImageIcon(_imagen_Curso);
        imagen_Curso_JLabel.setIcon(icono);
        icono = new ImageIcon(_imagen_Profesor);
        imagen_Profesor_JLabel.setIcon(icono);
        this.ID = _id;
        fecha_Creacion_JLabel.setText(CourseRoom.Utilerias.Formato_HTML_Central(CourseRoom.Utilerias.Concatenar("Creado El ",_fecha_Creacion)));
        descripcion_Profesor_JTextPane.setText(CourseRoom.Utilerias.Formato_HTML_Izquierda(CourseRoom.Utilerias.Concatenar("<b>",_nombre_Profesor, ":<b><br> <br>",CourseRoom.Utilerias.lorem().paragraph(10))));
        
        _imagen_Curso.flush();
        _imagen_Profesor.flush();
        
        Iniciar_Componentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo_JPanel = new javax.swing.JPanel();
        titulo_JLabel = new javax.swing.JLabel();
        tareas_JButton = new javax.swing.JButton();
        materiales_JButton = new javax.swing.JButton();
        informacion_JButton = new javax.swing.JButton();
        regresar_JButton = new javax.swing.JButton();
        miembros_JButton = new javax.swing.JButton();
        actualizar_JButton = new javax.swing.JButton();
        chat_JButton = new javax.swing.JButton();
        regresion_Lineal_JButton = new javax.swing.JButton();
        estadisticas_JButton = new javax.swing.JButton();
        curso_JLayeredPane = new javax.swing.JLayeredPane();
        informacion_Curso_JScrollPane = new javax.swing.JScrollPane();
        informacion_Curso_JPanel = new javax.swing.JPanel();
        imagen_Curso_JLabel = new javax.swing.JLabel();
        descripcion_Curso_JScrollPane = new javax.swing.JScrollPane();
        descripcion_Curso_JTextPane = new javax.swing.JTextPane();
        descripcion_Profesor_JScrollPane = new javax.swing.JScrollPane();
        descripcion_Profesor_JTextPane = new javax.swing.JTextPane();
        imagen_Profesor_JLabel = new javax.swing.JLabel();
        fecha_Creacion_JLabel = new javax.swing.JLabel();
        intereses_Tematicas_JScrollPane = new javax.swing.JScrollPane();
        intereses_Tematicas_JTable = new javax.swing.JTable();
        tareas_JScrollPane = new javax.swing.JScrollPane();
        tareas_JTable = new javax.swing.JTable();
        miembros_JScrollPane = new javax.swing.JScrollPane();
        miembros_JTable = new javax.swing.JTable();
        chat_JPanel = new javax.swing.JPanel();
        mensajes_Chat_JScrollPane = new javax.swing.JScrollPane();
        mensajes_Chat_JTable = new javax.swing.JTable();
        enviar_Mensaje_Chat_JPanel = new javax.swing.JPanel();
        enviar_Archivo_Chat_JButton = new javax.swing.JButton();
        redactar_Mensaje_Chat_JTextField = new javax.swing.JTextField();
        materiales_Curso_JPanel = new javax.swing.JPanel();
        compartir_Materiales_JButton = new javax.swing.JButton();
        materiales_JScrollPane = new javax.swing.JScrollPane();
        materiales_JTable = new javax.swing.JTable();
        regresion_Lineal_JPanel = new javax.swing.JPanel();
        estadisticas_JPanel = new javax.swing.JPanel();
        estadisticas_JScrollPane = new javax.swing.JScrollPane();
        estadisticas_JTable = new javax.swing.JTable();
        abandonar_Curso_JButton = new javax.swing.JButton();
        finalizar_Curso_JButton = new javax.swing.JButton();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1110, 630));

        titulo_JPanel.setMaximumSize(new java.awt.Dimension(32767, 72));
        titulo_JPanel.setOpaque(false);
        titulo_JPanel.setPreferredSize(new java.awt.Dimension(982, 72));

        titulo_JLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        titulo_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo_JLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        titulo_JLabel.setMaximumSize(new java.awt.Dimension(818, 68));
        titulo_JLabel.setMinimumSize(new java.awt.Dimension(818, 68));
        titulo_JLabel.setOpaque(true);
        titulo_JLabel.setPreferredSize(new java.awt.Dimension(818, 68));

        tareas_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/homework.png"))); // NOI18N
        tareas_JButton.setToolTipText("<html>\n<h3>Tareas</h3></html>");
        tareas_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)tareas_JButton.getIcon()).getImage().flush();
        tareas_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tareas_JButtonMouseClicked(evt);
            }
        });

        materiales_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/book.png"))); // NOI18N
        materiales_JButton.setToolTipText("<html>\n<h3>Materiales</h3></html>");
        materiales_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)materiales_JButton.getIcon()).getImage().flush();
        materiales_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                materiales_JButtonMouseClicked(evt);
            }
        });

        informacion_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/teacher_1.png"))); // NOI18N
        informacion_JButton.setToolTipText("<html>\n<h3>Informaci√≥n Del Curso\n</h3></html>");
        informacion_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)informacion_JButton.getIcon()).getImage().flush();
        informacion_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                informacion_JButtonMouseClicked(evt);
            }
        });

        regresar_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/reply.png"))); // NOI18N
        regresar_JButton.setToolTipText("Regresar A Mis Cursos");
        regresar_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        regresar_JButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ((ImageIcon)regresar_JButton.getIcon()).getImage().flush();
        regresar_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                regresar_JButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                regresar_JButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                regresar_JButtonMouseExited(evt);
            }
        });

        miembros_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/team.png"))); // NOI18N
        miembros_JButton.setToolTipText("<html>\n<h3>Miembros Del Curso</h3></html>");
        miembros_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)miembros_JButton.getIcon()).getImage().flush();
        miembros_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miembros_JButtonMouseClicked(evt);
            }
        });

        actualizar_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/updated.png"))); // NOI18N
        actualizar_JButton.setToolTipText("<html>\n<h4>Actualizar<br>P√°gina\n</h4></html>");
        actualizar_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)actualizar_JButton.getIcon()).getImage().flush();
        actualizar_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actualizar_JButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                actualizar_JButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                actualizar_JButtonMouseExited(evt);
            }
        });

        chat_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/meeting.png"))); // NOI18N
        chat_JButton.setToolTipText("<html>\n<h3>Chat Del Curso</h3></html>");
        chat_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)chat_JButton.getIcon()).getImage().flush();
        chat_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chat_JButtonMouseClicked(evt);
            }
        });

        regresion_Lineal_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/function.png"))); // NOI18N
        regresion_Lineal_JButton.setToolTipText("<html>\n<h3Grafica De<br>Avance</h3></html>");
        regresion_Lineal_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)regresion_Lineal_JButton.getIcon()).getImage().flush();
        regresion_Lineal_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                regresion_Lineal_JButtonMouseClicked(evt);
            }
        });

        estadisticas_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/stats.png"))); // NOI18N
        estadisticas_JButton.setToolTipText("<html>\n<h3>Estad√≠sticas</h3></html>");
        estadisticas_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)estadisticas_JButton.getIcon()).getImage().flush();
        estadisticas_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                estadisticas_JButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout titulo_JPanelLayout = new javax.swing.GroupLayout(titulo_JPanel);
        titulo_JPanel.setLayout(titulo_JPanelLayout);
        titulo_JPanelLayout.setHorizontalGroup(
            titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titulo_JPanelLayout.createSequentialGroup()
                .addComponent(regresar_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(titulo_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(60, 60, 60)
                .addComponent(informacion_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tareas_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(miembros_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chat_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(materiales_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(regresion_Lineal_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(estadisticas_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actualizar_JButton))
        );
        titulo_JPanelLayout.setVerticalGroup(
            titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titulo_JPanelLayout.createSequentialGroup()
                .addGroup(titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(regresar_JButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(titulo_JPanelLayout.createSequentialGroup()
                        .addGroup(titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tareas_JButton)
                            .addComponent(materiales_JButton)
                            .addComponent(informacion_JButton)
                            .addComponent(titulo_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(miembros_JButton)
                            .addComponent(actualizar_JButton)
                            .addComponent(chat_JButton)
                            .addComponent(regresion_Lineal_JButton)
                            .addComponent(estadisticas_JButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        curso_JLayeredPane.setPreferredSize(new java.awt.Dimension(1046, 545));
        curso_JLayeredPane.setLayout(new java.awt.CardLayout());

        informacion_Curso_JScrollPane.setBorder(null);
        informacion_Curso_JScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        informacion_Curso_JScrollPane.setMinimumSize(new java.awt.Dimension(0, 0));
        informacion_Curso_JScrollPane.setOpaque(false);
        informacion_Curso_JScrollPane.setPreferredSize(new java.awt.Dimension(1046, 1128));

        informacion_Curso_JPanel.setOpaque(false);
        informacion_Curso_JPanel.setPreferredSize(new java.awt.Dimension(1046, 1128));

        imagen_Curso_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagen_Curso_JLabel.setToolTipText("Imagen Del Grupo");
        imagen_Curso_JLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        imagen_Curso_JLabel.setMaximumSize(new java.awt.Dimension(400, 400));
        imagen_Curso_JLabel.setMinimumSize(new java.awt.Dimension(400, 400));
        imagen_Curso_JLabel.setPreferredSize(new java.awt.Dimension(400, 400));

        descripcion_Curso_JScrollPane.setBorder(null);
        descripcion_Curso_JScrollPane.setOpaque(false);

        descripcion_Curso_JTextPane.setEditable(false);
        descripcion_Curso_JTextPane.setBorder(null);
        descripcion_Curso_JTextPane.setContentType("text/html"); // NOI18N
        descripcion_Curso_JTextPane.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        descripcion_Curso_JTextPane.setText("");
        descripcion_Curso_JTextPane.setOpaque(false);
        descripcion_Curso_JScrollPane.setViewportView(descripcion_Curso_JTextPane);

        descripcion_Profesor_JScrollPane.setBorder(null);
        descripcion_Profesor_JScrollPane.setOpaque(false);

        descripcion_Profesor_JTextPane.setEditable(false);
        descripcion_Profesor_JTextPane.setBorder(null);
        descripcion_Profesor_JTextPane.setContentType("text/html"); // NOI18N
        descripcion_Profesor_JTextPane.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        descripcion_Profesor_JTextPane.setText("");
        descripcion_Profesor_JTextPane.setOpaque(false);
        descripcion_Profesor_JScrollPane.setViewportView(descripcion_Profesor_JTextPane);

        imagen_Profesor_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagen_Profesor_JLabel.setToolTipText("Imagen Del Grupo");
        imagen_Profesor_JLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        imagen_Profesor_JLabel.setMaximumSize(new java.awt.Dimension(400, 400));
        imagen_Profesor_JLabel.setMinimumSize(new java.awt.Dimension(400, 400));
        imagen_Profesor_JLabel.setPreferredSize(new java.awt.Dimension(400, 400));

        fecha_Creacion_JLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        fecha_Creacion_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fecha_Creacion_JLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/calendar_1.png"))); // NOI18N
        fecha_Creacion_JLabel.setToolTipText("Fecha De Creaci√≥n Del Grupo");
        fecha_Creacion_JLabel.setMaximumSize(new java.awt.Dimension(354, 20));
        fecha_Creacion_JLabel.setMinimumSize(new java.awt.Dimension(354, 20));
        fecha_Creacion_JLabel.setPreferredSize(new java.awt.Dimension(354, 20));
        ((ImageIcon)fecha_Creacion_JLabel.getIcon()).getImage().flush();

        intereses_Tematicas_JScrollPane.setBorder(null);
        intereses_Tematicas_JScrollPane.setOpaque(false);

        intereses_Tematicas_JTable.setAutoCreateRowSorter(true);
        intereses_Tematicas_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        intereses_Tematicas_JTable.setModel(

            new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "Interes / Tem√°tica"
                }
            ) {
                boolean[] canEdit = new boolean [] {
                    false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }

                @Override
                public Class getColumnClass(int column)
                {
                    for(int i = 0; i < intereses_Tematicas_JTable.getRowCount(); i++)
                    {
                        //The first valid value of a cell of given column is retrieved.
                        if(getValueAt(i,column) != null)
                        {
                            return getValueAt(i, column).getClass();
                        }
                    }
                    //if no valid value is found, default renderer is returned.
                    return super.getColumnClass(column);
                }
            });
            intereses_Tematicas_JTable.setRowHeight(32);
            intereses_Tematicas_JTable.setShowGrid(true);
            intereses_Tematicas_JTable.setSurrendersFocusOnKeystroke(true);
            intereses_Tematicas_JTable.setRowSorter(new TableRowSorter(intereses_Tematicas_JTable.getModel()));
            intereses_Tematicas_JScrollPane.setViewportView(intereses_Tematicas_JTable);

            javax.swing.GroupLayout informacion_Curso_JPanelLayout = new javax.swing.GroupLayout(informacion_Curso_JPanel);
            informacion_Curso_JPanel.setLayout(informacion_Curso_JPanelLayout);
            informacion_Curso_JPanelLayout.setHorizontalGroup(
                informacion_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(informacion_Curso_JPanelLayout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addGroup(informacion_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(descripcion_Curso_JScrollPane)
                        .addComponent(intereses_Tematicas_JScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                        .addComponent(descripcion_Profesor_JScrollPane, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGap(18, 18, 18)
                    .addGroup(informacion_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informacion_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(imagen_Profesor_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fecha_Creacion_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(imagen_Curso_JLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, 0))
            );
            informacion_Curso_JPanelLayout.setVerticalGroup(
                informacion_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(informacion_Curso_JPanelLayout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addGroup(informacion_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(imagen_Curso_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(descripcion_Curso_JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(informacion_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(descripcion_Profesor_JScrollPane)
                        .addComponent(imagen_Profesor_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(informacion_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(intereses_Tematicas_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                        .addComponent(fecha_Creacion_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(0, 0, 0))
            );

            informacion_Curso_JScrollPane.setViewportView(informacion_Curso_JPanel);

            curso_JLayeredPane.add(informacion_Curso_JScrollPane, "card4");

            tareas_JScrollPane.setBorder(null);
            tareas_JScrollPane.setOpaque(false);
            tareas_JScrollPane.setPreferredSize(new java.awt.Dimension(1046, 540));

            tareas_JTable.setAutoCreateRowSorter(true);
            tareas_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
            tareas_JTable.setModel(

                new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                        "Tarea", "Creada El", "Entrega", "Estatus"
                    }
                ) {
                    boolean[] canEdit = new boolean [] {
                        false, false, false, false
                    };

                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit [columnIndex];
                    }

                    @Override
                    public Class getColumnClass(int column)
                    {
                        for(int i = 0; i < tareas_JTable.getRowCount(); i++)
                        {
                            //The first valid value of a cell of given column is retrieved.
                            if(getValueAt(i,column) != null)
                            {
                                return getValueAt(i, column).getClass();
                            }
                        }
                        //if no valid value is found, default renderer is returned.
                        return super.getColumnClass(column);
                    }
                });
                tareas_JTable.setRowHeight(100);
                tareas_JTable.setShowGrid(true);
                tareas_JTable.setSurrendersFocusOnKeystroke(true);
                tareas_JTable.setRowSorter(new TableRowSorter(tareas_JTable.getModel()));
                tareas_JTable.addMouseListener(new MouseAdapter() {

                    @Override
                    public void mousePressed(MouseEvent e) {
                        if (e.getClickCount() == 2) {

                            JTable tabla = (JTable) e.getComponent();
                            int fila = tabla.getRowSorter().convertRowIndexToModel(tabla.getSelectedRow());
                            int columna = tabla.getSelectedColumn();

                            DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();

                            Celda_Renderer celda = (Celda_Renderer) modelo.getValueAt(fila, columna);
                            Tablero_Estudiante_Panel.Mostrar_Vista(celda.ID());

                        }
                    }
                });
                tareas_JScrollPane.setViewportView(tareas_JTable);

                curso_JLayeredPane.add(tareas_JScrollPane, "Tareas");

                miembros_JScrollPane.setBorder(null);
                miembros_JScrollPane.setOpaque(false);
                miembros_JScrollPane.setPreferredSize(new java.awt.Dimension(1046, 540));

                miembros_JTable.setAutoCreateRowSorter(true);
                miembros_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                miembros_JTable.setModel(

                    new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                            "Miembro", "Ingreso"
                        }
                    ) {
                        boolean[] canEdit = new boolean [] {
                            false, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                            return canEdit [columnIndex];
                        }

                        @Override
                        public Class getColumnClass(int column)
                        {
                            for(int i = 0; i < miembros_JTable.getRowCount(); i++)
                            {
                                //The first valid value of a cell of given column is retrieved.
                                if(getValueAt(i,column) != null)
                                {
                                    return getValueAt(i, column).getClass();
                                }
                            }
                            //if no valid value is found, default renderer is returned.
                            return super.getColumnClass(column);
                        }
                    });
                    miembros_JTable.setRowHeight(110);
                    miembros_JTable.setShowGrid(true);
                    miembros_JTable.setSurrendersFocusOnKeystroke(true);
                    miembros_JTable.setRowSorter(new TableRowSorter(miembros_JTable.getModel()));
                    miembros_JScrollPane.setViewportView(miembros_JTable);

                    curso_JLayeredPane.add(miembros_JScrollPane, "Miembros");

                    chat_JPanel.setFont(new java.awt.Font("Gadugi", 0, 12)); // NOI18N
                    chat_JPanel.setOpaque(false);
                    chat_JPanel.setPreferredSize(new java.awt.Dimension(1110, 630));
                    chat_JPanel.setLayout(new java.awt.BorderLayout());

                    mensajes_Chat_JScrollPane.setBorder(null);
                    mensajes_Chat_JScrollPane.setOpaque(false);

                    mensajes_Chat_JTable.setAutoCreateRowSorter(true);
                    mensajes_Chat_JTable.setModel(

                        new javax.swing.table.DefaultTableModel(
                            new Object [][] {

                            },
                            new String [] {
                                "Emisor", "Mensaje", "Fecha"
                            }
                        ) {
                            boolean[] canEdit = new boolean [] {
                                false, false, false
                            };

                            public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                            }

                            @Override
                            public Class getColumnClass(int column)
                            {
                                for(int i = 0; i < mensajes_Chat_JTable.getRowCount(); i++)
                                {
                                    //The first valid value of a cell of given column is retrieved.
                                    if(getValueAt(i,column) != null)
                                    {
                                        return getValueAt(i, column).getClass();
                                    }
                                }
                                //if no valid value is found, default renderer is returned.
                                return super.getColumnClass(column);
                            }
                        });
                        mensajes_Chat_JTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
                        mensajes_Chat_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                        mensajes_Chat_JTable.setRowHeight(80);
                        mensajes_Chat_JTable.setShowGrid(true);
                        mensajes_Chat_JTable.setSurrendersFocusOnKeystroke(true);
                        mensajes_Chat_JTable.setRowSorter(new TableRowSorter(mensajes_Chat_JTable.getModel()));
                        mensajes_Chat_JTable.addMouseListener(new MouseAdapter() {

                            @Override
                            public void mousePressed(MouseEvent e) {
                                if (e.getClickCount() == 2) {

                                    JTable tabla = (JTable) e.getComponent();
                                    int fila = tabla.getRowSorter().convertRowIndexToModel(tabla.getSelectedRow());
                                    int columna = tabla.getSelectedColumn();

                                    // Abrir
                                    if (columna == 1) {
                                        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
                                        Celda_Renderer celda = (Celda_Renderer)modelo.getValueAt(fila, columna);

                                        if(celda.Tiene_Icono()){
                                            String extension = FilenameUtils.getExtension(celda.Texto());
                                            String ruta = celda.ID();
                                            CourseRoom.Utilerias.Abrir_Archivo(ruta, extension, celda.Texto());
                                        }
                                    }

                                }
                            }
                        });
                        mensajes_Chat_JScrollPane.setViewportView(mensajes_Chat_JTable);

                        chat_JPanel.add(mensajes_Chat_JScrollPane, java.awt.BorderLayout.CENTER);

                        enviar_Mensaje_Chat_JPanel.setMaximumSize(new java.awt.Dimension(32767, 44));
                        enviar_Mensaje_Chat_JPanel.setPreferredSize(new java.awt.Dimension(1085, 44));
                        enviar_Mensaje_Chat_JPanel.setLayout(new java.awt.BorderLayout());

                        enviar_Archivo_Chat_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/attachment.png"))); // NOI18N
                        enviar_Archivo_Chat_JButton.setToolTipText("Enviar Archivo");
                        enviar_Archivo_Chat_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                        enviar_Archivo_Chat_JButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                        ((ImageIcon)enviar_Archivo_Chat_JButton.getIcon()).getImage().flush();
                        enviar_Archivo_Chat_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                            public void mouseClicked(java.awt.event.MouseEvent evt) {
                                enviar_Archivo_Chat_JButtonMouseClicked(evt);
                            }
                            public void mouseEntered(java.awt.event.MouseEvent evt) {
                                enviar_Archivo_Chat_JButtonMouseEntered(evt);
                            }
                            public void mouseExited(java.awt.event.MouseEvent evt) {
                                enviar_Archivo_Chat_JButtonMouseExited(evt);
                            }
                        });
                        enviar_Mensaje_Chat_JPanel.add(enviar_Archivo_Chat_JButton, java.awt.BorderLayout.WEST);

                        redactar_Mensaje_Chat_JTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
                        redactar_Mensaje_Chat_JTextField.setPreferredSize(new java.awt.Dimension(71, 34));
                        redactar_Mensaje_Chat_JTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                            public void keyPressed(java.awt.event.KeyEvent evt) {
                                redactar_Mensaje_Chat_JTextFieldKeyPressed(evt);
                            }
                        });
                        enviar_Mensaje_Chat_JPanel.add(redactar_Mensaje_Chat_JTextField, java.awt.BorderLayout.CENTER);

                        chat_JPanel.add(enviar_Mensaje_Chat_JPanel, java.awt.BorderLayout.SOUTH);

                        curso_JLayeredPane.add(chat_JPanel, "Chat");

                        materiales_Curso_JPanel.setToolTipText("");
                        materiales_Curso_JPanel.setOpaque(false);
                        materiales_Curso_JPanel.setPreferredSize(new java.awt.Dimension(1046, 630));

                        compartir_Materiales_JButton.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
                        compartir_Materiales_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/submit.png"))); // NOI18N
                        compartir_Materiales_JButton.setText("Compartir Material(es)");
                        compartir_Materiales_JButton.setToolTipText("Compartir Y Subir Archivo");
                        compartir_Materiales_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                        ((ImageIcon)compartir_Materiales_JButton.getIcon()).getImage().flush();
                        compartir_Materiales_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                            public void mouseClicked(java.awt.event.MouseEvent evt) {
                                compartir_Materiales_JButtonMouseClicked(evt);
                            }
                            public void mouseEntered(java.awt.event.MouseEvent evt) {
                                compartir_Materiales_JButtonMouseEntered(evt);
                            }
                            public void mouseExited(java.awt.event.MouseEvent evt) {
                                compartir_Materiales_JButtonMouseExited(evt);
                            }
                        });

                        materiales_JScrollPane.setBorder(null);
                        materiales_JScrollPane.setOpaque(false);

                        materiales_JTable.setAutoCreateRowSorter(true);
                        materiales_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                        materiales_JTable.setModel(

                            new javax.swing.table.DefaultTableModel(
                                new Object [][] {

                                },
                                new String [] {
                                    "Material", "Emisor", "Subido", "Remover"
                                }
                            ) {
                                boolean[] canEdit = new boolean [] {
                                    false, false, false, false
                                };

                                public boolean isCellEditable(int rowIndex, int columnIndex) {
                                    return canEdit [columnIndex];
                                }

                                @Override
                                public Class getColumnClass(int column)
                                {
                                    for(int i = 0; i < materiales_JTable.getRowCount(); i++)
                                    {
                                        //The first valid value of a cell of given column is retrieved.
                                        if(getValueAt(i,column) != null)
                                        {
                                            return getValueAt(i, column).getClass();
                                        }
                                    }
                                    //if no valid value is found, default renderer is returned.
                                    return super.getColumnClass(column);
                                }
                            });
                            materiales_JTable.setRowHeight(75);
                            materiales_JTable.setShowGrid(true);
                            materiales_JTable.setSurrendersFocusOnKeystroke(true);
                            materiales_JTable.setRowSorter(new TableRowSorter(materiales_JTable.getModel()));
                            materiales_JScrollPane.setViewportView(materiales_JTable);

                            javax.swing.GroupLayout materiales_Curso_JPanelLayout = new javax.swing.GroupLayout(materiales_Curso_JPanel);
                            materiales_Curso_JPanel.setLayout(materiales_Curso_JPanelLayout);
                            materiales_Curso_JPanelLayout.setHorizontalGroup(
                                materiales_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(materiales_Curso_JPanelLayout.createSequentialGroup()
                                    .addGap(0, 0, 0)
                                    .addGroup(materiales_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(materiales_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE)
                                        .addGroup(materiales_Curso_JPanelLayout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addComponent(compartir_Materiales_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(0, 0, 0))
                            );
                            materiales_Curso_JPanelLayout.setVerticalGroup(
                                materiales_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(materiales_Curso_JPanelLayout.createSequentialGroup()
                                    .addGap(0, 0, 0)
                                    .addComponent(compartir_Materiales_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(materiales_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)
                                    .addGap(0, 0, 0))
                            );

                            curso_JLayeredPane.add(materiales_Curso_JPanel, "Materiales");

                            regresion_Lineal_JPanel.setOpaque(false);
                            regresion_Lineal_JPanel.setPreferredSize(new java.awt.Dimension(1046, 540));
                            regresion_Lineal_JPanel.setLayout(new java.awt.BorderLayout());
                            curso_JLayeredPane.add(regresion_Lineal_JPanel, "Regresion_Lineal");

                            estadisticas_JPanel.setOpaque(false);
                            estadisticas_JPanel.setPreferredSize(new java.awt.Dimension(1046, 540));

                            estadisticas_JScrollPane.setBorder(null);
                            estadisticas_JScrollPane.setOpaque(false);

                            estadisticas_JTable.setAutoCreateRowSorter(true);
                            estadisticas_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                            estadisticas_JTable.setModel(

                                new javax.swing.table.DefaultTableModel(
                                    new Object [][] {

                                    },
                                    new String [] {
                                        "Tarea Calificada", "Calificaci√≥n","Promedio Curso","Predicci√≥n","Rumbo", "Fecha"
                                    }
                                ) {
                                    boolean[] canEdit = new boolean [] {
                                        false, false, false, false, false, false
                                    };

                                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                                        return canEdit [columnIndex];
                                    }

                                    @Override
                                    public Class getColumnClass(int column)
                                    {
                                        for(int i = 0; i < estadisticas_JTable.getRowCount(); i++)
                                        {
                                            //The first valid value of a cell of given column is retrieved.
                                            if(getValueAt(i,column) != null)
                                            {
                                                return getValueAt(i, column).getClass();
                                            }
                                        }
                                        //if no valid value is found, default renderer is returned.
                                        return super.getColumnClass(column);
                                    }
                                });
                                estadisticas_JTable.setRowHeight(100);
                                estadisticas_JTable.setShowGrid(true);
                                estadisticas_JTable.setSurrendersFocusOnKeystroke(true);
                                estadisticas_JTable.setRowSorter(new TableRowSorter(estadisticas_JTable.getModel()));
                                estadisticas_JScrollPane.setViewportView(estadisticas_JTable);

                                abandonar_Curso_JButton.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
                                abandonar_Curso_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/leave.png"))); // NOI18N
                                abandonar_Curso_JButton.setText("Abandonar Curso");
                                abandonar_Curso_JButton.setToolTipText("Abandona Y Elimina El Grupo De Los Tuyos");
                                abandonar_Curso_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                                ((ImageIcon)abandonar_Curso_JButton.getIcon()).getImage().flush();
                                abandonar_Curso_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                                        abandonar_Curso_JButtonMouseClicked(evt);
                                    }
                                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                                        abandonar_Curso_JButtonMouseEntered(evt);
                                    }
                                    public void mouseExited(java.awt.event.MouseEvent evt) {
                                        abandonar_Curso_JButtonMouseExited(evt);
                                    }
                                });

                                finalizar_Curso_JButton.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
                                finalizar_Curso_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/woman.png"))); // NOI18N
                                finalizar_Curso_JButton.setText("Finalizar Curso");
                                finalizar_Curso_JButton.setToolTipText("Finaliza el curso");
                                finalizar_Curso_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                                ((ImageIcon)finalizar_Curso_JButton.getIcon()).getImage().flush();
                                finalizar_Curso_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                                        finalizar_Curso_JButtonMouseClicked(evt);
                                    }
                                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                                        finalizar_Curso_JButtonMouseEntered(evt);
                                    }
                                    public void mouseExited(java.awt.event.MouseEvent evt) {
                                        finalizar_Curso_JButtonMouseExited(evt);
                                    }
                                });

                                javax.swing.GroupLayout estadisticas_JPanelLayout = new javax.swing.GroupLayout(estadisticas_JPanel);
                                estadisticas_JPanel.setLayout(estadisticas_JPanelLayout);
                                estadisticas_JPanelLayout.setHorizontalGroup(
                                    estadisticas_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(estadisticas_JPanelLayout.createSequentialGroup()
                                        .addGroup(estadisticas_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(estadisticas_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE)
                                            .addGroup(estadisticas_JPanelLayout.createSequentialGroup()
                                                .addComponent(abandonar_Curso_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(finalizar_Curso_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, 0))
                                );
                                estadisticas_JPanelLayout.setVerticalGroup(
                                    estadisticas_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(estadisticas_JPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, 0)
                                        .addComponent(estadisticas_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addGroup(estadisticas_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(abandonar_Curso_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(finalizar_Curso_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addContainerGap())
                                );

                                curso_JLayeredPane.add(estadisticas_JPanel, "Estadisticas");

                                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                                this.setLayout(layout);
                                layout.setHorizontalGroup(
                                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(curso_JLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(titulo_JPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE))
                                        .addGap(32, 32, 32))
                                );
                                layout.setVerticalGroup(
                                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(titulo_JPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(curso_JLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                                        .addContainerGap())
                                );
                            }// </editor-fold>//GEN-END:initComponents

    private void tareas_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tareas_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout)curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Tareas");
            carta_Visible = 1;
            Carta_Visible();

        }
    }//GEN-LAST:event_tareas_JButtonMouseClicked

    private void materiales_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_materiales_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout)curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Materiales");
            carta_Visible = 4;
            Carta_Visible();
        }
    }//GEN-LAST:event_materiales_JButtonMouseClicked

    private void informacion_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_informacion_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout) curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Informacion");
            carta_Visible = 0;
            Carta_Visible();
        }
    }//GEN-LAST:event_informacion_JButtonMouseClicked

    private void regresar_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresar_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            Tablero_Estudiante_Panel.Mostrar_Vista("Cursos");
        }
    }//GEN-LAST:event_regresar_JButtonMouseClicked

    private void regresar_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresar_JButtonMouseEntered
        // TODO add your handling code here:
        regresar_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
    }//GEN-LAST:event_regresar_JButtonMouseEntered

    private void regresar_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresar_JButtonMouseExited
        // TODO add your handling code here:
        regresar_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
    }//GEN-LAST:event_regresar_JButtonMouseExited

    private void miembros_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miembros_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout) curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Miembros");
            carta_Visible = 2;
            Carta_Visible();
        }
    }//GEN-LAST:event_miembros_JButtonMouseClicked

    private void actualizar_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizar_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){

        }
    }//GEN-LAST:event_actualizar_JButtonMouseClicked

    private void actualizar_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizar_JButtonMouseEntered
        // TODO add your handling code here:
        actualizar_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
    }//GEN-LAST:event_actualizar_JButtonMouseEntered

    private void actualizar_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizar_JButtonMouseExited
        // TODO add your handling code here:
        actualizar_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
    }//GEN-LAST:event_actualizar_JButtonMouseExited

    private void compartir_Materiales_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compartir_Materiales_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            Enviar_Materiales();
        }
    }//GEN-LAST:event_compartir_Materiales_JButtonMouseClicked

    private void compartir_Materiales_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compartir_Materiales_JButtonMouseEntered
        // TODO add your handling code here:
        compartir_Materiales_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
        compartir_Materiales_JButton.setForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());
    }//GEN-LAST:event_compartir_Materiales_JButtonMouseEntered

    private void compartir_Materiales_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compartir_Materiales_JButtonMouseExited
        // TODO add your handling code here:
        compartir_Materiales_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
        compartir_Materiales_JButton.setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente());
    }//GEN-LAST:event_compartir_Materiales_JButtonMouseExited

    private void chat_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chat_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout)curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Chat");
            carta_Visible = 3;
            Carta_Visible();
        }
    }//GEN-LAST:event_chat_JButtonMouseClicked

    private void regresion_Lineal_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresion_Lineal_JButtonMouseClicked
        // TODO add your handling code here:
        if (SwingUtilities.isLeftMouseButton(evt)) {
            ((CardLayout)curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Regresion_Lineal");
            carta_Visible = 5;
            Carta_Visible();

        }
    }//GEN-LAST:event_regresion_Lineal_JButtonMouseClicked

    private void estadisticas_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_estadisticas_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout)curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Estadisticas");
            carta_Visible = 6;
            Carta_Visible();
        }
    }//GEN-LAST:event_estadisticas_JButtonMouseClicked

    private void abandonar_Curso_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_abandonar_Curso_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){

        }
    }//GEN-LAST:event_abandonar_Curso_JButtonMouseClicked

    private void abandonar_Curso_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_abandonar_Curso_JButtonMouseEntered
        // TODO add your handling code here:
        abandonar_Curso_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color().darker());
        abandonar_Curso_JButton.setForeground(CourseRoom.Utilerias.Segundo_Color_Fuente().brighter());
    }//GEN-LAST:event_abandonar_Curso_JButtonMouseEntered

    private void abandonar_Curso_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_abandonar_Curso_JButtonMouseExited
        // TODO add your handling code here:
        abandonar_Curso_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color().darker());
        abandonar_Curso_JButton.setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente().brighter());
    }//GEN-LAST:event_abandonar_Curso_JButtonMouseExited

    private void finalizar_Curso_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_finalizar_Curso_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            Tablero_Estudiante_Panel.Mostrar_Vista(ID_Cuestionario);
        }
    }//GEN-LAST:event_finalizar_Curso_JButtonMouseClicked

    private void finalizar_Curso_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_finalizar_Curso_JButtonMouseEntered
        // TODO add your handling code here:
        finalizar_Curso_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color().darker());
        finalizar_Curso_JButton.setForeground(CourseRoom.Utilerias.Segundo_Color_Fuente().brighter());
    }//GEN-LAST:event_finalizar_Curso_JButtonMouseEntered

    private void finalizar_Curso_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_finalizar_Curso_JButtonMouseExited
        // TODO add your handling code here:
        finalizar_Curso_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color().darker());
        finalizar_Curso_JButton.setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente().brighter());
    }//GEN-LAST:event_finalizar_Curso_JButtonMouseExited

    private void enviar_Archivo_Chat_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enviar_Archivo_Chat_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            Enviar_Archivos();
        }
    }//GEN-LAST:event_enviar_Archivo_Chat_JButtonMouseClicked

    private void enviar_Archivo_Chat_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enviar_Archivo_Chat_JButtonMouseEntered
        // TODO add your handling code here:
        enviar_Archivo_Chat_JButton.setBackground(CourseRoom.Utilerias.Primer_Color());
    }//GEN-LAST:event_enviar_Archivo_Chat_JButtonMouseEntered

    private void enviar_Archivo_Chat_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enviar_Archivo_Chat_JButtonMouseExited
        // TODO add your handling code here:
        enviar_Archivo_Chat_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
    }//GEN-LAST:event_enviar_Archivo_Chat_JButtonMouseExited

    private void redactar_Mensaje_Chat_JTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_redactar_Mensaje_Chat_JTextFieldKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            Enviar_Mensaje();
        }
    }//GEN-LAST:event_redactar_Mensaje_Chat_JTextFieldKeyPressed

    public String ID() {
        return this.ID;
    }
    
    private XYDataset createDataset() {  
        XYSeriesCollection dataset = new XYSeriesCollection();  

        //Boys (Age,weight) series  
        XYSeries series1 = new XYSeries("Boys");  
        series1.add(1, CourseRoom.Utilerias.number().randomDouble(2, 1,100));
        series1.add(2, CourseRoom.Utilerias.number().randomDouble(2, 1,100));
        series1.add(3, CourseRoom.Utilerias.number().randomDouble(2, 1,100));
        series1.add(4, CourseRoom.Utilerias.number().randomDouble(2, 1,100));
        series1.add(5, CourseRoom.Utilerias.number().randomDouble(2, 1,100));
        series1.add(6, CourseRoom.Utilerias.number().randomDouble(2, 1,100));
        series1.add(7, CourseRoom.Utilerias.number().randomDouble(2, 1,100));
        series1.add(8, CourseRoom.Utilerias.number().randomDouble(2, 1,100));
        series1.add(9, CourseRoom.Utilerias.number().randomDouble(2, 1,100));
        series1.add(10, CourseRoom.Utilerias.number().randomDouble(2, 1,100));

        dataset.addSeries(series1);  

        //Girls (Age,weight) series  
        XYSeries series2 = new XYSeries("Girls");  
        series2.add(1, CourseRoom.Utilerias.number().randomDouble(2, 1, 100));
        series2.add(2, CourseRoom.Utilerias.number().randomDouble(2, 1, 100));
        series2.add(3, CourseRoom.Utilerias.number().randomDouble(2, 1, 100));
        series2.add(4, CourseRoom.Utilerias.number().randomDouble(2, 1, 100));
        series2.add(5, CourseRoom.Utilerias.number().randomDouble(2, 1, 100));
        series2.add(6, CourseRoom.Utilerias.number().randomDouble(2, 1, 100));
        series2.add(7, CourseRoom.Utilerias.number().randomDouble(2, 1, 100));
        series2.add(8, CourseRoom.Utilerias.number().randomDouble(2, 1, 100));
        series2.add(9, CourseRoom.Utilerias.number().randomDouble(2, 1, 100));
        series2.add(10, CourseRoom.Utilerias.number().randomDouble(2, 1, 100));

        dataset.addSeries(series2);  
        
        //Boys (Age,weight) series  
        XYSeries series3 = new XYSeries("Regresion Lineal", false);  
        series3.add(1, series1.getX(0));  
        series3.add(10, series2.getX(9)); 
        
        dataset.addSeries(series3);

        return dataset;  
    }  
    
    private void Agregar_Interes_Tematica(String interes_Tematica){
        
        DefaultTableModel modelo = (DefaultTableModel) intereses_Tematicas_JTable.getModel();
        Celda_Renderer[] celdas = new Celda_Renderer[1];
        Celda_Renderer celda;
        
        celda = new Celda_Renderer(interes_Tematica);
        celdas[0] = celda;
        modelo.addRow(celdas);
        
        intereses_Tematicas_JTable.setRowHeight(modelo.getRowCount()-1, CourseRoom.Utilerias.Altura_Fila_Tabla(interes_Tematica.length()));
        
    }
    
    private void Agregar_Tarea(String nombre_Tarea, String fecha_Creacion, String fecha_Entrega, String estatus, String _id){
        
        Celda_Renderer[] celdas = new Celda_Renderer[4];
        Celda_Renderer celda;
        DefaultTableModel modelo = (DefaultTableModel) tareas_JTable.getModel();

        Image imagen_Curso = ((ImageIcon)imagen_Curso_JLabel.getIcon()).getImage();
        imagen_Curso = imagen_Curso.getScaledInstance(96, 96, Image.SCALE_SMOOTH);
        ImageIcon icono_Curso = new ImageIcon(imagen_Curso);
        
        celda = new Celda_Renderer(nombre_Tarea, _id);
        celdas[0] = celda;
        celda = new Celda_Renderer(fecha_Creacion, _id);
        celdas[1] = celda;
        celda = new Celda_Renderer(fecha_Entrega, _id);
        celdas[2] = celda;
        celda = new Celda_Renderer(estatus, _id);
        celdas[3] = celda;
        
        Tareas_Estudiante_Panel.Agregar_Tarea_Desde_Curso(_id,nombre_Tarea, this.titulo_JLabel.getText() ,icono_Curso, fecha_Creacion, fecha_Entrega, estatus);
        
        modelo.addRow(celdas);
        
        tareas_JTable.setRowHeight(modelo.getRowCount()-1, CourseRoom.Utilerias.Altura_Fila_Tabla(nombre_Tarea.length()));
        
    }
    
    
    private void Agregar_Miembro(String ruta_Imagen_Miembro, String nombre_Miembro, String fecha_Ingreso){
        
        Celda_Renderer[] celdas = new Celda_Renderer[4];
        Celda_Renderer celda;
        DefaultTableModel modelo = (DefaultTableModel) miembros_JTable.getModel();
        
        URL url_Imagen;
        Image obtener_Imagen;
        ImageIcon icono_Miembro;
        
        try {
            
            url_Imagen = new URL(ruta_Imagen_Miembro);
            obtener_Imagen = ImageIO.read(url_Imagen);
            icono_Miembro = new ImageIcon(obtener_Imagen);

            celda = new Celda_Renderer(icono_Miembro,nombre_Miembro,"");
            celdas[0] = celda;
            celda = new Celda_Renderer(fecha_Ingreso);
            celdas[1] = celda;
            
            modelo.addRow(celdas);
            
            obtener_Imagen.flush();
            obtener_Imagen.getGraphics().dispose();
            miembros_JTable.setRowHeight(modelo.getRowCount()-1, CourseRoom.Utilerias.Altura_Fila_Tabla_Icono(0));
        } catch (MalformedURLException ex) {

        } catch (IOException ex) {

        }
        
    }
    
    private void Agregar_Estadistica(String tarea_Calificada, String calificacion, String promedio_Curso,
            String prediccion, boolean rumbo, String fecha_Calificacion){
        
        Celda_Renderer[] celdas = new Celda_Renderer[6];
        Celda_Renderer celda;
        DefaultTableModel modelo = (DefaultTableModel) estadisticas_JTable.getModel();
        Image imagen;
        ImageIcon icono;
        String vacio = new String();
        
        try{
            celda = new Celda_Renderer(tarea_Calificada);
            celdas[0] = celda;
            celda = new Celda_Renderer(calificacion);
            celdas[1] = celda;
            celda = new Celda_Renderer(promedio_Curso);
            celdas[2] = celda;
            celda = new Celda_Renderer(prediccion);
            celdas[3] = celda;

            if(rumbo){
                imagen = ImageIO.read(getClass().getResource("/recursos/iconos/check.png"));
                icono = new ImageIcon(imagen);
                celda =  new Celda_Renderer(icono, "A Aprobar",vacio);
            }else{
                imagen = ImageIO.read(getClass().getResource("/recursos/iconos/close.png"));
                icono = new ImageIcon(imagen);
                celda =  new Celda_Renderer(icono, "A Reprobar",vacio);
            }

            celdas[4] = celda;

            celda = new Celda_Renderer(fecha_Calificacion);
            celdas[5] = celda;

            modelo.addRow(celdas);

            estadisticas_JTable.setRowHeight(modelo.getRowCount()-1, CourseRoom.Utilerias.Altura_Fila_Tabla(tarea_Calificada.length()));

            imagen.flush();
        
        } catch(IOException e){
            
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abandonar_Curso_JButton;
    private javax.swing.JButton actualizar_JButton;
    private javax.swing.JButton chat_JButton;
    private javax.swing.JPanel chat_JPanel;
    private javax.swing.JButton compartir_Materiales_JButton;
    private javax.swing.JLayeredPane curso_JLayeredPane;
    private javax.swing.JScrollPane descripcion_Curso_JScrollPane;
    private javax.swing.JTextPane descripcion_Curso_JTextPane;
    private javax.swing.JScrollPane descripcion_Profesor_JScrollPane;
    private javax.swing.JTextPane descripcion_Profesor_JTextPane;
    private javax.swing.JButton enviar_Archivo_Chat_JButton;
    private javax.swing.JPanel enviar_Mensaje_Chat_JPanel;
    private javax.swing.JButton estadisticas_JButton;
    private javax.swing.JPanel estadisticas_JPanel;
    private javax.swing.JScrollPane estadisticas_JScrollPane;
    private javax.swing.JTable estadisticas_JTable;
    private javax.swing.JLabel fecha_Creacion_JLabel;
    private javax.swing.JButton finalizar_Curso_JButton;
    private javax.swing.JLabel imagen_Curso_JLabel;
    private javax.swing.JLabel imagen_Profesor_JLabel;
    private javax.swing.JPanel informacion_Curso_JPanel;
    private javax.swing.JScrollPane informacion_Curso_JScrollPane;
    private javax.swing.JButton informacion_JButton;
    private javax.swing.JScrollPane intereses_Tematicas_JScrollPane;
    private javax.swing.JTable intereses_Tematicas_JTable;
    private javax.swing.JPanel materiales_Curso_JPanel;
    private javax.swing.JButton materiales_JButton;
    private javax.swing.JScrollPane materiales_JScrollPane;
    private javax.swing.JTable materiales_JTable;
    private javax.swing.JScrollPane mensajes_Chat_JScrollPane;
    private javax.swing.JTable mensajes_Chat_JTable;
    private javax.swing.JButton miembros_JButton;
    private javax.swing.JScrollPane miembros_JScrollPane;
    private javax.swing.JTable miembros_JTable;
    private javax.swing.JTextField redactar_Mensaje_Chat_JTextField;
    private javax.swing.JButton regresar_JButton;
    private javax.swing.JButton regresion_Lineal_JButton;
    private javax.swing.JPanel regresion_Lineal_JPanel;
    private javax.swing.JButton tareas_JButton;
    private javax.swing.JScrollPane tareas_JScrollPane;
    private javax.swing.JTable tareas_JTable;
    private javax.swing.JLabel titulo_JLabel;
    private javax.swing.JPanel titulo_JPanel;
    // End of variables declaration//GEN-END:variables

    
    @Override
    public void Iniciar_Componentes() {
        carta_Visible = 0;
        
        //Informacion curso:
       
        informacion_Curso_JScrollPane.getViewport().setOpaque(false);
        informacion_Curso_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        informacion_Curso_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        descripcion_Curso_JTextPane.setText(CourseRoom.Utilerias.Formato_HTML_Izquierda(CourseRoom.Utilerias.lorem().paragraph(10)));
        descripcion_Curso_JScrollPane.getViewport().setOpaque(false);
        descripcion_Curso_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        descripcion_Curso_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        descripcion_Profesor_JScrollPane.getViewport().setOpaque(false);
        descripcion_Profesor_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        descripcion_Profesor_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        intereses_Tematicas_JScrollPane.getViewport().setOpaque(false);
        intereses_Tematicas_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        intereses_Tematicas_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        Font gadugi = new Font("Segoe UI", Font.BOLD, 16);
        intereses_Tematicas_JTable.getTableHeader().setFont(gadugi);
        intereses_Tematicas_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());

        Agregar_Interes_Tematica(CourseRoom.Utilerias.music().genre());
            
        //Tareas:
        
        tareas_JScrollPane.getViewport().setOpaque(false);
        tareas_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        tareas_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);

        tareas_JTable.getTableHeader().setFont(gadugi);
        tareas_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        
        String _id, nombre,  fecha_Creacion, fecha_Entrega, estatus;
          
        _id = CourseRoom.Utilerias.Concatenar(this.ID,"_Tarea_0");
        nombre = CourseRoom.Utilerias.university().name();
        fecha_Creacion = CourseRoom.Utilerias.Fecha_Hora_Local();
        fecha_Entrega = CourseRoom.Utilerias.Fecha_Hora(CourseRoom.Utilerias.date().birthday(22, 23));
        estatus = CourseRoom.Utilerias.bool().bool() ? "Entregado" : "Pendiente";
        
        Agregar_Tarea(nombre, fecha_Creacion, fecha_Entrega, estatus, _id);
            
        //Miembros:
        miembros_JScrollPane.getViewport().setOpaque(false);
        miembros_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        miembros_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        miembros_JTable.getTableHeader().setFont(gadugi);

        miembros_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        
        String ruta = "https://i.pravatar.cc/96";
        
        nombre = CourseRoom.Utilerias.name().fullName();
        fecha_Creacion = CourseRoom.Utilerias.Fecha_Hora(CourseRoom.Utilerias.date().birthday(22, 23));
        
        Agregar_Miembro(ruta, nombre, fecha_Creacion);

        // Chat 
        
        mensajes_Chat_JScrollPane.getViewport().setOpaque(false);
        mensajes_Chat_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        mensajes_Chat_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        mensajes_Chat_JTable.getTableHeader().setFont(gadugi);
        
        mensajes_Chat_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        
        
        // Materiales:
        materiales_JScrollPane.getViewport().setOpaque(false);
        materiales_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        materiales_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
      
        materiales_JTable.getTableHeader().setFont(gadugi);
        materiales_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        materiales_JTable.addMouseListener(new MouseAdapter() {

            @Override
            public void mousePressed(MouseEvent e) {
                if (e.getClickCount() == 2) {

                    JTable tabla = (JTable) e.getComponent();
                    int columna = tabla.getSelectedColumn();

                    // Abrir
                    switch (columna) {
                        case 0:
                            {
                                int fila = tabla.getRowSorter().convertRowIndexToModel(tabla.getSelectedRow());
                                DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
                                Celda_Renderer celda = (Celda_Renderer) modelo.getValueAt(fila, 0);
                                String extension = FilenameUtils.getExtension(celda.Texto());
                                String ruta = celda.ID();
                                CourseRoom.Utilerias.Abrir_Archivo(ruta, extension, celda.Texto());
                            }
                            break;
                        //Remover
                        case 3:
                            break;
                       
                        default:
                            break;
                    }

                }
            }
        });
        
      
        // Regresion lineal:
        //Regresion Lineal:
        // Create dataset  
        XYDataset dataset = createDataset();  

        // Create chart  
        JFreeChart chart = ChartFactory.createScatterPlot(  
            "Boys VS Girls weight comparison chart",   
            "X-Axis",
            "Y-Axis", 
            dataset,
            PlotOrientation.VERTICAL,
            true, // include legend
            true, // tooltips
            false // urls
            );  


        //Changes background color  
        XYPlot plot = (XYPlot)chart.getPlot();  
        plot.setBackgroundPaint(new Color(255,228,196));  
        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
        renderer.setSeriesLinesVisible(0, false);
        renderer.setSeriesLinesVisible(1, false);
        renderer.setSeriesLinesVisible(2, true);
        plot.setRenderer(renderer);

        // Create Panel  
        ChartPanel chartPanel = new ChartPanel((JFreeChart) chart);
        chartPanel.setMouseWheelEnabled(true);
        chartPanel.setMaximumDrawHeight(regresion_Lineal_JPanel.getMaximumSize().height);
        chartPanel.setMaximumDrawWidth(regresion_Lineal_JPanel.getMaximumSize().width);
        chartPanel.setMaximumSize(regresion_Lineal_JPanel.getMaximumSize());
        regresion_Lineal_JPanel.add(chartPanel);
        
        
        // Estadisticas curso:
        
        //finalizar_Curso_JButton.setVisible(false);
        estadisticas_JScrollPane.getViewport().setOpaque(false);
        estadisticas_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        estadisticas_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        estadisticas_JTable.getTableHeader().setFont(gadugi);
        estadisticas_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        
        String tarea_Calificada,calificacion, promedio_Curso,prediccion, fecha_Calificacion;
        boolean rumbo;
        
        tarea_Calificada = (CourseRoom.Utilerias.job().field());
        calificacion = (String.valueOf(CourseRoom.Utilerias.number().numberBetween(1, 10)));
        promedio_Curso = (String.valueOf(CourseRoom.Utilerias.number().randomDouble(2, 1, 100)));
        prediccion = (String.valueOf(CourseRoom.Utilerias.number().randomDouble(2, 1, 100)));
        fecha_Calificacion = CourseRoom.Utilerias.Fecha_Hora_Local();
        rumbo = CourseRoom.Utilerias.bool().bool();

        Agregar_Estadistica(tarea_Calificada, calificacion, promedio_Curso, prediccion, rumbo, fecha_Calificacion);
        
        //Cuestionario:
        String id_Cuestionario = CourseRoom.Utilerias.Concatenar(ID, "_Cuestionario_1");
        cuestionario_Curso_Estudiante_Panel = new Cuestionario_Curso_Estudiante_Panel(id_Cuestionario, ID, this.titulo_JLabel.getText());
        
        Tablero_Estudiante_Panel.Agregar_Vista(cuestionario_Curso_Estudiante_Panel, id_Cuestionario);
        
        this.ID_Cuestionario = id_Cuestionario;
        
        Colorear_Componentes();
    }

    @Override
    public void Colorear_Componentes() {
        
        titulo_JPanel.setBackground(CourseRoom.Utilerias.Segundo_Color());
        
        titulo_JLabel.setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente());
        titulo_JLabel.setBackground(CourseRoom.Utilerias.Tercer_Color());
        
        regresar_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
        actualizar_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());

        Carta_Visible();
        
        enviar_Archivo_Chat_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
        
        // Informacion curso:
        
        Font fuente = new Font("Segoe UI", 0, 18);
        BevelBorder borde_Linea = new BevelBorder(BevelBorder.LOWERED);
        TitledBorder borde_Titulo = new TitledBorder(borde_Linea, "Descripci√≥n Del Curso", TitledBorder.CENTER,
                TitledBorder.TOP,  fuente, CourseRoom.Utilerias.Primer_Color_Fuente());

        descripcion_Curso_JTextPane.setBorder(borde_Titulo);
        
        borde_Titulo = new TitledBorder(borde_Linea, "Descripci√≥n Del Profesor", TitledBorder.CENTER,
                TitledBorder.TOP,  fuente, CourseRoom.Utilerias.Primer_Color_Fuente());
        
        descripcion_Profesor_JTextPane.setBorder(borde_Titulo);
        
        intereses_Tematicas_JTable.setBackground(CourseRoom.Utilerias.Primer_Color());
        intereses_Tematicas_JTable.setForeground(CourseRoom.Utilerias.Primer_Color_Fuente());
        
        intereses_Tematicas_JTable.getTableHeader().setBackground(CourseRoom.Utilerias.Tercer_Color());
        intereses_Tematicas_JTable.getTableHeader().setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente());
        intereses_Tematicas_JTable.setGridColor(CourseRoom.Utilerias.Segundo_Color());
        
        intereses_Tematicas_JTable.setSelectionBackground(CourseRoom.Utilerias.Segundo_Color());
        intereses_Tematicas_JTable.setSelectionForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());
        
        descripcion_Curso_JTextPane.setForeground(CourseRoom.Utilerias.Primer_Color_Fuente());
        
        descripcion_Profesor_JTextPane.setForeground(CourseRoom.Utilerias.Primer_Color_Fuente());
        
        fecha_Creacion_JLabel.setForeground(CourseRoom.Utilerias.Primer_Color_Fuente());
        
        DefaultTableModel modelo = (DefaultTableModel) intereses_Tematicas_JTable.getModel();
        Celda_Renderer celda;
        for (int i = 0; i < modelo.getRowCount(); i++) {
            celda = (Celda_Renderer) modelo.getValueAt(i, 0);
            celda.Color_Fuente(CourseRoom.Utilerias.Primer_Color_Fuente());
        }
        
        //Tareas:
        tareas_JTable.setBackground(CourseRoom.Utilerias.Primer_Color());
        tareas_JTable.setForeground(CourseRoom.Utilerias.Primer_Color_Fuente());
        
        tareas_JTable.getTableHeader().setBackground(CourseRoom.Utilerias.Tercer_Color());
        tareas_JTable.getTableHeader().setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente());
        tareas_JTable.setGridColor(CourseRoom.Utilerias.Segundo_Color());
        
        tareas_JTable.setSelectionBackground(CourseRoom.Utilerias.Segundo_Color());
        tareas_JTable.setSelectionForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());

        modelo = (DefaultTableModel) tareas_JTable.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            for (int j = 0; j < modelo.getColumnCount(); j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias.Primer_Color_Fuente());
            }
        }

        
        //Miembros:
        miembros_JTable.setBackground(CourseRoom.Utilerias.Primer_Color());
        miembros_JTable.setForeground(CourseRoom.Utilerias.Primer_Color_Fuente());
        
        miembros_JTable.getTableHeader().setBackground(CourseRoom.Utilerias.Tercer_Color());
        miembros_JTable.getTableHeader().setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente());
        miembros_JTable.setGridColor(CourseRoom.Utilerias.Segundo_Color());
        
        miembros_JTable.setSelectionBackground(CourseRoom.Utilerias.Segundo_Color());
        miembros_JTable.setSelectionForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());
        
        modelo = (DefaultTableModel) miembros_JTable.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            for (int j = 0; j < modelo.getColumnCount(); j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias.Primer_Color_Fuente());
            }
        }
        
        // Chat
        
        redactar_Mensaje_Chat_JTextField.setBackground(CourseRoom.Utilerias.Primer_Color());
        redactar_Mensaje_Chat_JTextField.setForeground(CourseRoom.Utilerias.Primer_Color_Fuente());
        enviar_Mensaje_Chat_JPanel.setBackground(CourseRoom.Utilerias.Segundo_Color());
        
        mensajes_Chat_JTable.setBackground(CourseRoom.Utilerias.Primer_Color());
        mensajes_Chat_JTable.setForeground(CourseRoom.Utilerias.Primer_Color_Fuente());
        
        mensajes_Chat_JTable.getTableHeader().setBackground(CourseRoom.Utilerias.Tercer_Color());
        mensajes_Chat_JTable.getTableHeader().setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente());
        mensajes_Chat_JTable.setGridColor(CourseRoom.Utilerias.Segundo_Color());
        
        mensajes_Chat_JTable.setSelectionBackground(CourseRoom.Utilerias.Segundo_Color());
        mensajes_Chat_JTable.setSelectionForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());
        
        modelo = (DefaultTableModel) mensajes_Chat_JTable.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            for (int j = 0; j < modelo.getColumnCount(); j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias.Primer_Color_Fuente());
            }
        }

        //Materiales:
        materiales_JTable.setBackground(CourseRoom.Utilerias.Primer_Color());
        materiales_JTable.setForeground(CourseRoom.Utilerias.Primer_Color_Fuente());
        
        materiales_JTable.getTableHeader().setBackground(CourseRoom.Utilerias.Tercer_Color());
        materiales_JTable.getTableHeader().setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente());
        materiales_JTable.setGridColor(CourseRoom.Utilerias.Segundo_Color());
        
        materiales_JTable.setSelectionBackground(CourseRoom.Utilerias.Segundo_Color());
        materiales_JTable.setSelectionForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());

        modelo = (DefaultTableModel) materiales_JTable.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            for (int j = 0; j < modelo.getColumnCount(); j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias.Primer_Color_Fuente());
            }
        }
        
        compartir_Materiales_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
        compartir_Materiales_JButton.setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente());
       
        // Regresion lineal:
        
        // Estadisticas
        
        estadisticas_JTable.setBackground(CourseRoom.Utilerias.Primer_Color());
        estadisticas_JTable.setForeground(CourseRoom.Utilerias.Primer_Color_Fuente());
        
        estadisticas_JTable.getTableHeader().setBackground(CourseRoom.Utilerias.Tercer_Color());
        estadisticas_JTable.getTableHeader().setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente());
        estadisticas_JTable.setGridColor(CourseRoom.Utilerias.Segundo_Color());
        
        estadisticas_JTable.setSelectionBackground(CourseRoom.Utilerias.Segundo_Color());
        estadisticas_JTable.setSelectionForeground(CourseRoom.Utilerias.Segundo_Color_Fuente());

        modelo = (DefaultTableModel) estadisticas_JTable.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            for (int j = 0; j < modelo.getColumnCount(); j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias.Primer_Color_Fuente());
            }
        }
        
        abandonar_Curso_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color().darker());
        abandonar_Curso_JButton.setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente().brighter());
        
        finalizar_Curso_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color().darker());
        finalizar_Curso_JButton.setForeground(CourseRoom.Utilerias.Tercer_Color_Fuente().brighter());
        
        cuestionario_Curso_Estudiante_Panel.Colorear_Componentes();
        
    }
    
    public void Enviar_Materiales() {
        Escogedor_Archivos escogedor_Archivos = new Escogedor_Archivos();
        int resultado = escogedor_Archivos.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File[] archivos_Abiertos = escogedor_Archivos.getSelectedFiles();
            
            if(archivos_Abiertos != null){
                
                try {
                    Celda_Renderer[] celdas = new Celda_Renderer[4];
                    DefaultTableModel modelo = (DefaultTableModel) materiales_JTable.getModel();
                    Image icono = ImageIO.read(getClass().getResource("/recursos/iconos/box.png"));
                    ImageIcon icono_Abrir = new ImageIcon(icono);
                    icono = ImageIO.read(getClass().getResource("/recursos/iconos/close.png"));
                    ImageIcon icono_Remover = new ImageIcon(icono);
                    Celda_Renderer celda;
                    for (File archivo_Abierto : archivos_Abiertos) {
                        
                        celda = new Celda_Renderer(icono_Abrir,archivo_Abierto.getName(),archivo_Abierto.getAbsolutePath());
                        celdas[0] = celda;
                        celda = new Celda_Renderer(Perfil_Estudiante_Panel.Nombre_Completo(),"");
                        celdas[1] = celda;
                        celda = new Celda_Renderer(CourseRoom.Utilerias.Fecha_Hora_Local(),"");
                        celdas[2] = celda;
                        celda = new Celda_Renderer(icono_Remover,"");
                        celdas[3] = celda;
                        modelo.addRow(celdas);
                    }
                    
                    icono.flush();
                } catch (IOException ex) {
                    
                }
            }
        }
    }
    
    @Override
    public void Enviar_Mensaje() {
        
        String mensaje = redactar_Mensaje_Chat_JTextField.getText();
        if (!mensaje.isEmpty() && !mensaje.isBlank()) {
            String emisor = Perfil_Estudiante_Panel.Nombre_Completo();
            String fecha = CourseRoom.Utilerias.Fecha_Hora_Local();
            Celda_Renderer[] celdas = new Celda_Renderer[3];
  
            Celda_Renderer celda;
            celda = new Celda_Renderer(emisor);
            celdas[0] = celda;
            celda = new Celda_Renderer(mensaje);
            celdas[1] = celda;
            celda = new Celda_Renderer(fecha);
            celdas[2] = celda;
            DefaultTableModel modelo = (DefaultTableModel) mensajes_Chat_JTable.getModel();
            modelo.addRow(celdas);
            mensajes_Chat_JTable.setRowHeight(mensajes_Chat_JTable.getRowCount()-1, CourseRoom.Utilerias.Altura_Fila_Tabla(mensaje.length()));
            
            redactar_Mensaje_Chat_JTextField.setText("");
            redactar_Mensaje_Chat_JTextField.setCaretPosition(0);
        }
    }

    @Override
    public void Enviar_Archivos() {
        Escogedor_Archivos escogedor_Archivos = new Escogedor_Archivos();
        int resultado = escogedor_Archivos.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File[] archivos_Abiertos = escogedor_Archivos.getSelectedFiles();

            if (archivos_Abiertos != null) {

                try {
                    String emisor;
                    String fecha;
                    String ruta;
                    String nombre_Archivo;
                    Celda_Renderer[] celdas = new Celda_Renderer[3];
                    DefaultTableModel modelo = (DefaultTableModel) mensajes_Chat_JTable.getModel();
                    Celda_Renderer celda;
                    Image icono = ImageIO.read(getClass().getResource("/recursos/iconos/box.png"));
                    ImageIcon icono_Abrir = new ImageIcon(icono);
                    for (File archivo_Abierto : archivos_Abiertos) {
                        ruta = archivo_Abierto.getAbsolutePath();
                        nombre_Archivo = archivo_Abierto.getName();
                        emisor = Perfil_Estudiante_Panel.Nombre_Completo();
                        fecha = CourseRoom.Utilerias.Fecha_Hora_Local();
                        
                        celda = new Celda_Renderer(emisor);
                        celdas[0] = celda;
                        celda = new Celda_Renderer(icono_Abrir,nombre_Archivo,ruta);
                        celdas[1] = celda;
                        celda = new Celda_Renderer(fecha);
                        celdas[2] = celda;
                        
                        modelo.addRow(celdas);
                        
                        mensajes_Chat_JTable.setRowHeight(mensajes_Chat_JTable.getRowCount()-1, CourseRoom.Utilerias.Altura_Fila_Tabla(nombre_Archivo.length()));
                    }
                    
                    icono.flush();
                } catch (IOException ex) {
                }

            }

        }

    }
    
    @Override
    public void Limpiar() {
        DefaultTableModel modelo = (DefaultTableModel) intereses_Tematicas_JTable.getModel();
        modelo.setRowCount(0);
        modelo = (DefaultTableModel) tareas_JTable.getModel();
        modelo.setRowCount(0);
        modelo = (DefaultTableModel) miembros_JTable.getModel();
        modelo.setRowCount(0);
        modelo = (DefaultTableModel) mensajes_Chat_JTable.getModel();
        modelo.setRowCount(0);
        modelo = (DefaultTableModel) materiales_JTable.getModel();
        modelo.setRowCount(0);
        modelo = (DefaultTableModel) estadisticas_JTable.getModel();
        modelo.setRowCount(0);
        
    }

    @Override
    public void Carta_Visible() {
        switch (carta_Visible) {
            case 0:
                informacion_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                break;
            case 1:
                informacion_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                break;
            case 2:
                informacion_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                break;
            case 3:
                informacion_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                break;
            case 4:
                informacion_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                break;
            case 5:
                informacion_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                break;
            case 6:
                informacion_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias.Segundo_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias.Tercer_Color());
                break;
            
        }
    }
}
