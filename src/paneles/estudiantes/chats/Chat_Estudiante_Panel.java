/*
 * Copyright (C) 2022 LENOVO
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package paneles.estudiantes.chats;

import clases.Celda_Renderer;
import clases.Escogedor_Archivos;
import courseroom.CourseRoom;
import courseroom.CourseRoom_Frame;
import datos.colecciones.Lista;
import datos.interfaces.Carta_Visibilidad_Interface;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import datos.interfaces.Componentes_Interface;
import datos.interfaces.Envio_Interface;
import datos.interfaces.Limpieza_Interface;
import java.awt.CardLayout;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.SocketException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelos.ComboOptionModel;
import modelos.DatosPerfilChatPersonalModel;
import modelos.ResponseModel;
import org.apache.commons.io.FileUtils;
import org.apache.commons.io.FilenameUtils;
import paneles.estudiantes.Tablero_Estudiante_Panel;
import paneles.estudiantes.perfil.Perfil_Estudiante_Panel;

/**
 *
 * @author LENOVO
 */
public class Chat_Estudiante_Panel extends javax.swing.JPanel  implements Componentes_Interface,  Envio_Interface,Limpieza_Interface, Carta_Visibilidad_Interface{

    private boolean carta_Visible;
    private int Id_Chat;
    private DatagramSocket datagramSocket;
    private Conexion_Notificador_Chat conexion_Notificador;

    public Chat_Estudiante_Panel(int id_Chat) {
        initComponents();
        
        Id_Chat = id_Chat;

        Iniciar_Componentes();
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo_JPanel = new javax.swing.JPanel();
        titulo_JLabel = new javax.swing.JLabel();
        informacion_JButton = new javax.swing.JButton();
        chat_JButton = new javax.swing.JButton();
        regresar_JButton = new javax.swing.JButton();
        actualizar_JButton = new javax.swing.JButton();
        chat_JLayeredPane = new javax.swing.JLayeredPane();
        chat_JPanel = new javax.swing.JPanel();
        mensajes_Chat_JScrollPane = new javax.swing.JScrollPane();
        mensajes_Chat_JTable = new javax.swing.JTable();
        enviar_Mensaje_Chat_JPanel = new javax.swing.JPanel();
        enviar_Archivo_Chat_JButton = new javax.swing.JButton();
        redactar_Mensaje_Chat_JTextField = new javax.swing.JTextField();
        informacion_Chat_JPanel = new javax.swing.JPanel();
        imagen_Perfil_JLabel = new javax.swing.JLabel();
        apellidos_JLabel = new javax.swing.JLabel();
        nombres_JLabel = new javax.swing.JLabel();
        correo_JLabel = new javax.swing.JLabel();
        tipo_Perfil_JLabel = new javax.swing.JLabel();
        genero_JLabel = new javax.swing.JLabel();
        intereses_Tematicas_JScrollPane = new javax.swing.JScrollPane();
        intereses_Tematicas_JTable = new javax.swing.JTable();
        eliminar_Chat_JButton = new javax.swing.JButton();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1110, 630));

        titulo_JPanel.setMaximumSize(new java.awt.Dimension(32767, 72));
        titulo_JPanel.setOpaque(false);
        titulo_JPanel.setPreferredSize(new java.awt.Dimension(982, 72));

        titulo_JLabel.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        titulo_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo_JLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        titulo_JLabel.setMaximumSize(new java.awt.Dimension(818, 68));
        titulo_JLabel.setMinimumSize(new java.awt.Dimension(818, 68));
        titulo_JLabel.setOpaque(true);
        titulo_JLabel.setPreferredSize(new java.awt.Dimension(818, 68));

        informacion_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/verified-user.png"))); // NOI18N
        informacion_JButton.setToolTipText("<html> <h3>Datos<br>Del Usuario</h3> </html>");
        informacion_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)informacion_JButton.getIcon()).getImage().flush();
        informacion_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                informacion_JButtonMouseClicked(evt);
            }
        });

        chat_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/influencer.png"))); // NOI18N
        chat_JButton.setToolTipText("<html> <h3>Mensajes<br>Enviados</h3> </html>");
        chat_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)chat_JButton.getIcon()).getImage().flush();
        chat_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chat_JButtonMouseClicked(evt);
            }
        });

        regresar_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/reply.png"))); // NOI18N
        regresar_JButton.setToolTipText("<html> <h3>Regresar A Mis Chats</h3> </html>");
        regresar_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        regresar_JButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ((ImageIcon)regresar_JButton.getIcon()).getImage().flush();
        regresar_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                regresar_JButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                regresar_JButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                regresar_JButtonMouseExited(evt);
            }
        });

        actualizar_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/updated.png"))); // NOI18N
        actualizar_JButton.setToolTipText("<html> <h4>Actualizar<br>PÃ¡gina</h4> </html>");
        actualizar_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)actualizar_JButton.getIcon()).getImage().flush();
        actualizar_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actualizar_JButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                actualizar_JButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                actualizar_JButtonMouseExited(evt);
            }
        });

        javax.swing.GroupLayout titulo_JPanelLayout = new javax.swing.GroupLayout(titulo_JPanel);
        titulo_JPanel.setLayout(titulo_JPanelLayout);
        titulo_JPanelLayout.setHorizontalGroup(
            titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titulo_JPanelLayout.createSequentialGroup()
                .addComponent(regresar_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(titulo_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(chat_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(informacion_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actualizar_JButton))
        );
        titulo_JPanelLayout.setVerticalGroup(
            titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titulo_JPanelLayout.createSequentialGroup()
                .addGroup(titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(regresar_JButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(informacion_JButton)
                    .addComponent(chat_JButton)
                    .addComponent(titulo_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(actualizar_JButton))
                .addContainerGap())
        );

        chat_JLayeredPane.setLayout(new java.awt.CardLayout());

        chat_JPanel.setFont(new java.awt.Font("Gadugi", 0, 12)); // NOI18N
        chat_JPanel.setPreferredSize(new java.awt.Dimension(1110, 630));
        chat_JPanel.setOpaque(false);
        chat_JPanel.setLayout(new java.awt.BorderLayout());

        mensajes_Chat_JScrollPane.setBorder(null);
        mensajes_Chat_JScrollPane.setOpaque(false);

        mensajes_Chat_JTable.setAutoCreateRowSorter(true);
        mensajes_Chat_JTable.setFont(new java.awt.Font("Gadugi", 0, 14)); // NOI18N
        mensajes_Chat_JTable.setModel(

            new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "Emisor", "Mensaje", "Fecha"
                }
            ) {
                boolean[] canEdit = new boolean [] {
                    false, false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }

                @Override
                public Class getColumnClass(int column)
                {
                    for(int i = 0; i < mensajes_Chat_JTable.getRowCount(); i++)
                    {
                        //The first valid value of a cell of given column is retrieved.
                        if(getValueAt(i,column) != null)
                        {
                            return getValueAt(i, column).getClass();
                        }
                    }
                    //if no valid value is found, default renderer is returned.
                    return super.getColumnClass(column);
                }
            });
            mensajes_Chat_JTable.setRowHeight(80);
            mensajes_Chat_JTable.setShowGrid(true);
            mensajes_Chat_JTable.setSurrendersFocusOnKeystroke(true);
            mensajes_Chat_JTable.setRowSorter(new TableRowSorter(mensajes_Chat_JTable.getModel()));
            mensajes_Chat_JTable.addMouseListener(new MouseAdapter() {

                @Override
                public void mousePressed(MouseEvent e) {
                    if (e.getClickCount() == 2) {

                        JTable tabla = (JTable) e.getComponent();

                        int columna = tabla.getSelectedColumn();

                        // Abrir
                        if (columna == 1) {
                            int fila = tabla.getRowSorter().convertRowIndexToModel(tabla.getSelectedRow());
                            DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
                            Celda_Renderer celda = (Celda_Renderer)modelo.getValueAt(fila, columna);

                            if(celda.Tiene_Icono()){
                                String extension = FilenameUtils.getExtension(celda.Texto());
                                String ruta = celda.ID();
                                CourseRoom.Utilerias().Abrir_Archivo(ruta, extension, celda.Texto());
                            }
                        }

                    }
                }
            });
            mensajes_Chat_JScrollPane.setViewportView(mensajes_Chat_JTable);

            chat_JPanel.add(mensajes_Chat_JScrollPane, java.awt.BorderLayout.CENTER);

            enviar_Mensaje_Chat_JPanel.setMaximumSize(new java.awt.Dimension(32767, 44));
            enviar_Mensaje_Chat_JPanel.setPreferredSize(new java.awt.Dimension(1085, 44));
            enviar_Mensaje_Chat_JPanel.setLayout(new java.awt.BorderLayout());

            enviar_Archivo_Chat_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/attachment.png"))); // NOI18N
            enviar_Archivo_Chat_JButton.setToolTipText("Enviar Archivo");
            enviar_Archivo_Chat_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
            enviar_Archivo_Chat_JButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            ((ImageIcon)enviar_Archivo_Chat_JButton.getIcon()).getImage().flush();
            enviar_Archivo_Chat_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    enviar_Archivo_Chat_JButtonMouseClicked(evt);
                }
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    enviar_Archivo_Chat_JButtonMouseEntered(evt);
                }
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    enviar_Archivo_Chat_JButtonMouseExited(evt);
                }
            });
            enviar_Mensaje_Chat_JPanel.add(enviar_Archivo_Chat_JButton, java.awt.BorderLayout.WEST);

            redactar_Mensaje_Chat_JTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
            redactar_Mensaje_Chat_JTextField.setPreferredSize(new java.awt.Dimension(71, 34));
            redactar_Mensaje_Chat_JTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    redactar_Mensaje_Chat_JTextFieldKeyPressed(evt);
                }
            });
            enviar_Mensaje_Chat_JPanel.add(redactar_Mensaje_Chat_JTextField, java.awt.BorderLayout.CENTER);

            chat_JPanel.add(enviar_Mensaje_Chat_JPanel, java.awt.BorderLayout.SOUTH);

            chat_JLayeredPane.add(chat_JPanel, "Chat");

            informacion_Chat_JPanel.setOpaque(false);
            informacion_Chat_JPanel.setPreferredSize(new java.awt.Dimension(1110, 630));

            imagen_Perfil_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            imagen_Perfil_JLabel.setToolTipText("Imagen De Perfil");
            imagen_Perfil_JLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
            imagen_Perfil_JLabel.setMaximumSize(new java.awt.Dimension(2000, 2000));
            imagen_Perfil_JLabel.setMinimumSize(new java.awt.Dimension(450, 450));
            imagen_Perfil_JLabel.setPreferredSize(new java.awt.Dimension(450, 450));

            apellidos_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            apellidos_JLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
            apellidos_JLabel.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
            apellidos_JLabel.setMaximumSize(new java.awt.Dimension(560, 50));
            apellidos_JLabel.setMinimumSize(new java.awt.Dimension(560, 50));
            apellidos_JLabel.setName("label"); // NOI18N
            apellidos_JLabel.setOpaque(true);
            apellidos_JLabel.setPreferredSize(new java.awt.Dimension(560, 50));
            apellidos_JLabel.setToolTipText("Apellido(s)");

            nombres_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            nombres_JLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
            nombres_JLabel.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
            nombres_JLabel.setMaximumSize(new java.awt.Dimension(560, 50));
            nombres_JLabel.setMinimumSize(new java.awt.Dimension(560, 50));
            nombres_JLabel.setName("label"); // NOI18N
            nombres_JLabel.setOpaque(true);
            nombres_JLabel.setPreferredSize(new java.awt.Dimension(560, 50));
            nombres_JLabel.setToolTipText("Nombre(s)");

            correo_JLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
            correo_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            correo_JLabel.setToolTipText("Correo ElectrÃ³nico");
            correo_JLabel.setMaximumSize(new java.awt.Dimension(560, 25));
            correo_JLabel.setMinimumSize(new java.awt.Dimension(560, 25));
            correo_JLabel.setName("label"); // NOI18N
            correo_JLabel.setPreferredSize(new java.awt.Dimension(560, 25));

            tipo_Perfil_JLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
            tipo_Perfil_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            tipo_Perfil_JLabel.setToolTipText("Tipo De Perfil");
            tipo_Perfil_JLabel.setMaximumSize(new java.awt.Dimension(345, 25));
            tipo_Perfil_JLabel.setMinimumSize(new java.awt.Dimension(345, 25));
            tipo_Perfil_JLabel.setName("label"); // NOI18N
            tipo_Perfil_JLabel.setPreferredSize(new java.awt.Dimension(345, 25));

            genero_JLabel.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
            genero_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
            genero_JLabel.setToolTipText("GÃ©nero");
            genero_JLabel.setMaximumSize(new java.awt.Dimension(212, 25));
            genero_JLabel.setMinimumSize(new java.awt.Dimension(212, 25));
            genero_JLabel.setName("label"); // NOI18N
            genero_JLabel.setPreferredSize(new java.awt.Dimension(212, 25));

            intereses_Tematicas_JScrollPane.setBorder(null);
            intereses_Tematicas_JScrollPane.setOpaque(false);

            intereses_Tematicas_JTable.setAutoCreateRowSorter(true);
            intereses_Tematicas_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
            intereses_Tematicas_JTable.setModel(

                new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                        "Interes / TemÃ¡tica"
                    }
                ) {
                    boolean[] canEdit = new boolean [] {
                        false
                    };

                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit [columnIndex];
                    }

                    @Override
                    public Class getColumnClass(int column)
                    {
                        for(int i = 0; i < intereses_Tematicas_JTable.getRowCount(); i++)
                        {
                            //The first valid value of a cell of given column is retrieved.
                            if(getValueAt(i,column) != null)
                            {
                                return getValueAt(i, column).getClass();
                            }
                        }
                        //if no valid value is found, default renderer is returned.
                        return super.getColumnClass(column);
                    }
                });
                intereses_Tematicas_JTable.setRowHeight(32);
                intereses_Tematicas_JTable.setRowMargin(5);
                intereses_Tematicas_JTable.setShowGrid(true);
                intereses_Tematicas_JTable.setShowVerticalLines(false);
                intereses_Tematicas_JTable.setSurrendersFocusOnKeystroke(true);
                intereses_Tematicas_JTable.setRowSorter(new TableRowSorter(intereses_Tematicas_JTable.getModel()));
                intereses_Tematicas_JScrollPane.setViewportView(intereses_Tematicas_JTable);

                eliminar_Chat_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/close.png"))); // NOI18N
                eliminar_Chat_JButton.setText("Eliminar Chat");
                eliminar_Chat_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                eliminar_Chat_JButton.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
                eliminar_Chat_JButton.setPreferredSize(new java.awt.Dimension(400, 50));
                eliminar_Chat_JButton.setToolTipText("Abandona Y Elimina El Grupo De Los Tuyos");
                ((ImageIcon)eliminar_Chat_JButton.getIcon()).getImage().flush();
                eliminar_Chat_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        eliminar_Chat_JButtonMouseClicked(evt);
                    }
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        eliminar_Chat_JButtonMouseEntered(evt);
                    }
                    public void mouseExited(java.awt.event.MouseEvent evt) {
                        eliminar_Chat_JButtonMouseExited(evt);
                    }
                });

                javax.swing.GroupLayout informacion_Chat_JPanelLayout = new javax.swing.GroupLayout(informacion_Chat_JPanel);
                informacion_Chat_JPanel.setLayout(informacion_Chat_JPanelLayout);
                informacion_Chat_JPanelLayout.setHorizontalGroup(
                    informacion_Chat_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informacion_Chat_JPanelLayout.createSequentialGroup()
                        .addContainerGap(35, Short.MAX_VALUE)
                        .addComponent(imagen_Perfil_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(informacion_Chat_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(correo_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(apellidos_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(nombres_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(informacion_Chat_JPanelLayout.createSequentialGroup()
                                .addComponent(genero_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tipo_Perfil_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addComponent(intereses_Tematicas_JScrollPane)
                            .addComponent(eliminar_Chat_JButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(36, Short.MAX_VALUE))
                );
                informacion_Chat_JPanelLayout.setVerticalGroup(
                    informacion_Chat_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informacion_Chat_JPanelLayout.createSequentialGroup()
                        .addContainerGap(42, Short.MAX_VALUE)
                        .addGroup(informacion_Chat_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(imagen_Perfil_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(informacion_Chat_JPanelLayout.createSequentialGroup()
                                .addComponent(nombres_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(apellidos_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(correo_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(informacion_Chat_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(genero_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tipo_Perfil_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(intereses_Tematicas_JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(eliminar_Chat_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(42, Short.MAX_VALUE))
                );

                chat_JLayeredPane.add(informacion_Chat_JPanel, "Informacion");

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(chat_JLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(titulo_JPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE))
                        .addGap(32, 32, 32))
                );
                layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titulo_JPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chat_JLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                        .addContainerGap())
                );
            }// </editor-fold>//GEN-END:initComponents

    private void regresar_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresar_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            Tablero_Estudiante_Panel.Mostrar_Vista("Chats");
        }
    }//GEN-LAST:event_regresar_JButtonMouseClicked

    private void regresar_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresar_JButtonMouseEntered
        // TODO add your handling code here:
        regresar_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
    }//GEN-LAST:event_regresar_JButtonMouseEntered

    private void regresar_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresar_JButtonMouseExited
        // TODO add your handling code here:
        regresar_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
    }//GEN-LAST:event_regresar_JButtonMouseExited

    private void enviar_Archivo_Chat_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enviar_Archivo_Chat_JButtonMouseClicked

        if(SwingUtilities.isLeftMouseButton(evt)){
            Enviar_Archivo();
        }
    }//GEN-LAST:event_enviar_Archivo_Chat_JButtonMouseClicked

    private void enviar_Archivo_Chat_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enviar_Archivo_Chat_JButtonMouseEntered
        // TODO add your handling code here:
        enviar_Archivo_Chat_JButton.setBackground(CourseRoom.Utilerias().Primer_Color());
    }//GEN-LAST:event_enviar_Archivo_Chat_JButtonMouseEntered

    private void enviar_Archivo_Chat_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enviar_Archivo_Chat_JButtonMouseExited
        // TODO add your handling code here:
        enviar_Archivo_Chat_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
    }//GEN-LAST:event_enviar_Archivo_Chat_JButtonMouseExited

    private void informacion_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_informacion_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout)chat_JLayeredPane.getLayout()).show(chat_JLayeredPane,"Informacion");
            carta_Visible = true;
            Carta_Visible();
        }
    }//GEN-LAST:event_informacion_JButtonMouseClicked

    private void chat_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chat_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout)chat_JLayeredPane.getLayout()).show(chat_JLayeredPane,"Chat");
            carta_Visible = false;
            Carta_Visible();
        }
    }//GEN-LAST:event_chat_JButtonMouseClicked

    private void actualizar_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizar_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            Obtener_Datos_Generales_Chat();
        }
    }//GEN-LAST:event_actualizar_JButtonMouseClicked

    private void actualizar_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizar_JButtonMouseEntered
        // TODO add your handling code here:
        actualizar_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
    }//GEN-LAST:event_actualizar_JButtonMouseEntered

    private void actualizar_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizar_JButtonMouseExited
        // TODO add your handling code here:
        actualizar_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
    }//GEN-LAST:event_actualizar_JButtonMouseExited

    private void redactar_Mensaje_Chat_JTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_redactar_Mensaje_Chat_JTextFieldKeyPressed
        int longitud = redactar_Mensaje_Chat_JTextField.getText().length();
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            if (longitud > 499) {
            redactar_Mensaje_Chat_JTextField.setText(redactar_Mensaje_Chat_JTextField.getText().substring(0, longitud - 1));
            CourseRoom.Utilerias().Mensaje_Alerta("Warning!!!","El Mensaje Que Deseas Enviar<br>Rebasa Los 500 Caracteres");
            }else{
                Enviar_Mensaje();
            }
        }
    }//GEN-LAST:event_redactar_Mensaje_Chat_JTextFieldKeyPressed

    private void eliminar_Chat_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminar_Chat_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            int resultado = JOptionPane.showConfirmDialog(CourseRoom_Frame.getInstance(),
                    "Â¿EstÃ¡s Segur@ De Eliminar El Chat?", "Pregunta", 
                    JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
            
            if(resultado == JOptionPane.YES_OPTION){
            
                ResponseModel response = CourseRoom.Solicitudes().Remover_Chat_Personal(Id_Chat, 
                        Tablero_Estudiante_Panel.Id_Usuario());

                if(response.Is_Success()){
                    CourseRoom.Utilerias().Mensaje_Informativo("Eliminar Chat", response.Mensaje());
                }else{
                    CourseRoom.Utilerias().Mensaje_Alerta("Eliminar Chat", response.Mensaje());
                }
            
                Tablero_Estudiante_Panel.Mostrar_Vista("Chats");
                Tablero_Estudiante_Panel.Retirar_Vista(this);
                this.Limpiar();
            }
        }
    }//GEN-LAST:event_eliminar_Chat_JButtonMouseClicked

    private void eliminar_Chat_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminar_Chat_JButtonMouseEntered
        // TODO add your handling code here:
        eliminar_Chat_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
        eliminar_Chat_JButton.setForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
    }//GEN-LAST:event_eliminar_Chat_JButtonMouseEntered

    private void eliminar_Chat_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminar_Chat_JButtonMouseExited
        // TODO add your handling code here:
        eliminar_Chat_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        eliminar_Chat_JButton.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
    }//GEN-LAST:event_eliminar_Chat_JButtonMouseExited

    private void Obtener_Datos_Generales_Chat(){
        
        ComboOptionModel response = 
                CourseRoom.Solicitudes().Obtener_Datos_Generales_Chat_Personal(Id_Chat, 
                        Tablero_Estudiante_Panel.Id_Usuario());
        
        if(response.Id() > 0){
            titulo_JLabel.setText(response.Valor());
            DatosPerfilChatPersonalModel datosPerfilChatPersonalModel = 
                CourseRoom.Solicitudes().Obtener_Datos_Perfil_Chat_Personal(response.Id());
            
            if(!datosPerfilChatPersonalModel.Nombre().isBlank()){
                genero_JLabel.setText(datosPerfilChatPersonalModel.Genero());
                tipo_Perfil_JLabel.setText(datosPerfilChatPersonalModel.Tipo_Usuario());
                apellidos_JLabel.setText(CourseRoom.Utilerias().Concatenar(datosPerfilChatPersonalModel.Paterno()," ",datosPerfilChatPersonalModel.Materno()));
                nombres_JLabel.setText(datosPerfilChatPersonalModel.Nombre());
                correo_JLabel.setText(datosPerfilChatPersonalModel.Correo_Electronico());
            }
            
            Lista<ComboOptionModel> intereses = CourseRoom.Solicitudes().Obtener_Intereses_Usuario(response.Id());
            DefaultTableModel modelo = (DefaultTableModel) intereses_Tematicas_JTable.getModel();
            modelo.setRowCount(0);
            while(!intereses.is_empty()){
                Agregar_Interes_Tematica(intereses.delist());
            }
            
            Image imagen_Usuario;
            byte[] bytes_Imagen_Perfil = CourseRoom.Solicitudes().Obtener_Imagen_Perfil(response.Id());
        
            if(bytes_Imagen_Perfil.length > 0){
                imagen_Usuario = CourseRoom.Utilerias().Obtener_Imagen(bytes_Imagen_Perfil);

                if(imagen_Usuario != null){

                    ImageIcon icono_Imagen = new ImageIcon(imagen_Usuario);
                    imagen_Perfil_JLabel.setIcon(icono_Imagen);
                    icono_Imagen.getImage().flush();
                    imagen_Usuario.flush();
                }
            }
        }
    }
    
    private void Agregar_Interes_Tematica(ComboOptionModel comboOptionModel){
        String id = comboOptionModel.Id().toString();
        String interes_Tematica = comboOptionModel.Valor();
        
        DefaultTableModel modelo = (DefaultTableModel) intereses_Tematicas_JTable.getModel();
        Celda_Renderer[] celdas = new Celda_Renderer[1];
        Celda_Renderer celda;
        
        celda = new Celda_Renderer(interes_Tematica,id);
        celdas[0] = celda;
        modelo.addRow(celdas);
        
        intereses_Tematicas_JTable.setRowHeight(modelo.getRowCount()-1,
                CourseRoom.Utilerias().Altura_Fila_Tabla(interes_Tematica.length()));
        
    }
    
    @Override
    public int hashCode() {
        int hash = 3;
        hash = 41 * hash + this.Id_Chat;
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Chat_Estudiante_Panel other = (Chat_Estudiante_Panel) obj;
        return this.Id_Chat == other.Id_Chat;
    }
    
    public int Id_Chat() {
        return Id_Chat;
    }
    
    private class Conexion_Notificador_Chat extends Thread{
        
        @Override
        public void run(){
            
            System.out.println("Esperando ConexiÃ³n Con CourseRoom Notifier Desde Chat...");
            byte[] entryBuffer = new byte[128];
            DatagramPacket datagramPacket = new DatagramPacket(entryBuffer,entryBuffer.length);
            String mensaje;
            String valor;
            int longitud;
            int indice;
            int id_Usuario;
            while(true){
                
                try {
                    
                    datagramSocket.receive(datagramPacket);
                    
                    //Usuario:
                    indice = 0;
                    longitud = (int)entryBuffer[indice];
                    byte[] arreglo = new byte[longitud];
                    
                    for(int i = 1; i <= longitud; i++){
                        arreglo[i-1] = entryBuffer[i];
                    }
                    
                    indice = indice + 1;
                    valor = ConvertirArreglo(arreglo);
                    
                    id_Usuario = Integer.parseInt(valor);
                    
                    //Ip:
                    longitud = (int)entryBuffer[indice];
                    indice++;
                    arreglo = new byte[longitud];
                    
                    for(int i = 0; i < longitud; i++,indice++){
                        arreglo[i] = entryBuffer[indice];
                    }
                    
                    valor = ConvertirArreglo(arreglo).substring(1);
                    
                    //Estudiante:
                    if(id_Usuario == Tablero_Estudiante_Panel.Id_Usuario()){
                        mensaje = "\nEl Usuario "+String.valueOf(id_Usuario)+" Tiene Un Nuevo Mensaje Con IP: "+valor;
                        System.out.println(mensaje+"\n");
                    }
                   
                } catch (IOException ex) {
                    System.out.println(ex.getMessage());
                }
            }
        }
    }
    
    
    public String ConvertirArreglo(byte[] arreglo) {
        return new String(arreglo);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar_JButton;
    private javax.swing.JLabel apellidos_JLabel;
    private javax.swing.JButton chat_JButton;
    private javax.swing.JLayeredPane chat_JLayeredPane;
    private javax.swing.JPanel chat_JPanel;
    private javax.swing.JLabel correo_JLabel;
    private javax.swing.JButton eliminar_Chat_JButton;
    private javax.swing.JButton enviar_Archivo_Chat_JButton;
    private javax.swing.JPanel enviar_Mensaje_Chat_JPanel;
    private javax.swing.JLabel genero_JLabel;
    private static javax.swing.JLabel imagen_Perfil_JLabel;
    private javax.swing.JPanel informacion_Chat_JPanel;
    private javax.swing.JButton informacion_JButton;
    private javax.swing.JScrollPane intereses_Tematicas_JScrollPane;
    private javax.swing.JTable intereses_Tematicas_JTable;
    private javax.swing.JScrollPane mensajes_Chat_JScrollPane;
    private javax.swing.JTable mensajes_Chat_JTable;
    private javax.swing.JLabel nombres_JLabel;
    private javax.swing.JTextField redactar_Mensaje_Chat_JTextField;
    private javax.swing.JButton regresar_JButton;
    private javax.swing.JLabel tipo_Perfil_JLabel;
    private javax.swing.JLabel titulo_JLabel;
    private javax.swing.JPanel titulo_JPanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void Iniciar_Componentes() {
        carta_Visible = false;
        
        mensajes_Chat_JScrollPane.getViewport().setOpaque(false);
        mensajes_Chat_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        mensajes_Chat_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        Font gadugi = new Font("Segoe UI", Font.BOLD, 16);
        mensajes_Chat_JTable.getTableHeader().setFont(gadugi);
        
        mensajes_Chat_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        
        intereses_Tematicas_JScrollPane.getViewport().setOpaque(false);
        intereses_Tematicas_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        intereses_Tematicas_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);

        intereses_Tematicas_JTable.getTableHeader().setFont(gadugi);
        intereses_Tematicas_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());

        try {
            datagramSocket = new DatagramSocket(9003);
            conexion_Notificador = new Conexion_Notificador_Chat();
            conexion_Notificador.start();
        } catch (SocketException ex) {
            System.err.println(ex.getMessage());
        }
        
        Colorear_Componentes();
        
        Obtener_Datos_Generales_Chat();
    }

    @Override
    public void Colorear_Componentes() {
        
        titulo_JPanel.setBackground(CourseRoom.Utilerias().Segundo_Color());
       
        
        Carta_Visible();
        
        titulo_JLabel.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        titulo_JLabel.setBackground(CourseRoom.Utilerias().Tercer_Color());
        
        regresar_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
        
        
        redactar_Mensaje_Chat_JTextField.setBackground(CourseRoom.Utilerias().Primer_Color());
        redactar_Mensaje_Chat_JTextField.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        enviar_Mensaje_Chat_JPanel.setBackground(CourseRoom.Utilerias().Segundo_Color());
        enviar_Archivo_Chat_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
        
        actualizar_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());

        nombres_JLabel.setBackground(CourseRoom.Utilerias().Tercer_Color());
        nombres_JLabel.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        imagen_Perfil_JLabel.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        apellidos_JLabel.setBackground(CourseRoom.Utilerias().Tercer_Color());
        apellidos_JLabel.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        correo_JLabel.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        genero_JLabel.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        tipo_Perfil_JLabel.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());

        intereses_Tematicas_JTable.setBackground(CourseRoom.Utilerias().Primer_Color());
        intereses_Tematicas_JTable.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        
        intereses_Tematicas_JTable.getTableHeader().setBackground(CourseRoom.Utilerias().Tercer_Color());
        intereses_Tematicas_JTable.getTableHeader().setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        intereses_Tematicas_JTable.setGridColor(CourseRoom.Utilerias().Segundo_Color());
        
        intereses_Tematicas_JTable.setSelectionBackground(CourseRoom.Utilerias().Segundo_Color());
        intereses_Tematicas_JTable.setSelectionForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());

        DefaultTableModel modelo = (DefaultTableModel) intereses_Tematicas_JTable.getModel();
        Celda_Renderer celda;
        for (int i = 0; i < modelo.getRowCount(); i++) {
            celda = (Celda_Renderer) modelo.getValueAt(i, 0);
            celda.Color_Fuente(CourseRoom.Utilerias().Primer_Color_Fuente());
        }

        mensajes_Chat_JTable.setBackground(CourseRoom.Utilerias().Primer_Color());
        mensajes_Chat_JTable.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        
        mensajes_Chat_JTable.getTableHeader().setBackground(CourseRoom.Utilerias().Tercer_Color());
        mensajes_Chat_JTable.getTableHeader().setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        mensajes_Chat_JTable.setGridColor(CourseRoom.Utilerias().Segundo_Color());
        
        mensajes_Chat_JTable.setSelectionBackground(CourseRoom.Utilerias().Segundo_Color());
        mensajes_Chat_JTable.setSelectionForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
        
        modelo = (DefaultTableModel) mensajes_Chat_JTable.getModel();
        for(int i = 0; i < modelo.getRowCount();i++){
            for(int j = 0; j < modelo.getColumnCount(); j++){
                celda = (Celda_Renderer)modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias().Primer_Color_Fuente());
            }
        }
        
        eliminar_Chat_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        eliminar_Chat_JButton.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
    }
    
    @Override
    public void Enviar_Mensaje() {
        
        String mensaje = redactar_Mensaje_Chat_JTextField.getText();
        if (!mensaje.isEmpty() && !mensaje.isBlank()) {
            String emisor = Perfil_Estudiante_Panel.Nombre_Completo();
            String fecha = CourseRoom.Utilerias().Fecha_Hora_Local();
            Celda_Renderer[] celdas = new Celda_Renderer[3];
  
            Celda_Renderer celda;
            celda = new Celda_Renderer(emisor);
            celdas[0] = celda;
            celda = new Celda_Renderer(mensaje);
            celdas[1] = celda;
            celda = new Celda_Renderer(fecha);
            celdas[2] = celda;
            
            DefaultTableModel modelo = (DefaultTableModel) mensajes_Chat_JTable.getModel();
            modelo.addRow(celdas);
            mensajes_Chat_JTable.setRowHeight(mensajes_Chat_JTable.getRowCount()-1, 
                    CourseRoom.Utilerias().Altura_Fila_Tabla(mensaje.length()));
            
            ResponseModel responseModel = CourseRoom.Solicitudes().Enviar_Mensaje_Chat(mensaje, new byte[]{}, "", 
                    Tablero_Estudiante_Panel.Id_Usuario(), Id_Chat);
            
            if(!responseModel.Is_Success()){
                CourseRoom.Utilerias().Mensaje_Alerta("Alerta!!!",responseModel.Mensaje());
            }
            
            redactar_Mensaje_Chat_JTextField.setText("");
            redactar_Mensaje_Chat_JTextField.setCaretPosition(0);
        }
    }

    @Override
    public void Enviar_Archivo() {
        
        Escogedor_Archivos escogedor_Archivos = new Escogedor_Archivos();
        int resultado = escogedor_Archivos.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivo_Abierto = escogedor_Archivos.getSelectedFile();

            if (archivo_Abierto != null) {
                try {
                    
                    long tamanio = FileUtils.sizeOf(archivo_Abierto);
                    tamanio = (0 != tamanio) ? tamanio / 1000 / 1000 : 0;
                    if(tamanio < 35){

                        String ruta = archivo_Abierto.getAbsolutePath();
                        String nombre_Archivo = archivo_Abierto.getName();
                        String emisor = Perfil_Estudiante_Panel.Nombre_Completo();
                       
                        ResponseModel response = CourseRoom.Solicitudes().Enviar_Mensaje_Chat(nombre_Archivo, 
                                FileUtils.readFileToByteArray(archivo_Abierto), 
                                FilenameUtils.getExtension(nombre_Archivo), 
                                Tablero_Estudiante_Panel.Id_Usuario(), Id_Chat);
                        String fecha = CourseRoom.Utilerias().Fecha_Hora_Local();
                        if(response.Is_Success()){
                            Celda_Renderer[] celdas = new Celda_Renderer[3];
                            DefaultTableModel modelo = (DefaultTableModel) mensajes_Chat_JTable.getModel();
                            Celda_Renderer celda;
                            Image icono = ImageIO.read(getClass().getResource("/recursos/iconos/box.png"));
                            ImageIcon icono_Abrir = new ImageIcon(icono);
                            celda = new Celda_Renderer(emisor);
                            celdas[0] = celda;
                            celda = new Celda_Renderer(icono_Abrir,nombre_Archivo,ruta);
                            celdas[1] = celda;
                            celda = new Celda_Renderer(fecha);
                            celdas[2] = celda;
                            modelo.addRow(celdas);
                            mensajes_Chat_JTable.setRowHeight(mensajes_Chat_JTable.getRowCount()-1, CourseRoom.Utilerias().Altura_Fila_Tabla(nombre_Archivo.length()));
                            icono.flush();
                            CourseRoom.Utilerias().Mensaje_Informativo("Chat",response.Mensaje());
                        }else{
                            CourseRoom.Utilerias().Mensaje_Alerta("Alerta!!!",response.Mensaje());
                        }
                       
                    }
                    else{
                        CourseRoom.Utilerias().Mensaje_Alerta("Alerta!!!","El Archivo Supera El TamaÃ±o Aceptado De Subida");
                    }
                  
                } catch (IOException ex) {
                }
            }
        } else{
            CourseRoom.Utilerias().Mensaje_Alerta("Alerta!!!","El Archivo No Tiene Un Formato Adecuado");
        }
    }
  
    @Override
    public void Limpiar() {
        
        DefaultTableModel modelo = (DefaultTableModel) intereses_Tematicas_JTable.getModel();
        modelo.setRowCount(0);
        modelo = (DefaultTableModel) mensajes_Chat_JTable.getModel();
        modelo.setRowCount(0);
    }

    @Override
    public void Carta_Visible() {
        if(!carta_Visible){
            chat_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
            informacion_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
        }else{
            chat_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
            informacion_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        }
    }
    
}
