package paneles.profesores.cursos;

import clases.Celda_Renderer;
import clases.Escogedor_Archivos;
import courseroom.CourseRoom;
import datos.interfaces.Carta_Visibilidad_Interface;
import datos.interfaces.Componentes_Interface;
import datos.interfaces.Envio_Interface;
import datos.interfaces.Limpieza_Interface;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.MalformedURLException;
import java.net.SocketException;
import java.net.URL;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import org.apache.commons.io.FilenameUtils;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import paneles.profesores.Tablero_Profesor_Panel;
import paneles.profesores.perfil.Perfil_Profesor_Panel;
import javax.swing.border.BevelBorder;
import javax.swing.border.TitledBorder;
import javax.swing.filechooser.FileNameExtensionFilter;
import modelos.ResponseModel;
import org.apache.commons.io.FileUtils;

/**
 *
 * @author LENOVO
 */
public class Curso_Profesor_Panel extends javax.swing.JPanel implements Limpieza_Interface, Componentes_Interface, Carta_Visibilidad_Interface, Envio_Interface{

    private byte carta_Visible;
    private String ID;
    private int Id_Curso;
    private DatagramSocket datagramSocket;
    private Conexion_Notificador_Curso conexion_Notificador;
    
    public Curso_Profesor_Panel(String _nombre_Curso,
        Image _imagen_Curso,
        String _fecha_Creacion,
        String _id,
        int id_Curso) {
        initComponents();
        
        titulo_JLabel.setText(_nombre_Curso);
        editar_Nombre_JTextField.setText(_nombre_Curso);
        ImageIcon icono = new ImageIcon(_imagen_Curso);
        imagen_Curso_JLabel.setIcon(icono);
        this.ID = _id;
        fecha_Creacion_JLabel.setText(CourseRoom.Utilerias().Formato_HTML_Central(CourseRoom.Utilerias().Concatenar("Creado El ",_fecha_Creacion)));
        _imagen_Curso.flush();
        
        Iniciar_Componentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo_JPanel = new javax.swing.JPanel();
        titulo_JLabel = new javax.swing.JLabel();
        tareas_JButton = new javax.swing.JButton();
        materiales_JButton = new javax.swing.JButton();
        informacion_JButton = new javax.swing.JButton();
        regresar_JButton = new javax.swing.JButton();
        miembros_JButton = new javax.swing.JButton();
        actualizar_JButton = new javax.swing.JButton();
        chat_JButton = new javax.swing.JButton();
        regresion_Lineal_JButton = new javax.swing.JButton();
        estadisticas_JButton = new javax.swing.JButton();
        editar_Curso_JButton = new javax.swing.JButton();
        grupos_JButton = new javax.swing.JButton();
        curso_JLayeredPane = new javax.swing.JLayeredPane();
        informacion_Curso_JScrollPane = new javax.swing.JScrollPane();
        informacion_Curso_JPanel = new javax.swing.JPanel();
        imagen_Curso_JLabel = new javax.swing.JLabel();
        descripcion_Curso_JScrollPane = new javax.swing.JScrollPane();
        descripcion_Curso_JTextPane = new javax.swing.JTextPane();
        fecha_Creacion_JLabel = new javax.swing.JLabel();
        tematicas_JScrollPane = new javax.swing.JScrollPane();
        tematicas_JTable = new javax.swing.JTable();
        tareas_JPanel = new javax.swing.JPanel();
        tareas_JScrollPane = new javax.swing.JScrollPane();
        tareas_JTable = new javax.swing.JTable();
        crear_Tarea_JButton = new javax.swing.JButton();
        miembros_JScrollPane = new javax.swing.JScrollPane();
        miembros_JTable = new javax.swing.JTable();
        chat_JPanel = new javax.swing.JPanel();
        mensajes_Chat_JScrollPane = new javax.swing.JScrollPane();
        mensajes_Chat_JTable = new javax.swing.JTable();
        enviar_Mensaje_Chat_JPanel = new javax.swing.JPanel();
        enviar_Archivo_Chat_JButton = new javax.swing.JButton();
        redactar_Mensaje_Chat_JTextField = new javax.swing.JTextField();
        grupos_JPanel = new javax.swing.JPanel();
        generar_Grupos_JButton = new javax.swing.JButton();
        grupos_JScrollPane = new javax.swing.JScrollPane();
        grupos_JTable = new javax.swing.JTable();
        materiales_Curso_JPanel = new javax.swing.JPanel();
        compartir_Materiales_JButton = new javax.swing.JButton();
        materiales_JScrollPane = new javax.swing.JScrollPane();
        materiales_JTable = new javax.swing.JTable();
        regresion_Lineal_JPanel = new javax.swing.JPanel();
        estadisticas_JScrollPane = new javax.swing.JScrollPane();
        estadisticas_JTable = new javax.swing.JTable();
        editar_JPanel = new javax.swing.JPanel();
        cambiar_Imagen_JButton = new javax.swing.JButton();
        editar_Nombre_JTextField = new javax.swing.JTextField();
        editar_Nombre_JLabel = new javax.swing.JLabel();
        editar_Nombre_JButton = new javax.swing.JButton();
        eliminar_Curso_JButton = new javax.swing.JButton();
        editar_Descripcion_JLabel = new javax.swing.JLabel();
        editar_Descripcion_JScrollPane = new javax.swing.JScrollPane();
        editar_Descripcion_JTextPane = new javax.swing.JTextPane();
        editar_Descripcion_JButton = new javax.swing.JButton();
        editar_Tematicas_JLabel = new javax.swing.JLabel();
        tematicas_AutoCompletionComboBox = new com.jidesoft.swing.AutoCompletionComboBox();
        agregar_Tematica_JButton = new javax.swing.JButton();
        editar_Tematicas_JScrollPane = new javax.swing.JScrollPane();
        editar_Tematicas_JTable = new javax.swing.JTable();

        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(1110, 630));

        titulo_JPanel.setMaximumSize(new java.awt.Dimension(32767, 72));
        titulo_JPanel.setOpaque(false);
        titulo_JPanel.setPreferredSize(new java.awt.Dimension(982, 72));

        titulo_JLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        titulo_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titulo_JLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        titulo_JLabel.setMaximumSize(new java.awt.Dimension(818, 68));
        titulo_JLabel.setMinimumSize(new java.awt.Dimension(818, 68));
        titulo_JLabel.setOpaque(true);
        titulo_JLabel.setPreferredSize(new java.awt.Dimension(818, 68));

        tareas_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/homework.png"))); // NOI18N
        tareas_JButton.setToolTipText("<html> <h3>Tareas</h3> </html>");
        tareas_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)tareas_JButton.getIcon()).getImage().flush();
        tareas_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tareas_JButtonMouseClicked(evt);
            }
        });

        materiales_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/book.png"))); // NOI18N
        materiales_JButton.setToolTipText("<html>\n<h3>Materiales</h3></html>");
        materiales_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)materiales_JButton.getIcon()).getImage().flush();
        materiales_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                materiales_JButtonMouseClicked(evt);
            }
        });

        informacion_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/teacher_1.png"))); // NOI18N
        informacion_JButton.setToolTipText("<html>\n<h3>Informaci√≥n Del Curso\n</h3></html>");
        informacion_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)informacion_JButton.getIcon()).getImage().flush();
        informacion_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                informacion_JButtonMouseClicked(evt);
            }
        });

        regresar_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/reply.png"))); // NOI18N
        regresar_JButton.setToolTipText("<html><h3>Regresar A Mis Cursos</h3></html>");
        regresar_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        regresar_JButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ((ImageIcon)regresar_JButton.getIcon()).getImage().flush();
        regresar_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                regresar_JButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                regresar_JButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                regresar_JButtonMouseExited(evt);
            }
        });

        miembros_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/team.png"))); // NOI18N
        miembros_JButton.setToolTipText("<html>\n<h3>Miembros Del Curso</h3></html>");
        miembros_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)miembros_JButton.getIcon()).getImage().flush();
        miembros_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miembros_JButtonMouseClicked(evt);
            }
        });

        actualizar_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/updated.png"))); // NOI18N
        actualizar_JButton.setToolTipText("<html>\n<h4>Actualizar<br>P√°gina\n</h4></html>");
        actualizar_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)actualizar_JButton.getIcon()).getImage().flush();
        actualizar_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                actualizar_JButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                actualizar_JButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                actualizar_JButtonMouseExited(evt);
            }
        });

        chat_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/meeting.png"))); // NOI18N
        chat_JButton.setToolTipText("<html>\n<h3>Chat Del Curso</h3></html>");
        chat_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)chat_JButton.getIcon()).getImage().flush();
        chat_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chat_JButtonMouseClicked(evt);
            }
        });

        regresion_Lineal_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/function.png"))); // NOI18N
        regresion_Lineal_JButton.setToolTipText("<html>\n<h3>Grafica De<br>Avance</h3></html>");
        regresion_Lineal_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)regresion_Lineal_JButton.getIcon()).getImage().flush();
        regresion_Lineal_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                regresion_Lineal_JButtonMouseClicked(evt);
            }
        });

        estadisticas_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/stats.png"))); // NOI18N
        estadisticas_JButton.setToolTipText("<html>\n<h3>Estad√≠sticas</h3></html>");
        estadisticas_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)estadisticas_JButton.getIcon()).getImage().flush();
        estadisticas_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                estadisticas_JButtonMouseClicked(evt);
            }
        });

        editar_Curso_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/edit-tool.png"))); // NOI18N
        editar_Curso_JButton.setToolTipText("<html><h3>Ajustes Del<br>Curso</h3></html>");
        editar_Curso_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)editar_Curso_JButton.getIcon()).getImage().flush();
        editar_Curso_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editar_Curso_JButtonMouseClicked(evt);
            }
        });

        grupos_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/group_2.png"))); // NOI18N
        grupos_JButton.setToolTipText("<html><h3>Crear<br<Grupos</h3></html>");
        grupos_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ((ImageIcon)grupos_JButton.getIcon()).getImage().flush();
        grupos_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grupos_JButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout titulo_JPanelLayout = new javax.swing.GroupLayout(titulo_JPanel);
        titulo_JPanel.setLayout(titulo_JPanelLayout);
        titulo_JPanelLayout.setHorizontalGroup(
            titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titulo_JPanelLayout.createSequentialGroup()
                .addComponent(regresar_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(titulo_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(informacion_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tareas_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(miembros_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chat_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(materiales_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(grupos_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(regresion_Lineal_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(estadisticas_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editar_Curso_JButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actualizar_JButton)
                .addGap(0, 0, 0))
        );
        titulo_JPanelLayout.setVerticalGroup(
            titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(titulo_JPanelLayout.createSequentialGroup()
                .addGroup(titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(regresar_JButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(titulo_JPanelLayout.createSequentialGroup()
                        .addGroup(titulo_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tareas_JButton)
                            .addComponent(materiales_JButton)
                            .addComponent(informacion_JButton)
                            .addComponent(titulo_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(miembros_JButton)
                            .addComponent(actualizar_JButton)
                            .addComponent(chat_JButton)
                            .addComponent(regresion_Lineal_JButton)
                            .addComponent(estadisticas_JButton)
                            .addComponent(editar_Curso_JButton)
                            .addComponent(grupos_JButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        curso_JLayeredPane.setPreferredSize(new java.awt.Dimension(1046, 545));
        curso_JLayeredPane.setLayout(new java.awt.CardLayout());

        informacion_Curso_JScrollPane.setBorder(null);
        informacion_Curso_JScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        informacion_Curso_JScrollPane.setMinimumSize(new java.awt.Dimension(0, 0));
        informacion_Curso_JScrollPane.setOpaque(false);
        informacion_Curso_JScrollPane.setPreferredSize(new java.awt.Dimension(1046, 700));

        informacion_Curso_JPanel.setOpaque(false);
        informacion_Curso_JPanel.setPreferredSize(new java.awt.Dimension(1046, 630));

        imagen_Curso_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagen_Curso_JLabel.setToolTipText("Imagen Del Grupo");
        imagen_Curso_JLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        imagen_Curso_JLabel.setMaximumSize(new java.awt.Dimension(400, 400));
        imagen_Curso_JLabel.setMinimumSize(new java.awt.Dimension(400, 400));
        imagen_Curso_JLabel.setPreferredSize(new java.awt.Dimension(400, 400));

        descripcion_Curso_JScrollPane.setBorder(null);
        descripcion_Curso_JScrollPane.setOpaque(false);

        descripcion_Curso_JTextPane.setEditable(false);
        descripcion_Curso_JTextPane.setBorder(null);
        descripcion_Curso_JTextPane.setContentType("text/html"); // NOI18N
        descripcion_Curso_JTextPane.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        descripcion_Curso_JTextPane.setText("");
        descripcion_Curso_JTextPane.setOpaque(false);
        descripcion_Curso_JScrollPane.setViewportView(descripcion_Curso_JTextPane);

        fecha_Creacion_JLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        fecha_Creacion_JLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fecha_Creacion_JLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/calendar_1.png"))); // NOI18N
        fecha_Creacion_JLabel.setToolTipText("Fecha De Creaci√≥n Del Grupo");
        fecha_Creacion_JLabel.setMaximumSize(new java.awt.Dimension(354, 20));
        fecha_Creacion_JLabel.setMinimumSize(new java.awt.Dimension(354, 20));
        fecha_Creacion_JLabel.setPreferredSize(new java.awt.Dimension(354, 20));
        ((ImageIcon)fecha_Creacion_JLabel.getIcon()).getImage().flush();

        tematicas_JScrollPane.setBorder(null);
        tematicas_JScrollPane.setOpaque(false);

        tematicas_JTable.setAutoCreateRowSorter(true);
        tematicas_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tematicas_JTable.setModel(

            new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "Interes / Tem√°tica"
                }
            ) {
                boolean[] canEdit = new boolean [] {
                    false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }

                @Override
                public Class getColumnClass(int column)
                {
                    for(int i = 0; i < tematicas_JTable.getRowCount(); i++)
                    {
                        //The first valid value of a cell of given column is retrieved.
                        if(getValueAt(i,column) != null)
                        {
                            return getValueAt(i, column).getClass();
                        }
                    }
                    //if no valid value is found, default renderer is returned.
                    return super.getColumnClass(column);
                }
            });
            tematicas_JTable.setRowHeight(32);
            tematicas_JTable.setShowGrid(true);
            tematicas_JTable.setSurrendersFocusOnKeystroke(true);
            tematicas_JTable.setRowSorter(new TableRowSorter(tematicas_JTable.getModel()));
            tematicas_JScrollPane.setViewportView(tematicas_JTable);

            javax.swing.GroupLayout informacion_Curso_JPanelLayout = new javax.swing.GroupLayout(informacion_Curso_JPanel);
            informacion_Curso_JPanel.setLayout(informacion_Curso_JPanelLayout);
            informacion_Curso_JPanelLayout.setHorizontalGroup(
                informacion_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informacion_Curso_JPanelLayout.createSequentialGroup()
                    .addGroup(informacion_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(tematicas_JScrollPane)
                        .addComponent(descripcion_Curso_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE))
                    .addGap(24, 24, 24)
                    .addGroup(informacion_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(imagen_Curso_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fecha_Creacion_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            );
            informacion_Curso_JPanelLayout.setVerticalGroup(
                informacion_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(informacion_Curso_JPanelLayout.createSequentialGroup()
                    .addGap(0, 0, 0)
                    .addGroup(informacion_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(imagen_Curso_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(descripcion_Curso_JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(informacion_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tematicas_JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(fecha_Creacion_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                    .addContainerGap())
            );

            informacion_Curso_JScrollPane.setViewportView(informacion_Curso_JPanel);

            curso_JLayeredPane.add(informacion_Curso_JScrollPane, "Informacion");

            tareas_JPanel.setOpaque(false);

            tareas_JScrollPane.setBorder(null);
            tareas_JScrollPane.setOpaque(false);
            tareas_JScrollPane.setPreferredSize(new java.awt.Dimension(1046, 540));

            tareas_JTable.setAutoCreateRowSorter(true);
            tareas_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
            tareas_JTable.setModel(

                new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                        "Tarea", "Creada", "Entrega", "Estatus" , "Remover?"
                    }
                ) {
                    boolean[] canEdit = new boolean [] {
                        false, false, false, false, false
                    };

                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit [columnIndex];
                    }

                    @Override
                    public Class getColumnClass(int column)
                    {
                        for(int i = 0; i < tareas_JTable.getRowCount(); i++)
                        {
                            //The first valid value of a cell of given column is retrieved.
                            if(getValueAt(i,column) != null)
                            {
                                return getValueAt(i, column).getClass();
                            }
                        }
                        //if no valid value is found, default renderer is returned.
                        return super.getColumnClass(column);
                    }
                });
                tareas_JTable.setRowHeight(100);
                tareas_JTable.setShowGrid(true);
                tareas_JTable.setSurrendersFocusOnKeystroke(true);
                tareas_JTable.setRowSorter(new TableRowSorter(tareas_JTable.getModel()));
                tareas_JScrollPane.setViewportView(tareas_JTable);

                crear_Tarea_JButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
                crear_Tarea_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/homework_3.png"))); // NOI18N
                crear_Tarea_JButton.setText("Crear Tarea");
                crear_Tarea_JButton.setToolTipText("");
                crear_Tarea_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                ((ImageIcon)crear_Tarea_JButton.getIcon()).getImage().flush();
                crear_Tarea_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        crear_Tarea_JButtonMouseClicked(evt);
                    }
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        crear_Tarea_JButtonMouseEntered(evt);
                    }
                    public void mouseExited(java.awt.event.MouseEvent evt) {
                        crear_Tarea_JButtonMouseExited(evt);
                    }
                });

                javax.swing.GroupLayout tareas_JPanelLayout = new javax.swing.GroupLayout(tareas_JPanel);
                tareas_JPanel.setLayout(tareas_JPanelLayout);
                tareas_JPanelLayout.setHorizontalGroup(
                    tareas_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tareas_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(crear_Tarea_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                );
                tareas_JPanelLayout.setVerticalGroup(
                    tareas_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tareas_JPanelLayout.createSequentialGroup()
                        .addComponent(tareas_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(crear_Tarea_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0))
                );

                curso_JLayeredPane.add(tareas_JPanel, "Tareas");

                miembros_JScrollPane.setBorder(null);
                miembros_JScrollPane.setOpaque(false);
                miembros_JScrollPane.setPreferredSize(new java.awt.Dimension(1046, 540));

                miembros_JTable.setAutoCreateRowSorter(true);
                miembros_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                miembros_JTable.setModel(

                    new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                            "Miembro", "Ingreso", "Remover?"
                        }
                    ) {
                        boolean[] canEdit = new boolean [] {
                            false, false, false
                        };

                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                            return canEdit [columnIndex];
                        }

                        @Override
                        public Class getColumnClass(int column)
                        {
                            for(int i = 0; i < miembros_JTable.getRowCount(); i++)
                            {
                                //The first valid value of a cell of given column is retrieved.
                                if(getValueAt(i,column) != null)
                                {
                                    return getValueAt(i, column).getClass();
                                }
                            }
                            //if no valid value is found, default renderer is returned.
                            return super.getColumnClass(column);
                        }
                    });
                    miembros_JTable.setRowHeight(110);
                    miembros_JTable.setShowGrid(true);
                    miembros_JTable.setSurrendersFocusOnKeystroke(true);
                    miembros_JTable.setRowSorter(new TableRowSorter(miembros_JTable.getModel()));
                    miembros_JScrollPane.setViewportView(miembros_JTable);

                    curso_JLayeredPane.add(miembros_JScrollPane, "Miembros");

                    chat_JPanel.setFont(new java.awt.Font("Gadugi", 0, 12)); // NOI18N
                    chat_JPanel.setOpaque(false);
                    chat_JPanel.setPreferredSize(new java.awt.Dimension(1110, 630));
                    chat_JPanel.setLayout(new java.awt.BorderLayout());

                    mensajes_Chat_JScrollPane.setBorder(null);
                    mensajes_Chat_JScrollPane.setOpaque(false);

                    mensajes_Chat_JTable.setAutoCreateRowSorter(true);
                    mensajes_Chat_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                    mensajes_Chat_JTable.setModel(

                        new javax.swing.table.DefaultTableModel(
                            new Object [][] {

                            },
                            new String [] {
                                "Emisor", "Mensaje", "Fecha"
                            }
                        ) {
                            boolean[] canEdit = new boolean [] {
                                false, false, false
                            };

                            public boolean isCellEditable(int rowIndex, int columnIndex) {
                                return canEdit [columnIndex];
                            }

                            @Override
                            public Class getColumnClass(int column)
                            {
                                for(int i = 0; i < mensajes_Chat_JTable.getRowCount(); i++)
                                {
                                    //The first valid value of a cell of given column is retrieved.
                                    if(getValueAt(i,column) != null)
                                    {
                                        return getValueAt(i, column).getClass();
                                    }
                                }
                                //if no valid value is found, default renderer is returned.
                                return super.getColumnClass(column);
                            }
                        });
                        mensajes_Chat_JTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
                        mensajes_Chat_JTable.setRowHeight(80);
                        mensajes_Chat_JTable.setShowGrid(true);
                        mensajes_Chat_JTable.setSurrendersFocusOnKeystroke(true);
                        mensajes_Chat_JTable.setRowSorter(new TableRowSorter(mensajes_Chat_JTable.getModel()));
                        mensajes_Chat_JTable.addMouseListener(new MouseAdapter() {

                            @Override
                            public void mousePressed(MouseEvent e) {
                                if (e.getClickCount() == 2) {

                                    JTable tabla = (JTable) e.getComponent();
                                    int fila = tabla.getRowSorter().convertRowIndexToModel(tabla.getSelectedRow());
                                    int columna = tabla.getSelectedColumn();

                                    // Abrir
                                    if (columna == 1) {
                                        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
                                        Celda_Renderer celda = (Celda_Renderer)modelo.getValueAt(fila, columna);

                                        if(celda.Tiene_Icono()){
                                            String extension = FilenameUtils.getExtension(celda.Texto());
                                            String ruta = celda.ID();
                                            CourseRoom.Utilerias().Abrir_Archivo(ruta, extension, celda.Texto());
                                        }
                                    }

                                }
                            }
                        });
                        mensajes_Chat_JScrollPane.setViewportView(mensajes_Chat_JTable);

                        chat_JPanel.add(mensajes_Chat_JScrollPane, java.awt.BorderLayout.CENTER);

                        enviar_Mensaje_Chat_JPanel.setMaximumSize(new java.awt.Dimension(32767, 44));
                        enviar_Mensaje_Chat_JPanel.setPreferredSize(new java.awt.Dimension(1085, 44));
                        enviar_Mensaje_Chat_JPanel.setLayout(new java.awt.BorderLayout());

                        enviar_Archivo_Chat_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/attachment.png"))); // NOI18N
                        enviar_Archivo_Chat_JButton.setToolTipText("Enviar Archivo");
                        enviar_Archivo_Chat_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                        enviar_Archivo_Chat_JButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                        ((ImageIcon)enviar_Archivo_Chat_JButton.getIcon()).getImage().flush();
                        enviar_Archivo_Chat_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                            public void mouseClicked(java.awt.event.MouseEvent evt) {
                                enviar_Archivo_Chat_JButtonMouseClicked(evt);
                            }
                            public void mouseEntered(java.awt.event.MouseEvent evt) {
                                enviar_Archivo_Chat_JButtonMouseEntered(evt);
                            }
                            public void mouseExited(java.awt.event.MouseEvent evt) {
                                enviar_Archivo_Chat_JButtonMouseExited(evt);
                            }
                        });
                        enviar_Mensaje_Chat_JPanel.add(enviar_Archivo_Chat_JButton, java.awt.BorderLayout.WEST);

                        redactar_Mensaje_Chat_JTextField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
                        redactar_Mensaje_Chat_JTextField.setPreferredSize(new java.awt.Dimension(71, 34));
                        redactar_Mensaje_Chat_JTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                            public void keyPressed(java.awt.event.KeyEvent evt) {
                                redactar_Mensaje_Chat_JTextFieldKeyPressed(evt);
                            }
                        });
                        enviar_Mensaje_Chat_JPanel.add(redactar_Mensaje_Chat_JTextField, java.awt.BorderLayout.CENTER);

                        chat_JPanel.add(enviar_Mensaje_Chat_JPanel, java.awt.BorderLayout.SOUTH);

                        curso_JLayeredPane.add(chat_JPanel, "Chat");

                        grupos_JPanel.setToolTipText("");
                        grupos_JPanel.setOpaque(false);
                        grupos_JPanel.setPreferredSize(new java.awt.Dimension(1110, 630));

                        generar_Grupos_JButton.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
                        generar_Grupos_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/target.png"))); // NOI18N
                        generar_Grupos_JButton.setText("Generar Grupos");
                        generar_Grupos_JButton.setToolTipText("Compartir Y Subir Archivo");
                        generar_Grupos_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                        ((ImageIcon)generar_Grupos_JButton.getIcon()).getImage().flush();
                        generar_Grupos_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                            public void mouseClicked(java.awt.event.MouseEvent evt) {
                                generar_Grupos_JButtonMouseClicked(evt);
                            }
                            public void mouseEntered(java.awt.event.MouseEvent evt) {
                                generar_Grupos_JButtonMouseEntered(evt);
                            }
                            public void mouseExited(java.awt.event.MouseEvent evt) {
                                generar_Grupos_JButtonMouseExited(evt);
                            }
                        });

                        grupos_JScrollPane.setBorder(null);
                        grupos_JScrollPane.setOpaque(false);

                        grupos_JTable.setAutoCreateRowSorter(true);
                        grupos_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                        grupos_JTable.setModel(

                            new javax.swing.table.DefaultTableModel(
                                new Object [][] {

                                },
                                new String [] {
                                    "Grupo", "# Integrantes", "Creado", "Remover"
                                }
                            ) {
                                boolean[] canEdit = new boolean [] {
                                    false, false, false, false
                                };

                                public boolean isCellEditable(int rowIndex, int columnIndex) {
                                    return canEdit [columnIndex];
                                }

                                @Override
                                public Class getColumnClass(int column)
                                {
                                    for(int i = 0; i < grupos_JTable.getRowCount(); i++)
                                    {
                                        //The first valid value of a cell of given column is retrieved.
                                        if(getValueAt(i,column) != null)
                                        {
                                            return getValueAt(i, column).getClass();
                                        }
                                    }
                                    //if no valid value is found, default renderer is returned.
                                    return super.getColumnClass(column);
                                }
                            });
                            grupos_JTable.setRowHeight(75);
                            grupos_JTable.setShowGrid(true);
                            grupos_JTable.setSurrendersFocusOnKeystroke(true);
                            grupos_JTable.setRowSorter(new TableRowSorter(grupos_JTable.getModel()));
                            grupos_JTable.addMouseListener(new MouseAdapter() {

                                @Override
                                public void mousePressed(MouseEvent e) {
                                    if (e.getClickCount() == 2) {

                                        JTable tabla = (JTable) e.getComponent();
                                        int columna = tabla.getSelectedColumn();

                                        switch (columna) {
                                            // Abrir
                                            case 0:
                                            {
                                                int fila = tabla.getRowSorter().convertRowIndexToModel(tabla.getSelectedRow());
                                                DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
                                                Celda_Renderer celda = (Celda_Renderer) modelo.getValueAt(fila, 0);
                                                String extension = FilenameUtils.getExtension(celda.Texto());
                                                String ruta = celda.ID();
                                                CourseRoom.Utilerias().Abrir_Archivo(ruta, extension, celda.Texto());
                                            }
                                            break;
                                            // Remover
                                            case 3:
                                            {
                                                int fila = tabla.getRowSorter().convertRowIndexToModel(tabla.getSelectedRow());
                                                DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
                                                modelo.removeRow(fila);
                                                break;
                                            }
                                            default:
                                            break;
                                        }
                                    }
                                }
                            });
                            grupos_JScrollPane.setViewportView(grupos_JTable);

                            javax.swing.GroupLayout grupos_JPanelLayout = new javax.swing.GroupLayout(grupos_JPanel);
                            grupos_JPanel.setLayout(grupos_JPanelLayout);
                            grupos_JPanelLayout.setHorizontalGroup(
                                grupos_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(grupos_JPanelLayout.createSequentialGroup()
                                    .addGap(0, 0, 0)
                                    .addGroup(grupos_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(grupos_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1110, Short.MAX_VALUE)
                                        .addGroup(grupos_JPanelLayout.createSequentialGroup()
                                            .addComponent(generar_Grupos_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE))))
                            );
                            grupos_JPanelLayout.setVerticalGroup(
                                grupos_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(grupos_JPanelLayout.createSequentialGroup()
                                    .addGap(0, 0, 0)
                                    .addComponent(grupos_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(generar_Grupos_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, 0))
                            );

                            curso_JLayeredPane.add(grupos_JPanel, "Grupos");

                            materiales_Curso_JPanel.setToolTipText("");
                            materiales_Curso_JPanel.setOpaque(false);
                            materiales_Curso_JPanel.setPreferredSize(new java.awt.Dimension(1046, 630));

                            compartir_Materiales_JButton.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
                            compartir_Materiales_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/submit.png"))); // NOI18N
                            compartir_Materiales_JButton.setText("Compartir Material(es)");
                            compartir_Materiales_JButton.setToolTipText("Compartir Y Subir Archivo");
                            compartir_Materiales_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                            ((ImageIcon)compartir_Materiales_JButton.getIcon()).getImage().flush();
                            compartir_Materiales_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                                public void mouseClicked(java.awt.event.MouseEvent evt) {
                                    compartir_Materiales_JButtonMouseClicked(evt);
                                }
                                public void mouseEntered(java.awt.event.MouseEvent evt) {
                                    compartir_Materiales_JButtonMouseEntered(evt);
                                }
                                public void mouseExited(java.awt.event.MouseEvent evt) {
                                    compartir_Materiales_JButtonMouseExited(evt);
                                }
                            });

                            materiales_JScrollPane.setBorder(null);
                            materiales_JScrollPane.setOpaque(false);

                            materiales_JTable.setAutoCreateRowSorter(true);
                            materiales_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                            materiales_JTable.setModel(

                                new javax.swing.table.DefaultTableModel(
                                    new Object [][] {

                                    },
                                    new String [] {
                                        "Material", "Emisor", "Subido", "Remover"
                                    }
                                ) {
                                    boolean[] canEdit = new boolean [] {
                                        false, false, false, false
                                    };

                                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                                        return canEdit [columnIndex];
                                    }

                                    @Override
                                    public Class getColumnClass(int column)
                                    {
                                        for(int i = 0; i < materiales_JTable.getRowCount(); i++)
                                        {
                                            //The first valid value of a cell of given column is retrieved.
                                            if(getValueAt(i,column) != null)
                                            {
                                                return getValueAt(i, column).getClass();
                                            }
                                        }
                                        //if no valid value is found, default renderer is returned.
                                        return super.getColumnClass(column);
                                    }
                                });
                                materiales_JTable.setRowHeight(75);
                                materiales_JTable.setShowGrid(true);
                                materiales_JTable.setSurrendersFocusOnKeystroke(true);
                                materiales_JTable.setRowSorter(new TableRowSorter(materiales_JTable.getModel()));
                                materiales_JScrollPane.setViewportView(materiales_JTable);

                                javax.swing.GroupLayout materiales_Curso_JPanelLayout = new javax.swing.GroupLayout(materiales_Curso_JPanel);
                                materiales_Curso_JPanel.setLayout(materiales_Curso_JPanelLayout);
                                materiales_Curso_JPanelLayout.setHorizontalGroup(
                                    materiales_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(materiales_Curso_JPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, 0)
                                        .addGroup(materiales_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(materiales_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE)
                                            .addGroup(materiales_Curso_JPanelLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(compartir_Materiales_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, 0))
                                );
                                materiales_Curso_JPanelLayout.setVerticalGroup(
                                    materiales_Curso_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(materiales_Curso_JPanelLayout.createSequentialGroup()
                                        .addGap(0, 0, 0)
                                        .addComponent(compartir_Materiales_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(materiales_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
                                        .addGap(0, 0, 0))
                                );

                                curso_JLayeredPane.add(materiales_Curso_JPanel, "Materiales");

                                regresion_Lineal_JPanel.setOpaque(false);
                                regresion_Lineal_JPanel.setPreferredSize(new java.awt.Dimension(1046, 540));
                                regresion_Lineal_JPanel.setLayout(new java.awt.BorderLayout());
                                curso_JLayeredPane.add(regresion_Lineal_JPanel, "Regresion_Lineal");

                                estadisticas_JScrollPane.setBorder(null);
                                estadisticas_JScrollPane.setOpaque(false);

                                estadisticas_JTable.setAutoCreateRowSorter(true);
                                estadisticas_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                                estadisticas_JTable.setModel(

                                    new javax.swing.table.DefaultTableModel(
                                        new Object [][] {

                                        },
                                        new String [] {
                                            "Tarea Calificada", "Calificaci√≥n","Promedio Curso","Predicci√≥n","Rumbo", "Fecha"
                                        }
                                    ) {
                                        boolean[] canEdit = new boolean [] {
                                            false, false, false, false, false, false
                                        };

                                        public boolean isCellEditable(int rowIndex, int columnIndex) {
                                            return canEdit [columnIndex];
                                        }

                                        @Override
                                        public Class getColumnClass(int column)
                                        {
                                            for(int i = 0; i < estadisticas_JTable.getRowCount(); i++)
                                            {
                                                //The first valid value of a cell of given column is retrieved.
                                                if(getValueAt(i,column) != null)
                                                {
                                                    return getValueAt(i, column).getClass();
                                                }
                                            }
                                            //if no valid value is found, default renderer is returned.
                                            return super.getColumnClass(column);
                                        }
                                    });
                                    estadisticas_JTable.setRowHeight(100);
                                    estadisticas_JTable.setShowGrid(true);
                                    estadisticas_JTable.setSurrendersFocusOnKeystroke(true);
                                    estadisticas_JTable.setRowSorter(new TableRowSorter(estadisticas_JTable.getModel()));
                                    estadisticas_JScrollPane.setViewportView(estadisticas_JTable);

                                    curso_JLayeredPane.add(estadisticas_JScrollPane, "Estadisticas");

                                    editar_JPanel.setOpaque(false);

                                    cambiar_Imagen_JButton.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
                                    cambiar_Imagen_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/replace.png"))); // NOI18N
                                    cambiar_Imagen_JButton.setText("Cambiar Imagen");
                                    cambiar_Imagen_JButton.setToolTipText("Cambiar Imagen Del Grupo");
                                    cambiar_Imagen_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                                    cambiar_Imagen_JButton.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
                                    cambiar_Imagen_JButton.setMaximumSize(new java.awt.Dimension(400, 40));
                                    cambiar_Imagen_JButton.setMinimumSize(new java.awt.Dimension(400, 40));
                                    cambiar_Imagen_JButton.setPreferredSize(new java.awt.Dimension(400, 50));
                                    ((ImageIcon)cambiar_Imagen_JButton.getIcon()).getImage().flush();
                                    cambiar_Imagen_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                            cambiar_Imagen_JButtonMouseClicked(evt);
                                        }
                                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                            cambiar_Imagen_JButtonMouseEntered(evt);
                                        }
                                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                            cambiar_Imagen_JButtonMouseExited(evt);
                                        }
                                    });

                                    editar_Nombre_JTextField.setEditable(false);
                                    editar_Nombre_JTextField.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
                                    editar_Nombre_JTextField.setMinimumSize(new java.awt.Dimension(64, 32));
                                    editar_Nombre_JTextField.setPreferredSize(new java.awt.Dimension(483, 32));
                                    editar_Nombre_JTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                                        public void keyTyped(java.awt.event.KeyEvent evt) {
                                            editar_Nombre_JTextFieldKeyTyped(evt);
                                        }
                                    });

                                    editar_Nombre_JLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
                                    editar_Nombre_JLabel.setText("Nombre");

                                    editar_Nombre_JButton.setFont(new java.awt.Font("Gadugi", 1, 15)); // NOI18N
                                    editar_Nombre_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/rename.png"))); // NOI18N
                                    editar_Nombre_JButton.setToolTipText("Editar Nombre Del Grupo");
                                    editar_Nombre_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                                    ((ImageIcon)editar_Nombre_JButton.getIcon()).getImage().flush();
                                    editar_Nombre_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                            editar_Nombre_JButtonMouseClicked(evt);
                                        }
                                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                            editar_Nombre_JButtonMouseEntered(evt);
                                        }
                                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                            editar_Nombre_JButtonMouseExited(evt);
                                        }
                                    });

                                    eliminar_Curso_JButton.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
                                    eliminar_Curso_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/computer_1.png"))); // NOI18N
                                    eliminar_Curso_JButton.setText("Eliminar Curso");
                                    eliminar_Curso_JButton.setToolTipText("Abandona Y Elimina El Grupo De Los Tuyos");
                                    eliminar_Curso_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                                    eliminar_Curso_JButton.setPreferredSize(new java.awt.Dimension(400, 50));
                                    ((ImageIcon)eliminar_Curso_JButton.getIcon()).getImage().flush();
                                    eliminar_Curso_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                            eliminar_Curso_JButtonMouseClicked(evt);
                                        }
                                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                            eliminar_Curso_JButtonMouseEntered(evt);
                                        }
                                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                            eliminar_Curso_JButtonMouseExited(evt);
                                        }
                                    });

                                    editar_Descripcion_JLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
                                    editar_Descripcion_JLabel.setText("Descripci√≥n");

                                    editar_Descripcion_JTextPane.setEditable(false);
                                    editar_Descripcion_JTextPane.setContentType("text/html"); // NOI18N
                                    editar_Descripcion_JTextPane.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
                                    editar_Descripcion_JTextPane.setText("");
                                    editar_Descripcion_JTextPane.setPreferredSize(new java.awt.Dimension(483, 4));
                                    editar_Descripcion_JTextPane.addKeyListener(new java.awt.event.KeyAdapter() {
                                        public void keyTyped(java.awt.event.KeyEvent evt) {
                                            editar_Descripcion_JTextPaneKeyTyped(evt);
                                        }
                                    });
                                    editar_Descripcion_JScrollPane.setViewportView(editar_Descripcion_JTextPane);

                                    editar_Descripcion_JButton.setFont(new java.awt.Font("Gadugi", 1, 15)); // NOI18N
                                    editar_Descripcion_JButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/rename.png"))); // NOI18N
                                    editar_Descripcion_JButton.setToolTipText("Editar Descripci√≥n Del Grupo");
                                    editar_Descripcion_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                                    ((ImageIcon)editar_Descripcion_JButton.getIcon()).getImage().flush();
                                    editar_Descripcion_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                            editar_Descripcion_JButtonMouseClicked(evt);
                                        }
                                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                            editar_Descripcion_JButtonMouseEntered(evt);
                                        }
                                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                            editar_Descripcion_JButtonMouseExited(evt);
                                        }
                                    });

                                    editar_Tematicas_JLabel.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
                                    editar_Tematicas_JLabel.setText("Tem√°ticas");
                                    editar_Tematicas_JLabel.setPreferredSize(new java.awt.Dimension(320, 25));

                                    tematicas_AutoCompletionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Isaiah Leblanc", "Fitzgerald Dean", "Emma Doyle", "Galvin Gillespie", "Hunter Ross", "Kellie Valencia", "Miranda Holder", "Drake Mendoza", "Uma Parks", "Julian Hill" }));
                                    tematicas_AutoCompletionComboBox.setSelectedIndex(-1);
                                    tematicas_AutoCompletionComboBox.setToolTipText("<html>\n<h3>Interes / Tem√°tica</h3>\n</html>");
                                    tematicas_AutoCompletionComboBox.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

                                    agregar_Tematica_JButton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
                                    agregar_Tematica_JButton.setText("Agregar");
                                    agregar_Tematica_JButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                                    agregar_Tematica_JButton.addMouseListener(new java.awt.event.MouseAdapter() {
                                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                                            agregar_Tematica_JButtonMouseClicked(evt);
                                        }
                                        public void mouseEntered(java.awt.event.MouseEvent evt) {
                                            agregar_Tematica_JButtonMouseEntered(evt);
                                        }
                                        public void mouseExited(java.awt.event.MouseEvent evt) {
                                            agregar_Tematica_JButtonMouseExited(evt);
                                        }
                                    });

                                    editar_Tematicas_JScrollPane.setBorder(null);
                                    editar_Tematicas_JScrollPane.setOpaque(false);

                                    editar_Tematicas_JTable.setAutoCreateRowSorter(true);
                                    editar_Tematicas_JTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
                                    editar_Tematicas_JTable.setModel(

                                        new javax.swing.table.DefaultTableModel(
                                            new Object [][] {

                                            },
                                            new String [] {
                                                "Interes / Tem√°tica", "Remover?"
                                            }
                                        ) {
                                            boolean[] canEdit = new boolean [] {
                                                false, false
                                            };

                                            public boolean isCellEditable(int rowIndex, int columnIndex) {
                                                return canEdit [columnIndex];
                                            }

                                            @Override
                                            public Class getColumnClass(int column)
                                            {
                                                for(int i = 0; i < editar_Tematicas_JTable.getRowCount(); i++)
                                                {
                                                    //The first valid value of a cell of given column is retrieved.
                                                    if(getValueAt(i,column) != null)
                                                    {
                                                        return getValueAt(i, column).getClass();
                                                    }
                                                }
                                                //if no valid value is found, default renderer is returned.
                                                return super.getColumnClass(column);
                                            }
                                        });
                                        editar_Tematicas_JTable.setRowHeight(32);
                                        editar_Tematicas_JTable.setShowGrid(true);
                                        editar_Tematicas_JTable.setSurrendersFocusOnKeystroke(true);
                                        editar_Tematicas_JTable.setRowSorter(new TableRowSorter(editar_Tematicas_JTable.getModel()));
                                        editar_Tematicas_JTable.addMouseListener(new MouseAdapter() {

                                            @Override
                                            public void mousePressed(MouseEvent e) {
                                                if (e.getClickCount() == 2) {

                                                    JTable tabla = (JTable) e.getComponent();

                                                    int columna = tabla.getSelectedColumn();

                                                    if (columna == 1) {
                                                        int fila = tabla.getRowSorter().convertRowIndexToModel(tabla.getSelectedRow());
                                                        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
                                                        modelo.removeRow(fila);
                                                    }

                                                }
                                            }
                                        });
                                        editar_Tematicas_JScrollPane.setViewportView(editar_Tematicas_JTable);

                                        javax.swing.GroupLayout editar_JPanelLayout = new javax.swing.GroupLayout(editar_JPanel);
                                        editar_JPanel.setLayout(editar_JPanelLayout);
                                        editar_JPanelLayout.setHorizontalGroup(
                                            editar_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(editar_JPanelLayout.createSequentialGroup()
                                                .addContainerGap(26, Short.MAX_VALUE)
                                                .addGroup(editar_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editar_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(editar_JPanelLayout.createSequentialGroup()
                                                            .addGroup(editar_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addGroup(editar_JPanelLayout.createSequentialGroup()
                                                                    .addComponent(editar_Nombre_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                    .addComponent(editar_Nombre_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addComponent(editar_Nombre_JTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGap(46, 46, 46)
                                                            .addGroup(editar_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addGroup(editar_JPanelLayout.createSequentialGroup()
                                                                    .addComponent(tematicas_AutoCompletionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                    .addComponent(agregar_Tematica_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addComponent(editar_Tematicas_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(editar_JPanelLayout.createSequentialGroup()
                                                            .addGroup(editar_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editar_JPanelLayout.createSequentialGroup()
                                                                    .addComponent(editar_Descripcion_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                    .addComponent(editar_Descripcion_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addComponent(cambiar_Imagen_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(editar_Descripcion_JScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(editar_Tematicas_JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addComponent(eliminar_Curso_JButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addContainerGap(27, Short.MAX_VALUE))
                                        );
                                        editar_JPanelLayout.setVerticalGroup(
                                            editar_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(editar_JPanelLayout.createSequentialGroup()
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(editar_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(editar_Tematicas_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(editar_Nombre_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                                    .addComponent(editar_Nombre_JLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(editar_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(editar_JPanelLayout.createSequentialGroup()
                                                        .addGap(1, 1, 1)
                                                        .addGroup(editar_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                            .addComponent(tematicas_AutoCompletionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(editar_Nombre_JTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addComponent(agregar_Tematica_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(10, 10, 10)
                                                .addGroup(editar_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(editar_JPanelLayout.createSequentialGroup()
                                                        .addGroup(editar_JPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(editar_Descripcion_JLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(editar_Descripcion_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(editar_Descripcion_JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(cambiar_Imagen_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(editar_Tematicas_JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(eliminar_Curso_JButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        );

                                        curso_JLayeredPane.add(editar_JPanel, "Edicion");

                                        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                                        this.setLayout(layout);
                                        layout.setHorizontalGroup(
                                            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGap(32, 32, 32)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(curso_JLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(titulo_JPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE))
                                                .addGap(32, 32, 32))
                                        );
                                        layout.setVerticalGroup(
                                            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(titulo_JPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(curso_JLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                                                .addContainerGap())
                                        );
                                    }// </editor-fold>//GEN-END:initComponents

    private void tareas_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tareas_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout)curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Tareas");
            carta_Visible = 1;
            Carta_Visible();

        }
    }//GEN-LAST:event_tareas_JButtonMouseClicked

    private void materiales_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_materiales_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout)curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Materiales");
            carta_Visible = 4;
            Carta_Visible();
        }
    }//GEN-LAST:event_materiales_JButtonMouseClicked

    private void informacion_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_informacion_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout) curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Informacion");
            carta_Visible = 0;
            Carta_Visible();
        }
    }//GEN-LAST:event_informacion_JButtonMouseClicked

    private void regresar_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresar_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            Tablero_Profesor_Panel.Mostrar_Vista("Cursos");
        }
    }//GEN-LAST:event_regresar_JButtonMouseClicked

    private void regresar_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresar_JButtonMouseEntered
        // TODO add your handling code here:
        regresar_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
    }//GEN-LAST:event_regresar_JButtonMouseEntered

    private void regresar_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresar_JButtonMouseExited
        // TODO add your handling code here:
        regresar_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
    }//GEN-LAST:event_regresar_JButtonMouseExited

    private void miembros_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miembros_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout) curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Miembros");
            carta_Visible = 2;
            Carta_Visible();
        }
    }//GEN-LAST:event_miembros_JButtonMouseClicked

    private void actualizar_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizar_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){

        }
    }//GEN-LAST:event_actualizar_JButtonMouseClicked

    private void actualizar_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizar_JButtonMouseEntered
        // TODO add your handling code here:
        actualizar_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
    }//GEN-LAST:event_actualizar_JButtonMouseEntered

    private void actualizar_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_actualizar_JButtonMouseExited
        // TODO add your handling code here:
        actualizar_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
    }//GEN-LAST:event_actualizar_JButtonMouseExited

    private void compartir_Materiales_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compartir_Materiales_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            Enviar_Materiales();
        }
    }//GEN-LAST:event_compartir_Materiales_JButtonMouseClicked

    private void compartir_Materiales_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compartir_Materiales_JButtonMouseEntered
        // TODO add your handling code here:
        compartir_Materiales_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
        compartir_Materiales_JButton.setForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
    }//GEN-LAST:event_compartir_Materiales_JButtonMouseEntered

    private void compartir_Materiales_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compartir_Materiales_JButtonMouseExited
        // TODO add your handling code here:
        compartir_Materiales_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        compartir_Materiales_JButton.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
    }//GEN-LAST:event_compartir_Materiales_JButtonMouseExited

    private void chat_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chat_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout)curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Chat");
            carta_Visible = 3;
            Carta_Visible();
        }
    }//GEN-LAST:event_chat_JButtonMouseClicked

    private void regresion_Lineal_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_regresion_Lineal_JButtonMouseClicked
        // TODO add your handling code here:
        if (SwingUtilities.isLeftMouseButton(evt)) {
            ((CardLayout)curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Regresion_Lineal");
            carta_Visible = 6;
            Carta_Visible();

        }
    }//GEN-LAST:event_regresion_Lineal_JButtonMouseClicked

    private void estadisticas_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_estadisticas_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout)curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Estadisticas");
            carta_Visible = 7;
            Carta_Visible();
        }
    }//GEN-LAST:event_estadisticas_JButtonMouseClicked

    private void enviar_Archivo_Chat_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enviar_Archivo_Chat_JButtonMouseClicked
        
        if(SwingUtilities.isLeftMouseButton(evt)){
            Enviar_Archivo();
        }
    }//GEN-LAST:event_enviar_Archivo_Chat_JButtonMouseClicked

    private void enviar_Archivo_Chat_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enviar_Archivo_Chat_JButtonMouseEntered
        // TODO add your handling code here:
        enviar_Archivo_Chat_JButton.setBackground(CourseRoom.Utilerias().Primer_Color());
    }//GEN-LAST:event_enviar_Archivo_Chat_JButtonMouseEntered

    private void enviar_Archivo_Chat_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enviar_Archivo_Chat_JButtonMouseExited
        // TODO add your handling code here:
        enviar_Archivo_Chat_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
    }//GEN-LAST:event_enviar_Archivo_Chat_JButtonMouseExited

    private void redactar_Mensaje_Chat_JTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_redactar_Mensaje_Chat_JTextFieldKeyPressed
        int longitud = redactar_Mensaje_Chat_JTextField.getText().length();
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            if (longitud > 499) {
            redactar_Mensaje_Chat_JTextField.setText(redactar_Mensaje_Chat_JTextField.getText().substring(0, longitud - 1));
            CourseRoom.Utilerias().Mensaje_Alerta("Alerta!!!","El Mensaje Que Deseas Enviar<br>Rebasa Los 500 Caracteres");
            }else{
                Enviar_Mensaje();
            }
        }
    }//GEN-LAST:event_redactar_Mensaje_Chat_JTextFieldKeyPressed

    private void crear_Tarea_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crear_Tarea_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            String id = CourseRoom.Utilerias().Concatenar("Tarea_Temporal_", this.ID);
            Crear_Tarea_Profesor_Panel crear_Tarea_Profesor_Panel = new Crear_Tarea_Profesor_Panel(this.ID, id);
            Tablero_Profesor_Panel.Agregar_Vista(crear_Tarea_Profesor_Panel,id);
            Tablero_Profesor_Panel.Mostrar_Vista(id);
        }
    }//GEN-LAST:event_crear_Tarea_JButtonMouseClicked

    private void crear_Tarea_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crear_Tarea_JButtonMouseEntered
        // TODO add your handling code here:
        crear_Tarea_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
        crear_Tarea_JButton.setForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
    }//GEN-LAST:event_crear_Tarea_JButtonMouseEntered

    private void crear_Tarea_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crear_Tarea_JButtonMouseExited
        // TODO add your handling code here:
        crear_Tarea_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        crear_Tarea_JButton.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
    }//GEN-LAST:event_crear_Tarea_JButtonMouseExited

    private void editar_Curso_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editar_Curso_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout) curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Edicion");
            carta_Visible = 8;
            Carta_Visible();
        }
    }//GEN-LAST:event_editar_Curso_JButtonMouseClicked

    private void cambiar_Imagen_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cambiar_Imagen_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){

            Escogedor_Archivos escogedor_Archivos = new Escogedor_Archivos();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos De Imagen", "jpg", "jpeg");
            escogedor_Archivos.addChoosableFileFilter(filtro);
            escogedor_Archivos.setMultiSelectionEnabled(false);
            escogedor_Archivos.setAcceptAllFileFilterUsed(true);
            int resultado = escogedor_Archivos.showOpenDialog(this);
            long tamanio;
            boolean archivo_Mayor = false;

            if (resultado == JFileChooser.APPROVE_OPTION) {
                File archivo = escogedor_Archivos.getSelectedFile();

                if(archivo != null){
                try {
                    
                    tamanio = FileUtils.sizeOf(archivo);
                    tamanio = (0 != tamanio) ? tamanio / 1000 / 1000 : 0;
                    if (tamanio < 16) {
                    Image abrir_Imagen = ImageIO.read(archivo);
                    int largo_Imagen = imagen_Curso_JLabel.getHeight();
                    ImageIcon icono_Grupo = new ImageIcon(abrir_Imagen.getScaledInstance(largo_Imagen,largo_Imagen,Image.SCALE_SMOOTH));

                    imagen_Curso_JLabel.setIcon(icono_Grupo);
                    ResponseModel respuesta = CourseRoom.Solicitudes().Actualizar_Imagen_Grupo(Id_Curso, FileUtils.readFileToByteArray(archivo));
                    if (respuesta.Is_Success()) {
                        CourseRoom.Utilerias().Mensaje_Informativo("Mensaje Informativo", respuesta.Mensaje());
                    } else {
                        CourseRoom.Utilerias().Mensaje_Error("Error", respuesta.Mensaje());
                    }
                    abrir_Imagen.flush();

                }else{
                            archivo_Mayor = true;
                        }
                    } catch (IOException ex) {
                        CourseRoom.Utilerias().Mensaje_Error("Error Al Subir La Imagen",ex.getMessage());
                    }
                }
                
                if(archivo_Mayor){
                    CourseRoom.Utilerias().Mensaje_Alerta("Alerta!!!","La Imagen Supera El Tama√±o Aceptado De Subida");
                }
            }
        }
    }//GEN-LAST:event_cambiar_Imagen_JButtonMouseClicked

    private void cambiar_Imagen_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cambiar_Imagen_JButtonMouseEntered
        // TODO add your handling code here:
        cambiar_Imagen_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        cambiar_Imagen_JButton.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
    }//GEN-LAST:event_cambiar_Imagen_JButtonMouseEntered

    private void cambiar_Imagen_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cambiar_Imagen_JButtonMouseExited
        // TODO add your handling code here:
        cambiar_Imagen_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
        cambiar_Imagen_JButton.setForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
    }//GEN-LAST:event_cambiar_Imagen_JButtonMouseExited

    private void editar_Nombre_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editar_Nombre_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){

        }
    }//GEN-LAST:event_editar_Nombre_JButtonMouseClicked

    private void editar_Nombre_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editar_Nombre_JButtonMouseEntered
        // TODO add your handling code here:
        editar_Nombre_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
    }//GEN-LAST:event_editar_Nombre_JButtonMouseEntered

    private void editar_Nombre_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editar_Nombre_JButtonMouseExited
        // TODO add your handling code here:
        editar_Nombre_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
    }//GEN-LAST:event_editar_Nombre_JButtonMouseExited

    private void eliminar_Curso_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminar_Curso_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){

        }
    }//GEN-LAST:event_eliminar_Curso_JButtonMouseClicked

    private void eliminar_Curso_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminar_Curso_JButtonMouseEntered
        // TODO add your handling code here:
        eliminar_Curso_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
        eliminar_Curso_JButton.setForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
    }//GEN-LAST:event_eliminar_Curso_JButtonMouseEntered

    private void eliminar_Curso_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminar_Curso_JButtonMouseExited
        // TODO add your handling code here:
        eliminar_Curso_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        eliminar_Curso_JButton.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
    }//GEN-LAST:event_eliminar_Curso_JButtonMouseExited

    private void editar_Descripcion_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editar_Descripcion_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){

        }
    }//GEN-LAST:event_editar_Descripcion_JButtonMouseClicked

    private void editar_Descripcion_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editar_Descripcion_JButtonMouseEntered
        // TODO add your handling code here:
        editar_Descripcion_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
    }//GEN-LAST:event_editar_Descripcion_JButtonMouseEntered

    private void editar_Descripcion_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editar_Descripcion_JButtonMouseExited
        // TODO add your handling code here:
        editar_Descripcion_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
    }//GEN-LAST:event_editar_Descripcion_JButtonMouseExited

    private void agregar_Tematica_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregar_Tematica_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){

            String id = new String();

            String interes_Tematica = tematicas_AutoCompletionComboBox.getSelectedItem() != null
            ? tematicas_AutoCompletionComboBox.getSelectedItem().toString() : "";

            if(!interes_Tematica.isEmpty() && !interes_Tematica.isBlank()){
                Agregar_Interes_Tematica(id,interes_Tematica);
            }

        }
    }//GEN-LAST:event_agregar_Tematica_JButtonMouseClicked

    private void agregar_Tematica_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregar_Tematica_JButtonMouseEntered
        // TODO add your handling code here:
        agregar_Tematica_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
        agregar_Tematica_JButton.setForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
    }//GEN-LAST:event_agregar_Tematica_JButtonMouseEntered

    private void agregar_Tematica_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_agregar_Tematica_JButtonMouseExited
        // TODO add your handling code here:
        agregar_Tematica_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        agregar_Tematica_JButton.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
    }//GEN-LAST:event_agregar_Tematica_JButtonMouseExited

    private void grupos_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grupos_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            ((CardLayout)curso_JLayeredPane.getLayout()).show(curso_JLayeredPane, "Grupos");
            carta_Visible = 5;
            Carta_Visible();
        }
    }//GEN-LAST:event_grupos_JButtonMouseClicked

    private void generar_Grupos_JButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generar_Grupos_JButtonMouseClicked
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)){
            
        }
    }//GEN-LAST:event_generar_Grupos_JButtonMouseClicked

    private void generar_Grupos_JButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generar_Grupos_JButtonMouseEntered
        // TODO add your handling code here:
        generar_Grupos_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        generar_Grupos_JButton.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
    }//GEN-LAST:event_generar_Grupos_JButtonMouseEntered

    private void generar_Grupos_JButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generar_Grupos_JButtonMouseExited
        // TODO add your handling code here:
        generar_Grupos_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
        generar_Grupos_JButton.setForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
    }//GEN-LAST:event_generar_Grupos_JButtonMouseExited

    private void editar_Nombre_JTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editar_Nombre_JTextFieldKeyTyped
        char c = evt.getKeyChar();
            if (Character.isDigit(c)) {
            getToolkit().beep();//sonido de no aceptar m√°s caracteres. 
            evt.consume();//hace que esa pulsaci√≥n de tecla se rechace.
        }
        int longitud = editar_Nombre_JTextField.getText().length();
            if(longitud > 79){
            editar_Nombre_JTextField.setText(editar_Nombre_JTextField.getText().substring(0,longitud-1));
            CourseRoom.Utilerias().Mensaje_Alerta("Alerta!!!","El T√≠tulo De Tu Curso<br>Rebasa Los 80 Caracteres");
        }
    }//GEN-LAST:event_editar_Nombre_JTextFieldKeyTyped

    private void editar_Descripcion_JTextPaneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editar_Descripcion_JTextPaneKeyTyped
        int longitud = editar_Descripcion_JTextPane.getText().length();
            if (longitud > 1499) {
            editar_Descripcion_JTextPane.setText(editar_Descripcion_JTextPane.getText().substring(0, longitud - 1));
            CourseRoom.Utilerias().Mensaje_Alerta("Alerta!!!","La Descripci√≥n De Tu Curso<br>Rebasa Los 1500 Caracteres");
          }
    }//GEN-LAST:event_editar_Descripcion_JTextPaneKeyTyped

    public String ID() {
        return this.ID;
    }
    
    private XYDataset createDataset() {  
        
        XYSeriesCollection dataset = new XYSeriesCollection();  

        //Boys (Age,weight) series  
        XYSeries series1 = new XYSeries("Boys");  
        series1.add(1, CourseRoom.Utilerias().number().randomDouble(2, 1,100));
        series1.add(2, CourseRoom.Utilerias().number().randomDouble(2, 1,100));
        series1.add(3, CourseRoom.Utilerias().number().randomDouble(2, 1,100));
        series1.add(4, CourseRoom.Utilerias().number().randomDouble(2, 1,100));
        series1.add(5, CourseRoom.Utilerias().number().randomDouble(2, 1,100));
        series1.add(6, CourseRoom.Utilerias().number().randomDouble(2, 1,100));
        series1.add(7, CourseRoom.Utilerias().number().randomDouble(2, 1,100));
        series1.add(8, CourseRoom.Utilerias().number().randomDouble(2, 1,100));
        series1.add(9, CourseRoom.Utilerias().number().randomDouble(2, 1,100));
        series1.add(10, CourseRoom.Utilerias().number().randomDouble(2, 1,100));

        dataset.addSeries(series1);  

        //Girls (Age,weight) series  
        XYSeries series2 = new XYSeries("Girls");  
        series2.add(1, CourseRoom.Utilerias().number().randomDouble(2, 1, 100));
        series2.add(2, CourseRoom.Utilerias().number().randomDouble(2, 1, 100));
        series2.add(3, CourseRoom.Utilerias().number().randomDouble(2, 1, 100));
        series2.add(4, CourseRoom.Utilerias().number().randomDouble(2, 1, 100));
        series2.add(5, CourseRoom.Utilerias().number().randomDouble(2, 1, 100));
        series2.add(6, CourseRoom.Utilerias().number().randomDouble(2, 1, 100));
        series2.add(7, CourseRoom.Utilerias().number().randomDouble(2, 1, 100));
        series2.add(8, CourseRoom.Utilerias().number().randomDouble(2, 1, 100));
        series2.add(9, CourseRoom.Utilerias().number().randomDouble(2, 1, 100));
        series2.add(10, CourseRoom.Utilerias().number().randomDouble(2, 1, 100));

        dataset.addSeries(series2);  
        
        //Boys (Age,weight) series  
        XYSeries series3 = new XYSeries("Regresion Lineal", false);  
        series3.add(1, series1.getX(0));  
        series3.add(10, series2.getX(9)); 
        
        dataset.addSeries(series3);

        return dataset;  
    }  
    
    private void Agregar_Interes_Tematica(String id, String interes_Tematica){
        
        DefaultTableModel modelo = (DefaultTableModel) tematicas_JTable.getModel();
        Celda_Renderer[] celdas = new Celda_Renderer[1];
        Celda_Renderer celda;
        
        celda = new Celda_Renderer(interes_Tematica, id);
        celdas[0] = celda;
        modelo.addRow(celdas);
        
        tematicas_JTable.setRowHeight(modelo.getRowCount()-1, CourseRoom.Utilerias().Altura_Fila_Tabla(interes_Tematica.length()));
        
    }
    
    private void Agregar_Interes_Tematica_Edicion(String id, String interes_Tematica){
        try {
            DefaultTableModel modelo = (DefaultTableModel) editar_Tematicas_JTable.getModel();
            
            Celda_Renderer[] celdas = new Celda_Renderer[2];
            Celda_Renderer celda;
            
            Image icono = ImageIO.read(getClass().getResource("/recursos/iconos/close.png"));
            ImageIcon remover = new ImageIcon(icono);
            
            celda = new Celda_Renderer(interes_Tematica,id);
            celdas[0] = celda;
            
            celda = new Celda_Renderer(remover);
            celdas[1] = celda;
            modelo.addRow(celdas);
            
            editar_Tematicas_JTable.setRowHeight(modelo.getRowCount()-1, CourseRoom.Utilerias().Altura_Fila_Tabla(interes_Tematica.length()));
            
            icono.flush();
        } catch (IOException ex) {
            
        }
    }
    
    private void Agregar_Tarea(String nombre_Tarea, String fecha_Creacion, String fecha_Entrega, String estatus, String _id){
        
        Celda_Renderer[] celdas = new Celda_Renderer[5];
        Celda_Renderer celda;
        DefaultTableModel modelo = (DefaultTableModel) tareas_JTable.getModel();
        String vacio = new String();
        Image imagen;
        ImageIcon icono;
        
        try {
           
            celda = new Celda_Renderer(nombre_Tarea, _id);
            celdas[0] = celda;
            celda = new Celda_Renderer(fecha_Creacion, _id);
            celdas[1] = celda;
            celda = new Celda_Renderer(fecha_Entrega, _id);
            celdas[2] = celda;
            celda = new Celda_Renderer(estatus, _id);
            celdas[3] = celda;
            imagen = ImageIO.read(getClass().getResource("/recursos/iconos/close.png"));
            icono  = new ImageIcon(imagen);
            celda = new Celda_Renderer(icono,vacio);
            celdas[4] = celda;
            
            //Tareas_Profesor_Panel.Agregar_Tarea_Desde_Curso(_id,nombre_Tarea, this.titulo_JLabel.getText() ,icono_Curso, fecha_Creacion, fecha_Entrega, estatus);
            
            modelo.addRow(celdas);
            
            tareas_JTable.setRowHeight(modelo.getRowCount()-1, CourseRoom.Utilerias().Altura_Fila_Tabla(nombre_Tarea.length()));
            
            imagen.flush();
            imagen.getGraphics().dispose();
        } catch (IOException ex) {
            
        }
        
    }
    
    
    private void Agregar_Miembro(String ruta_Imagen_Miembro, String nombre_Miembro, String fecha_Ingreso){
        
        Celda_Renderer[] celdas = new Celda_Renderer[3];
        Celda_Renderer celda;
        DefaultTableModel modelo = (DefaultTableModel) miembros_JTable.getModel();
        
        URL url_Imagen;
        Image imagen;
        ImageIcon icono;
        String vacio = new String();
        
        try {
            
            url_Imagen = new URL(ruta_Imagen_Miembro);
            imagen = ImageIO.read(url_Imagen);
            icono = new ImageIcon(imagen);

            celda = new Celda_Renderer(icono,nombre_Miembro,"");
            celdas[0] = celda;
            celda = new Celda_Renderer(fecha_Ingreso);
            celdas[1] = celda;
            imagen = ImageIO.read(getClass().getResource("/recursos/iconos/close.png"));
            icono = new ImageIcon(imagen);
            celda = new Celda_Renderer(icono,vacio);
            celdas[2] = celda;
            
            modelo.addRow(celdas);
            
            imagen.flush();
            imagen.getGraphics().dispose();
            miembros_JTable.setRowHeight(modelo.getRowCount()-1, CourseRoom.Utilerias().Altura_Fila_Tabla_Icono(0));
        } catch (MalformedURLException ex) {

        } catch (IOException ex) {
            CourseRoom.Utilerias().Mensaje_Error("Error Al Agregar Al Integrante",ex.getMessage());
        }
        
    }
    
    private void Agregar_Estadistica(String tarea_Calificada, String calificacion, String promedio_Curso,
            String prediccion, boolean rumbo, String fecha_Calificacion){
        
        Celda_Renderer[] celdas = new Celda_Renderer[6];
        Celda_Renderer celda;
        DefaultTableModel modelo = (DefaultTableModel) estadisticas_JTable.getModel();
        Image imagen;
        ImageIcon icono;
        String vacio = new String();
        
        try{
            celda = new Celda_Renderer(tarea_Calificada);
            celdas[0] = celda;
            celda = new Celda_Renderer(calificacion);
            celdas[1] = celda;
            celda = new Celda_Renderer(promedio_Curso);
            celdas[2] = celda;
            celda = new Celda_Renderer(prediccion);
            celdas[3] = celda;

            if(rumbo){
                imagen = ImageIO.read(getClass().getResource("/recursos/iconos/check.png"));
                icono = new ImageIcon(imagen);
                celda =  new Celda_Renderer(icono, "A Aprobar",vacio);
            }else{
                imagen = ImageIO.read(getClass().getResource("/recursos/iconos/close.png"));
                icono = new ImageIcon(imagen);
                celda =  new Celda_Renderer(icono, "A Reprobar",vacio);
            }

            celdas[4] = celda;

            celda = new Celda_Renderer(fecha_Calificacion);
            celdas[5] = celda;

            modelo.addRow(celdas);

            estadisticas_JTable.setRowHeight(modelo.getRowCount()-1, CourseRoom.Utilerias().Altura_Fila_Tabla(tarea_Calificada.length()));

            imagen.flush();
        
        } catch(IOException ex){
            CourseRoom.Utilerias().Mensaje_Error("Error Al Agregar La Estad√≠stica",ex.getMessage());
        }
    }
    
    private class Conexion_Notificador_Curso extends Thread{
        
        @Override
        public void run(){
            
            System.out.println("Esperando Conexi√≥n Con CourseRoom Notifier Desde Curso...");
            byte[] entryBuffer = new byte[128];
            DatagramPacket datagramPacket = new DatagramPacket(entryBuffer,entryBuffer.length);
            String mensaje;
            String valor;
            int longitud;
            int indice;
            int id_Usuario;
            while(true){
                
                try {
                    
                    datagramSocket.receive(datagramPacket);
                    
                    //Usuario:
                    indice = 0;
                    longitud = (int)entryBuffer[indice];
                    byte[] arreglo = new byte[longitud];
                    
                    for(int i = 1; i <= longitud; i++){
                        arreglo[i-1] = entryBuffer[i];
                    }
                    
                    indice = indice + 1;
                    valor = ConvertirArreglo(arreglo);
                    
                    id_Usuario = Integer.parseInt(valor);
                    
                    //Ip:
                    longitud = (int)entryBuffer[indice];
                    indice++;
                    arreglo = new byte[longitud];
                    
                    for(int i = 0; i < longitud; i++,indice++){
                        arreglo[i] = entryBuffer[indice];
                    }
                    
                    valor = ConvertirArreglo(arreglo).substring(1);
                    
                    //Estudiante:
                    if(id_Usuario == Tablero_Profesor_Panel.Id_Usuario()){
                        mensaje = "\nEl Usuario "+String.valueOf(id_Usuario)+" Tiene Un Nuevo Mensaje Con IP: "+valor;
                        System.out.println(mensaje+"\n");
                    }
                   
                } catch (IOException ex) {
                    System.out.println(ex.getMessage());
                }
            }
        }
    }
    
    
    public String ConvertirArreglo(byte[] arreglo) {
        return new String(arreglo);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar_JButton;
    private javax.swing.JButton agregar_Tematica_JButton;
    private javax.swing.JButton cambiar_Imagen_JButton;
    private javax.swing.JButton chat_JButton;
    private javax.swing.JPanel chat_JPanel;
    private javax.swing.JButton compartir_Materiales_JButton;
    private javax.swing.JButton crear_Tarea_JButton;
    private javax.swing.JLayeredPane curso_JLayeredPane;
    private javax.swing.JScrollPane descripcion_Curso_JScrollPane;
    private javax.swing.JTextPane descripcion_Curso_JTextPane;
    private javax.swing.JButton editar_Curso_JButton;
    private javax.swing.JButton editar_Descripcion_JButton;
    private javax.swing.JLabel editar_Descripcion_JLabel;
    private javax.swing.JScrollPane editar_Descripcion_JScrollPane;
    private javax.swing.JTextPane editar_Descripcion_JTextPane;
    private javax.swing.JPanel editar_JPanel;
    private javax.swing.JButton editar_Nombre_JButton;
    private javax.swing.JLabel editar_Nombre_JLabel;
    private javax.swing.JTextField editar_Nombre_JTextField;
    private javax.swing.JLabel editar_Tematicas_JLabel;
    private javax.swing.JScrollPane editar_Tematicas_JScrollPane;
    private javax.swing.JTable editar_Tematicas_JTable;
    private javax.swing.JButton eliminar_Curso_JButton;
    private javax.swing.JButton enviar_Archivo_Chat_JButton;
    private javax.swing.JPanel enviar_Mensaje_Chat_JPanel;
    private javax.swing.JButton estadisticas_JButton;
    private javax.swing.JScrollPane estadisticas_JScrollPane;
    private javax.swing.JTable estadisticas_JTable;
    private javax.swing.JLabel fecha_Creacion_JLabel;
    private javax.swing.JButton generar_Grupos_JButton;
    private javax.swing.JButton grupos_JButton;
    private javax.swing.JPanel grupos_JPanel;
    private javax.swing.JScrollPane grupos_JScrollPane;
    private javax.swing.JTable grupos_JTable;
    private javax.swing.JLabel imagen_Curso_JLabel;
    private javax.swing.JPanel informacion_Curso_JPanel;
    private javax.swing.JScrollPane informacion_Curso_JScrollPane;
    private javax.swing.JButton informacion_JButton;
    private javax.swing.JPanel materiales_Curso_JPanel;
    private javax.swing.JButton materiales_JButton;
    private javax.swing.JScrollPane materiales_JScrollPane;
    private javax.swing.JTable materiales_JTable;
    private javax.swing.JScrollPane mensajes_Chat_JScrollPane;
    private javax.swing.JTable mensajes_Chat_JTable;
    private javax.swing.JButton miembros_JButton;
    private javax.swing.JScrollPane miembros_JScrollPane;
    private javax.swing.JTable miembros_JTable;
    private javax.swing.JTextField redactar_Mensaje_Chat_JTextField;
    private javax.swing.JButton regresar_JButton;
    private javax.swing.JButton regresion_Lineal_JButton;
    private javax.swing.JPanel regresion_Lineal_JPanel;
    private javax.swing.JButton tareas_JButton;
    private javax.swing.JPanel tareas_JPanel;
    private javax.swing.JScrollPane tareas_JScrollPane;
    private javax.swing.JTable tareas_JTable;
    private com.jidesoft.swing.AutoCompletionComboBox tematicas_AutoCompletionComboBox;
    private javax.swing.JScrollPane tematicas_JScrollPane;
    private javax.swing.JTable tematicas_JTable;
    private javax.swing.JLabel titulo_JLabel;
    private javax.swing.JPanel titulo_JPanel;
    // End of variables declaration//GEN-END:variables

    
    @Override
    public void Iniciar_Componentes() {
        carta_Visible = 0;
        
        //Informacion curso:
       
        informacion_Curso_JScrollPane.getViewport().setOpaque(false);
        informacion_Curso_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        informacion_Curso_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        descripcion_Curso_JTextPane.setText(CourseRoom.Utilerias().Formato_HTML_Izquierda(CourseRoom.Utilerias().lorem().paragraph(10)));
        descripcion_Curso_JScrollPane.getViewport().setOpaque(false);
        descripcion_Curso_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        descripcion_Curso_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        tematicas_JScrollPane.getViewport().setOpaque(false);
        tematicas_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        tematicas_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        Font gadugi = new Font("Segoe UI", Font.BOLD, 16);
        tematicas_JTable.getTableHeader().setFont(gadugi);
        tematicas_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());

        String tematica = CourseRoom.Utilerias().music().genre();
        String id = new String();
        Agregar_Interes_Tematica(id,tematica);
            
        //Tareas:
        
        tareas_JScrollPane.getViewport().setOpaque(false);
        tareas_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        tareas_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);

        tareas_JTable.getTableHeader().setFont(gadugi);
        tareas_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        
        String _id, nombre,  fecha_Creacion, fecha_Entrega, estatus;
          
        _id = CourseRoom.Utilerias().Concatenar(this.ID,"_Tarea_0");
        nombre = CourseRoom.Utilerias().university().name();
        fecha_Creacion = CourseRoom.Utilerias().Fecha_Hora_Local();
        fecha_Entrega = CourseRoom.Utilerias().Fecha_Hora(CourseRoom.Utilerias().date().birthday(22, 23));
        estatus = CourseRoom.Utilerias().bool().bool() ? "Entregado" : "Pendiente";
        
        Agregar_Tarea(nombre, fecha_Creacion, fecha_Entrega, estatus, _id);
        
        
        tareas_JTable.addMouseListener(new MouseAdapter() {

            @Override
            public void mousePressed(MouseEvent e) {
                if (e.getClickCount() == 2) {

                    JTable tabla = (JTable) e.getComponent();
                    int fila = tabla.getRowSorter().convertRowIndexToModel(tabla.getSelectedRow());
                    int columna = tabla.getSelectedColumn();
                    
                    if(columna < 4){
                        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
                        Celda_Renderer celda = (Celda_Renderer) modelo.getValueAt(fila, columna);
                        Tablero_Profesor_Panel.Mostrar_Vista(celda.ID());
                    }
                    else{
                        //Remover
                    }
                }
            }
        });
        
        //Miembros:
        miembros_JScrollPane.getViewport().setOpaque(false);
        miembros_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        miembros_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        miembros_JTable.getTableHeader().setFont(gadugi);

        miembros_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        
        String ruta = "https://i.pravatar.cc/96";
        
        nombre = CourseRoom.Utilerias().name().fullName();
        fecha_Creacion = CourseRoom.Utilerias().Fecha_Hora(CourseRoom.Utilerias().date().birthday(22, 23));
        
        Agregar_Miembro(ruta, nombre, fecha_Creacion);
        
        miembros_JTable.addMouseListener(new MouseAdapter() {

            @Override
            public void mousePressed(MouseEvent e) {
                if (e.getClickCount() == 2) {

                    JTable tabla = (JTable) e.getComponent();
                    //int fila = tabla.getRowSorter().convertRowIndexToModel(tabla.getSelectedRow());
                    int columna = tabla.getSelectedColumn();
                    if(columna == 2){
                        //Remover
                    }
                }
            }
        });
        
        // Chat 
        
        mensajes_Chat_JScrollPane.getViewport().setOpaque(false);
        mensajes_Chat_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        mensajes_Chat_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        mensajes_Chat_JTable.getTableHeader().setFont(gadugi);
        
        mensajes_Chat_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        
        
        // Materiales:
        materiales_JScrollPane.getViewport().setOpaque(false);
        materiales_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        materiales_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
      
        materiales_JTable.getTableHeader().setFont(gadugi);
        materiales_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        materiales_JTable.addMouseListener(new MouseAdapter() {

            @Override
            public void mousePressed(MouseEvent e) {
                if (e.getClickCount() == 2) {

                    JTable tabla = (JTable) e.getComponent();
                    int columna = tabla.getSelectedColumn();

                    // Abrir
                    switch (columna) {
                        case 0:
                            {
                                int fila = tabla.getRowSorter().convertRowIndexToModel(tabla.getSelectedRow());
                                DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
                                Celda_Renderer celda = (Celda_Renderer) modelo.getValueAt(fila, 0);
                                String extension = FilenameUtils.getExtension(celda.Texto());
                                String ruta = celda.ID();
                                CourseRoom.Utilerias().Abrir_Archivo(ruta, extension, celda.Texto());
                            }
                            break;
                        //Remover
                        case 3:
                            break;
                       
                        default:
                            break;
                    }

                }
            }
        });
        
        
        // Grupos:
        grupos_JScrollPane.getViewport().setOpaque(false);
        grupos_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        grupos_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        grupos_JTable.getTableHeader().setFont(gadugi);
        grupos_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        
        grupos_JTable.addMouseListener(new MouseAdapter() {

            @Override
            public void mousePressed(MouseEvent e) {
                if (e.getClickCount() == 2) {

                    JTable tabla = (JTable) e.getComponent();
                    //int fila = tabla.getRowSorter().convertRowIndexToModel(tabla.getSelectedRow());
                    int columna = tabla.getSelectedColumn();
                    if(columna == 3){
                        //Remover
                    }
                }
            }
        });
      
        // Regresion lineal:
        //Regresion Lineal:
        // Create dataset  
        XYDataset dataset = createDataset();  

        // Create chart  
        JFreeChart chart = ChartFactory.createScatterPlot(  
            "Boys VS Girls weight comparison chart",   
            "X-Axis",
            "Y-Axis", 
            dataset,
            PlotOrientation.VERTICAL,
            true, // include legend
            true, // tooltips
            false // urls
            );  


        //Changes background color  
        XYPlot plot = (XYPlot)chart.getPlot();  
        plot.setBackgroundPaint(new Color(255,228,196));  
        XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer();
        renderer.setSeriesLinesVisible(0, false);
        renderer.setSeriesLinesVisible(1, false);
        renderer.setSeriesLinesVisible(2, true);
        plot.setRenderer(renderer);

        // Create Panel  
        ChartPanel chartPanel = new ChartPanel((JFreeChart) chart);
        chartPanel.setMouseWheelEnabled(true);
        chartPanel.setMaximumDrawHeight(regresion_Lineal_JPanel.getMaximumSize().height);
        chartPanel.setMaximumDrawWidth(regresion_Lineal_JPanel.getMaximumSize().width);
        chartPanel.setMaximumSize(regresion_Lineal_JPanel.getMaximumSize());
        regresion_Lineal_JPanel.add(chartPanel);
        
        
        // Estadisticas curso:
        
        //finalizar_Curso_JButton.setVisible(false);
        estadisticas_JScrollPane.getViewport().setOpaque(false);
        estadisticas_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        estadisticas_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        estadisticas_JTable.getTableHeader().setFont(gadugi);
        estadisticas_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        
        String tarea_Calificada,calificacion, promedio_Curso,prediccion, fecha_Calificacion;
        boolean rumbo;
        
        tarea_Calificada = (CourseRoom.Utilerias().job().field());
        calificacion = (String.valueOf(CourseRoom.Utilerias().number().numberBetween(1, 10)));
        promedio_Curso = (String.valueOf(CourseRoom.Utilerias().number().randomDouble(2, 1, 100)));
        prediccion = (String.valueOf(CourseRoom.Utilerias().number().randomDouble(2, 1, 100)));
        fecha_Calificacion = CourseRoom.Utilerias().Fecha_Hora_Local();
        rumbo = CourseRoom.Utilerias().bool().bool();

        Agregar_Estadistica(tarea_Calificada, calificacion, promedio_Curso, prediccion, rumbo, fecha_Calificacion);
        
        // Editar curso:
        editar_Descripcion_JTextPane.setText(descripcion_Curso_JTextPane.getText());
        editar_Descripcion_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        editar_Descripcion_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        editar_Tematicas_JScrollPane.getViewport().setOpaque(false);
        editar_Tematicas_JScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        editar_Tematicas_JScrollPane.getHorizontalScrollBar().setUnitIncrement(15);
        
        editar_Tematicas_JTable.getTableHeader().setFont(gadugi);
        editar_Tematicas_JTable.setDefaultRenderer(Celda_Renderer.class, new Celda_Renderer());
        
        Agregar_Interes_Tematica_Edicion(id, tematica);
        
        try {
            datagramSocket = new DatagramSocket(9007);
            conexion_Notificador = new Conexion_Notificador_Curso();
            conexion_Notificador.start();
        } catch (SocketException ex) {
            System.err.println(ex.getMessage());
        }
        
        Colorear_Componentes();
    }

    @Override
    public void Colorear_Componentes() {
        
        titulo_JPanel.setBackground(CourseRoom.Utilerias().Segundo_Color());
        
        titulo_JLabel.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        titulo_JLabel.setBackground(CourseRoom.Utilerias().Tercer_Color());
        
        regresar_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
        actualizar_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());

        Carta_Visible();
        
        enviar_Archivo_Chat_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
        
        // Informacion curso:
        
        Font fuente = new Font("Segoe UI", 0, 18);
        BevelBorder borde_Linea = new BevelBorder(BevelBorder.LOWERED);
        TitledBorder borde_Titulo = new TitledBorder(borde_Linea, "Descripci√≥n Del Curso", TitledBorder.CENTER,
                TitledBorder.TOP,  fuente, CourseRoom.Utilerias().Primer_Color_Fuente());

        descripcion_Curso_JTextPane.setBorder(borde_Titulo);
        
        tematicas_JTable.setBackground(CourseRoom.Utilerias().Primer_Color());
        tematicas_JTable.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        
        tematicas_JTable.getTableHeader().setBackground(CourseRoom.Utilerias().Tercer_Color());
        tematicas_JTable.getTableHeader().setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        tematicas_JTable.setGridColor(CourseRoom.Utilerias().Segundo_Color());
        
        tematicas_JTable.setSelectionBackground(CourseRoom.Utilerias().Segundo_Color());
        tematicas_JTable.setSelectionForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
        
        descripcion_Curso_JTextPane.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        
        fecha_Creacion_JLabel.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        
        DefaultTableModel modelo = (DefaultTableModel) tematicas_JTable.getModel();
        Celda_Renderer celda;
        for (int i = 0; i < modelo.getRowCount(); i++) {
            celda = (Celda_Renderer) modelo.getValueAt(i, 0);
            celda.Color_Fuente(CourseRoom.Utilerias().Primer_Color_Fuente());
        }
        
        //Tareas:
        tareas_JTable.setBackground(CourseRoom.Utilerias().Primer_Color());
        tareas_JTable.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        
        tareas_JTable.getTableHeader().setBackground(CourseRoom.Utilerias().Tercer_Color());
        tareas_JTable.getTableHeader().setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        tareas_JTable.setGridColor(CourseRoom.Utilerias().Segundo_Color());
        
        tareas_JTable.setSelectionBackground(CourseRoom.Utilerias().Segundo_Color());
        tareas_JTable.setSelectionForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
        
        crear_Tarea_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        crear_Tarea_JButton.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());

        modelo = (DefaultTableModel) tareas_JTable.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            for (int j = 0; j < modelo.getColumnCount(); j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias().Primer_Color_Fuente());
            }
        }

        
        //Miembros:
        miembros_JTable.setBackground(CourseRoom.Utilerias().Primer_Color());
        miembros_JTable.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        
        miembros_JTable.getTableHeader().setBackground(CourseRoom.Utilerias().Tercer_Color());
        miembros_JTable.getTableHeader().setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        miembros_JTable.setGridColor(CourseRoom.Utilerias().Segundo_Color());
        
        miembros_JTable.setSelectionBackground(CourseRoom.Utilerias().Segundo_Color());
        miembros_JTable.setSelectionForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
        
        modelo = (DefaultTableModel) miembros_JTable.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            for (int j = 0; j < modelo.getColumnCount(); j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias().Primer_Color_Fuente());
            }
        }
        
        // Chat
        
        redactar_Mensaje_Chat_JTextField.setBackground(CourseRoom.Utilerias().Primer_Color());
        redactar_Mensaje_Chat_JTextField.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        enviar_Mensaje_Chat_JPanel.setBackground(CourseRoom.Utilerias().Segundo_Color());
        
        mensajes_Chat_JTable.setBackground(CourseRoom.Utilerias().Primer_Color());
        mensajes_Chat_JTable.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        
        mensajes_Chat_JTable.getTableHeader().setBackground(CourseRoom.Utilerias().Tercer_Color());
        mensajes_Chat_JTable.getTableHeader().setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        mensajes_Chat_JTable.setGridColor(CourseRoom.Utilerias().Segundo_Color());
        
        mensajes_Chat_JTable.setSelectionBackground(CourseRoom.Utilerias().Segundo_Color());
        mensajes_Chat_JTable.setSelectionForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
        
        modelo = (DefaultTableModel) mensajes_Chat_JTable.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            for (int j = 0; j < modelo.getColumnCount(); j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias().Primer_Color_Fuente());
            }
        }

        //Materiales:
        materiales_JTable.setBackground(CourseRoom.Utilerias().Primer_Color());
        materiales_JTable.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        
        materiales_JTable.getTableHeader().setBackground(CourseRoom.Utilerias().Tercer_Color());
        materiales_JTable.getTableHeader().setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        materiales_JTable.setGridColor(CourseRoom.Utilerias().Segundo_Color());
        
        materiales_JTable.setSelectionBackground(CourseRoom.Utilerias().Segundo_Color());
        materiales_JTable.setSelectionForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());

        modelo = (DefaultTableModel) materiales_JTable.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            for (int j = 0; j < modelo.getColumnCount(); j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias().Primer_Color_Fuente());
            }
        }
        
        compartir_Materiales_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        compartir_Materiales_JButton.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
       
        // Grupos:
        
        grupos_JTable.setBackground(CourseRoom.Utilerias().Primer_Color());
        grupos_JTable.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        
        grupos_JTable.getTableHeader().setBackground(CourseRoom.Utilerias().Tercer_Color());
        grupos_JTable.getTableHeader().setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        grupos_JTable.setGridColor(CourseRoom.Utilerias().Segundo_Color());
        
        grupos_JTable.setSelectionBackground(CourseRoom.Utilerias().Segundo_Color());
        grupos_JTable.setSelectionForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
        
        generar_Grupos_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
        generar_Grupos_JButton.setForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
        
        modelo = (DefaultTableModel) grupos_JTable.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            for (int j = 0; j < modelo.getColumnCount(); j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias().Primer_Color_Fuente());
            }
        }
        
        // Regresion lineal:
        
        // Estadisticas
        
        estadisticas_JTable.setBackground(CourseRoom.Utilerias().Primer_Color());
        estadisticas_JTable.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        
        estadisticas_JTable.getTableHeader().setBackground(CourseRoom.Utilerias().Tercer_Color());
        estadisticas_JTable.getTableHeader().setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        estadisticas_JTable.setGridColor(CourseRoom.Utilerias().Segundo_Color());
        
        estadisticas_JTable.setSelectionBackground(CourseRoom.Utilerias().Segundo_Color());
        estadisticas_JTable.setSelectionForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());

        modelo = (DefaultTableModel) estadisticas_JTable.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            for (int j = 0; j < modelo.getColumnCount(); j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias().Primer_Color_Fuente());
            }
        }
        
        //Editar curso:
        editar_Descripcion_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        editar_Descripcion_JTextPane.setBackground(CourseRoom.Utilerias().Tercer_Color());
        editar_Descripcion_JTextPane.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        editar_Descripcion_JTextPane.setCaretColor(CourseRoom.Utilerias().Tercer_Color_Fuente());
        cambiar_Imagen_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
        cambiar_Imagen_JButton.setForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
        eliminar_Curso_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        eliminar_Curso_JButton.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        editar_Nombre_JLabel.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        editar_Descripcion_JLabel.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        editar_Nombre_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        editar_Nombre_JButton.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        editar_Nombre_JTextField.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        editar_Nombre_JTextField.setCaretColor(CourseRoom.Utilerias().Tercer_Color_Fuente());
        editar_Nombre_JTextField.setBackground(CourseRoom.Utilerias().Tercer_Color());
        
        tematicas_AutoCompletionComboBox.setBackground(CourseRoom.Utilerias().Segundo_Color());
        tematicas_AutoCompletionComboBox.setForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());
        
        editar_Tematicas_JTable.setBackground(CourseRoom.Utilerias().Primer_Color());
        editar_Tematicas_JTable.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());

        editar_Tematicas_JTable.getTableHeader().setBackground(CourseRoom.Utilerias().Tercer_Color());
        editar_Tematicas_JTable.getTableHeader().setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        editar_Tematicas_JTable.setGridColor(CourseRoom.Utilerias().Segundo_Color());

        editar_Tematicas_JTable.setSelectionBackground(CourseRoom.Utilerias().Segundo_Color());
        editar_Tematicas_JTable.setSelectionForeground(CourseRoom.Utilerias().Segundo_Color_Fuente());

        modelo = (DefaultTableModel) editar_Tematicas_JTable.getModel();
        for (int i = 0; i < modelo.getRowCount(); i++) {
            for (int j = 0; j < modelo.getColumnCount(); j++) {
                celda = (Celda_Renderer) modelo.getValueAt(i, j);
                celda.Color_Fuente(CourseRoom.Utilerias().Primer_Color_Fuente());
            }
        }

        editar_Tematicas_JLabel.setForeground(CourseRoom.Utilerias().Primer_Color_Fuente());
        
        agregar_Tematica_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
        agregar_Tematica_JButton.setForeground(CourseRoom.Utilerias().Tercer_Color_Fuente());
        
    }
    
    public void Enviar_Materiales() {
        Escogedor_Archivos escogedor_Archivos = new Escogedor_Archivos();
        int resultado = escogedor_Archivos.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File[] archivos_Abiertos = escogedor_Archivos.getSelectedFiles();
            
            if(archivos_Abiertos != null){
                
                try {
                    Celda_Renderer[] celdas = new Celda_Renderer[4];
                    long tamanio;
                    boolean archivo_Mayor = false;
                    DefaultTableModel modelo = (DefaultTableModel) materiales_JTable.getModel();
                    Image icono = ImageIO.read(getClass().getResource("/recursos/iconos/box.png"));
                    ImageIcon icono_Abrir = new ImageIcon(icono);
                    icono = ImageIO.read(getClass().getResource("/recursos/iconos/close.png"));
                    ImageIcon icono_Remover = new ImageIcon(icono);
                    Celda_Renderer celda;
                    for (File archivo_Abierto : archivos_Abiertos) {
                        tamanio = FileUtils.sizeOf(archivo_Abierto);
                        tamanio = (0 != tamanio) ? tamanio / 1000 / 1000 : 0;
                        if(tamanio < 75){
                        celda = new Celda_Renderer(icono_Abrir,archivo_Abierto.getName(),archivo_Abierto.getAbsolutePath());
                        celdas[0] = celda;
                        celda = new Celda_Renderer(Perfil_Profesor_Panel.Nombre_Completo(),"");
                        celdas[1] = celda;
                        celda = new Celda_Renderer(CourseRoom.Utilerias().Fecha_Hora_Local(),"");
                        celdas[2] = celda;
                        celda = new Celda_Renderer(icono_Remover,"");
                        celdas[3] = celda;
                        modelo.addRow(celdas);
                        materiales_JTable.setRowHeight(modelo.getRowCount()-1, CourseRoom.Utilerias().Altura_Fila_Tabla(archivo_Abierto.getName().length()));
                    }else{
                            archivo_Mayor = true;
                        }
                    }
                    if(archivo_Mayor){
                        CourseRoom.Utilerias().Mensaje_Alerta("Alerta!!!","Hay Archivo(s) Que Superan El Tama√±o Aceptado De Subida");
                    }                 
                    icono.flush();
                } catch (IOException ex) {
                    CourseRoom.Utilerias().Mensaje_Error("Error Al Subir El Archivo",ex.getMessage());
                }
            }
        }
    }
    
    @Override
    public void Enviar_Mensaje() {
        
        String mensaje = redactar_Mensaje_Chat_JTextField.getText();
        if (!mensaje.isEmpty() && !mensaje.isBlank()) {
            String emisor = Perfil_Profesor_Panel.Nombre_Completo();
            String fecha = CourseRoom.Utilerias().Fecha_Hora_Local();
            Celda_Renderer[] celdas = new Celda_Renderer[3];
  
            Celda_Renderer celda;
            celda = new Celda_Renderer(emisor);
            celdas[0] = celda;
            celda = new Celda_Renderer(mensaje);
            celdas[1] = celda;
            celda = new Celda_Renderer(fecha);
            celdas[2] = celda;
            DefaultTableModel modelo = (DefaultTableModel) mensajes_Chat_JTable.getModel();
            modelo.addRow(celdas);
            mensajes_Chat_JTable.setRowHeight(mensajes_Chat_JTable.getRowCount()-1, CourseRoom.Utilerias().Altura_Fila_Tabla(mensaje.length()));
            ResponseModel responseModel = CourseRoom.Solicitudes().Enviar_Mensaje_Curso(mensaje, new byte[]{}, "", Tablero_Profesor_Panel.Id_Usuario(), Id_Curso);
                            if(responseModel.Is_Success()){
                                CourseRoom.Utilerias().Mensaje_Alerta("Alerta!!!","Hay Archivo(s) Que Superan El Tama√±o Aceptado De Subida");
                            }else{
                                CourseRoom.Utilerias().Mensaje_Alerta("Alerta!!!","Hay Archivo(s) Que Superan El Tama√±o Aceptado De Subida");
                            }
            redactar_Mensaje_Chat_JTextField.setText("");
            redactar_Mensaje_Chat_JTextField.setCaretPosition(0);
        }
    }

    
    public void Enviar_Archivo() {
        Escogedor_Archivos escogedor_Archivos = new Escogedor_Archivos();
        int resultado = escogedor_Archivos.showOpenDialog(this);

        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivo_Abierto = escogedor_Archivos.getSelectedFile();

            if (archivo_Abierto != null) {
                try {
                    
                    long tamanio = FileUtils.sizeOf(archivo_Abierto);
                    tamanio = (0 != tamanio) ? tamanio / 1000 / 1000 : 0;
                    if(tamanio < 35){

                        String ruta = archivo_Abierto.getAbsolutePath();
                        String nombre_Archivo = archivo_Abierto.getName();
                        String emisor = Perfil_Profesor_Panel.Nombre_Completo();
                       
                        ResponseModel response = CourseRoom.Solicitudes().Enviar_Mensaje_Curso(nombre_Archivo, 
                                FileUtils.readFileToByteArray(archivo_Abierto), 
                                FilenameUtils.getExtension(nombre_Archivo), 
                                Tablero_Profesor_Panel.Id_Usuario(), Id_Curso);
                        String fecha = CourseRoom.Utilerias().Fecha_Hora_Local();
                        if(response.Is_Success()){
                            Celda_Renderer[] celdas = new Celda_Renderer[3];
                            DefaultTableModel modelo = (DefaultTableModel) mensajes_Chat_JTable.getModel();
                            Celda_Renderer celda;
                            Image icono = ImageIO.read(getClass().getResource("/recursos/iconos/box.png"));
                            ImageIcon icono_Abrir = new ImageIcon(icono);
                            celda = new Celda_Renderer(emisor);
                            celdas[0] = celda;
                            celda = new Celda_Renderer(icono_Abrir,nombre_Archivo,ruta);
                            celdas[1] = celda;
                            celda = new Celda_Renderer(fecha);
                            celdas[2] = celda;
                            modelo.addRow(celdas);
                            mensajes_Chat_JTable.setRowHeight(mensajes_Chat_JTable.getRowCount()-1, CourseRoom.Utilerias().Altura_Fila_Tabla(nombre_Archivo.length()));
                            icono.flush();
                            CourseRoom.Utilerias().Mensaje_Informativo("Curso",response.Mensaje());
                        }else{
                            CourseRoom.Utilerias().Mensaje_Alerta("Alerta!!!",response.Mensaje());
                        }
                       
                    }
                    else{
                        CourseRoom.Utilerias().Mensaje_Alerta("Alerta!!!","El Archivo Supera El Tama√±o Aceptado De Subida");
                    }
                  
                } catch (IOException ex) {
                }
            }
        }else{
            CourseRoom.Utilerias().Mensaje_Alerta("Alerta!!!","El Archivo No Tiene Un Formato Adecuado");
        }
    }
    
    @Override
    public void Limpiar() {
        DefaultTableModel modelo = (DefaultTableModel) tematicas_JTable.getModel();
        modelo.setRowCount(0);
        modelo = (DefaultTableModel) tareas_JTable.getModel();
        modelo.setRowCount(0);
        modelo = (DefaultTableModel) miembros_JTable.getModel();
        modelo.setRowCount(0);
        modelo = (DefaultTableModel) mensajes_Chat_JTable.getModel();
        modelo.setRowCount(0);
        modelo = (DefaultTableModel) materiales_JTable.getModel();
        modelo.setRowCount(0);
        modelo = (DefaultTableModel) estadisticas_JTable.getModel();
        modelo.setRowCount(0);
        modelo = (DefaultTableModel) editar_Tematicas_JTable.getModel();
        modelo.setRowCount(0);
        modelo = (DefaultTableModel) grupos_JTable.getModel();
        modelo.setRowCount(0);
        
    }

    @Override
    public void Carta_Visible() {
        switch (carta_Visible) {
            case 0:
                informacion_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                grupos_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                editar_Curso_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                break;
            case 1:
                informacion_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                grupos_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                editar_Curso_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                break;
            case 2:
                informacion_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                grupos_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                editar_Curso_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                break;
            case 3:
                informacion_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                grupos_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                editar_Curso_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                break;
            case 4:
                informacion_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
                grupos_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                editar_Curso_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                break;
            case 5:
                informacion_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                grupos_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                editar_Curso_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                break;
            case 6:
                informacion_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                grupos_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                editar_Curso_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                break;
            case 7:
                informacion_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                grupos_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
                editar_Curso_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
            break;
            case 8:
                informacion_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                tareas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                miembros_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                chat_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                materiales_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                grupos_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                regresion_Lineal_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                estadisticas_JButton.setBackground(CourseRoom.Utilerias().Segundo_Color());
                editar_Curso_JButton.setBackground(CourseRoom.Utilerias().Tercer_Color());
            break;
            
        }
    }
    
    public int Id_Curso() {
        return Id_Curso;
    }
}
